#!wing
#!version=3.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
testing.auto-test-file-specs = ('*test*',)
testing.test-framework = {None: 'nose'}
[user attributes]
cache.last-mime-type = {loc('unknown:<untitled> #1'): 'text/x-diff',
                        loc('unknown:<untitled> #2'): 'text/x-diff',
                        loc('unknown:<untitled> #3'): 'text/x-diff',
                        loc('unknown:<untitled> #4'): 'text/x-diff',
                        loc('unknown:<untitled> #5'): 'text/x-diff',
                        loc('unknown:<untitled> #6'): 'text/x-diff',
                        loc('unknown:<untitled> #7'): 'text/x-diff',
                        loc('unknown:<untitled> #8'): 'text/x-diff',
                        loc('unknown:<untitled> #9'): 'text/x-diff'}
debug.err-values = {None: {}}
debug.var-col-widths = [0.38677685950413221,
                        0.61322314049586779]
edit.dont-ask-to-fix-inconsistent-indents = {loc('settings/defaultProjectSettings.xml'): True,
        loc('settings/repositorySettings.xml'): True,
        loc('settings/users.xml'): True}
edit.file-encoding = {loc('../../../../../Documents/cherry/cherry_helloWorld.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/PyKDE/phonon_example1.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/cacheTest_v001.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/pythonKDevelopTest/gulsene.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/python_decorators_v001.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/python_decorators_v003.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/test_v001.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/structure_addFolder.py'): ''\
        'UTF-8',
                      loc('../../../../../geany_cflags_generator.py'): 'UTF-'\
        '8',
                      loc('../AssetType.py'): 'UTF-8',
                      loc('../Cache.py'): 'UTF-8',
                      loc('../MainWindow.py'): 'UTF-8',
                      loc('../User.py'): 'UTF-8',
                      loc('../oyBallisticRuler.py'): 'UTF-8',
                      loc('../oyBlootooth.py'): 'UTF-8',
                      loc('../oyPivotSwithcer.py'): 'UTF-8',
                      loc('Range.py'): 'UTF-8',
                      loc('Structure.py'): 'UTF-8',
                      loc('dataModels/databaseModel.py'): 'UTF-8',
                      loc('settings/defaultProjectSettings.xml'): 'utf_8',
                      loc('settings/environmentSettings.xml'): 'utf_8',
                      loc('settings/repositorySettings.xml'): 'utf_8',
                      loc('tests/__init__.py'): 'UTF-8',
                      loc('tests/models/__init__.py'): 'UTF-8',
                      loc('tools/cacheTest.py'): 'UTF-8',
                      loc('../oyProjectManagerUI_compiler.py'): 'UTF-8',
                      loc('../oyShaderAssigner.py'): 'UTF-8',
                      loc('../projManTester_v001.py'): 'UTF-8',
                      loc('../../../pythonArgsTest.py'): 'UTF-8',
                      loc('../../../../../test.cpp'): 'UTF-8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'lWw5QFQu6T4HxJADBazUBhNfwK'\
        'HIdNJ5',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   2],
                 'notebook_display': 'normal',
                 'notebook_percent': 0.23145245559038663,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(5,)],
                                 'selected-nodes': [(12,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('python-shell',
                               'tall',
                               0,
                               {'attrib-starts': [],
                                'first-line': 0,
                                'folded-linenos': [],
                                'history': {None: ["ozgur.first_name = 'Atil"\
        "la Ozgur'\n",
        'ozgur.created_by = models.User.query.first()\n',
        'models.session.commit()\n',
        'ozgur.created_by\n',
        'ozgur.created_by.login_name()\n',
        'ozgur.created_by.login_name\n',
        'aDict = dict()\n',
        "aDict['a'] = 1\n",
        "aDict['b'] = 2\n",
        'len(aDict)\n',
        'aList = [1,2,3,4]\n',
        'bList = [4,5,6,7]\n',
        'aList += bList\n',
        'print aList\n',
        'myProj.sequenceNames\n',
        'myProj.sequenceNames()\n',
        'myTupple = ()\n',
        'myTupple = (0,1)\n',
        'myTupple[0][1]\n',
        'myTupple = ((0,1))\n',
        'myTupple[0]\n',
        'myTupple[1]\n',
        'from oyProjectManager.models import asset\n',
        'mySeq.getAllAssets()\n',
        "myAsset.extension = '10'\n",
        'print myAsset.extension\n',
        "myAsset.extension = 'ma'\n",
        'myAsset.extension()\n',
        'from oyProjectManager.models import project, asset\n',
        "myProj = project.Project('PRENSESIN_UYKUSU')\n",
        'mySeq = project.Sequence( myProj, myProj.sequenceNames()[0])\n',
        'myAsset = mySeq.getAllAssets()[0]\n',
        'myAsset.extension.doc\n',
        'help(myAsset.extension)\n',
        'myAsset.extension\n',
        'import cPickle\n',
        'from oyProjectManager.models import asset,project\n',
        'repo.projects()\n',
        'repo.projects\n',
        'for project in projects:\n',
        '\tprint project\n',
        'for projectName in repo.projects:\n',
        '\tprint projectName\n',
        'from oyProjectManager.models import asset,project,repository\n',
        "myProject.name = 'OZGUR')\n",
        'myProject = project.Project()\n',
        "myProject.name = 'OZGUR'\n",
        "myProject = project.Project('OZGUR')\n",
        'myProject.exists\n',
        'myProject.create()\n',
        'myProj.name\n',
        'myProj.exists\n',
        'from oyProjectManager.models import project\n',
        "myProj = project.Project('OZGUR')\n",
        'myProj.create()\n',
        'class aClass(object):\n',
        '\tpass\n',
        'anObject = aClass()\n',
        'anObject.__class__.name()\n',
        'anObject.__class__.name\n',
        'anObject.__str__\n',
        'anObject.__str__()\n',
        'anObject.__subclasshook__()\n',
        'anObject.__class__.__class__\n',
        'anObject.__class__.__repr__\n',
        'anObject.__class__.__repr__()\n',
        'anObject.__class__.__doc__()\n',
        'anObject.__class__.__doc__\n',
        'type(anObject)\n',
        'anObject.__class__\n',
        'assetManager.UI()\n',
        'import pymel.core as pm\n',
        'from oyProjectManager.ui import assetManager\n',
        "assetManager.UI('MAYA')\n",
        'os.tempnam\n',
        'os.tempnam()\n',
        'os.path.dirname( os.tempnam() )\n',
        'print tempFolder\n',
        'import tempfile\n',
        'tempfile.gettempdir\n',
        'tempfile.gettempdir()\n',
        'tempfile.\n',
        'tempfile.mkdtemp()\n',
        'import os\n',
        'import stat\n',
        'import shutil\n',
        'repo.userNames()\n',
        'repo.userNames\n',
        'from oyProjectManager.models import repository\n',
        'repo = repository.Repository()\n',
        'repo.userInitials\n',
        "''.strip()\n",
        "'  '.strip()\n",
        "a_dic = {'test':1, 'test2':2}\n",
        "a_dic['test']\n",
        "a_dic.popitem('test')\n",
        "a_dic.pop('test')\n",
        'a_dic\n',
        'from xml.dom import minidom\n',
        "xmlFile = minidom.parse('/tmp/tmpOU0nZl/repositorySettings.xml')\n"]},
                                'sel-line': 3,
                                'sel-line-start': 161,
                                'selection_end': 165,
                                'selection_start': 165}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'column-w'\
        'idths': [1.0],
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('templates',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'html': [],
        u'py': []}})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          4],
        'notebook_display': 'tabs only',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {'tree-state': []}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['dupJoint\n',
        'import oyProjectManager as oyPM\n']},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 4,
                       'selection_start': 4}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.hg',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 4,
                       'folded-linenos': [],
                       'history': {None: ['import os\n',
        'os.name\n',
        'os.uname\n',
        'os.uname()\n',
        'print os.name\n',
        'import ply.lex\n',
        'clear\n',
        'cls\n',
        'import cherry\n',
        'import cherrypy\n',
        "myRotOrder.getAxis('1')\n",
        "myRotOrder = rotationOrder('0')\n",
        'myRotOrder.getAxis(1)\n',
        'import sys\n',
        'print path for sys.path\n',
        'sys.path\n',
        'for path in sys.path: print path\n',
        'import pymel\n',
        'import pymel as pm\n',
        'pm.__version__\n',
        'myRotOrder = oyAutoRig.rotationOrder()\n',
        "myRotOrder = oyAutoRig.rotationOrder('1')\n",
        'import oyAutoRig\n',
        "myRotOrder = oyAutoRig.rotationOrder('0')\n",
        'testObj = pm.PyNode\n',
        "myLogFile = open('/var/log/kern.log','r')\n",
        'myLogFile.newlines\n',
        'myLogFile.newlines()\n',
        'myLogFile.readlines\n',
        'myLogFile.readlines()\n',
        'class AClass(object):\n',
        '\tdef __init__(self, arg1, arg2):\n',
        '\t\tpass\n',
        'AClass.__dict__()\n',
        'AClass.__dict__\n',
        '**AClass.__dict__\n',
        'locals(AClass)\n',
        'AClasslocals()\n',
        'AClass.locals()\n',
        'AClass.__hash__\n',
        'AClass.__hash__()\n',
        'AClass.__hash__[0]\n',
        'AClass.__class__\n']},
                       'sel-line': 3,
                       'sel-line-start': 161,
                       'selection_end': 165,
                       'selection_start': 165}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'environmentFactory',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'True',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': '',
                       'recent-filters': None}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'column-widths': [0.39346590909090912,
        0.60653409090909094],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.50410958904109593,
        ('vertical',
         0.0,
         ('vertical',
          0.0,
          {'bookmarks': ([[loc('models/abstractClasses.py'),
                           {'attrib-starts': [('Environment',
        26),
        ('Environment.checkReferenceVersions',
         167)],
                            'first-line': 154,
                            'folded-linenos': [],
                            'sel-line': 175,
                            'sel-line-start': 4317,
                            'selection_end': 4321,
                            'selection_start': 4321},
                           1291794372.7967091],
                          [loc('models/asset.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794412.408803],
                          [loc('models/project.py'),
                           {'attrib-starts': [('Sequence',
        190),
        ('Sequence.__init__',
         199)],
                            'first-line': 195,
                            'folded-linenos': [],
                            'sel-line': 223,
                            'sel-line-start': 6174,
                            'selection_end': 6203,
                            'selection_start': 6203},
                           1291794448.2259221],
                          [loc('models/repository.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 20,
                            'sel-line-start': 360,
                            'selection_end': 360,
                            'selection_start': 360},
                           1291794479.585593],
                          [loc('models/user.py'),
                           {'attrib-starts': [('User',
        5)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 7,
                            'sel-line-start': 153,
                            'selection_end': 160,
                            'selection_start': 160},
                           1291794521.3976231],
                          [loc('tests/models/test_repository.py'),
                           {'attrib-starts': [('RepositoryTesterWithEnv',
        105),
        ('RepositoryTesterWithEnv.test_create_project',
         189)],
                            'first-line': 158,
                            'folded-linenos': [],
                            'sel-line': 210,
                            'sel-line-start': 6297,
                            'selection_end': 6301,
                            'selection_start': 6301},
                           1291794544.3179059],
                          [loc('models/environments/nukeEnv.py'),
                           {'attrib-starts': [('NukeEnvironment',
        15),
        ('NukeEnvironment.__init__',
         22)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 30,
                            'sel-line-start': 732,
                            'selection_end': 771,
                            'selection_start': 771},
                           1291794611.399868],
                          [loc('ui/assetCreator_UI.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794635.9552441],
                          [loc('ui/assetManager2.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794641.6869681],
                          [loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog._setupSignals',
         102)],
                            'first-line': 96,
                            'folded-linenos': [],
                            'sel-line': 109,
                            'sel-line-start': 3306,
                            'selection_end': 3315,
                            'selection_start': 3315},
                           1291794675.5643239],
                          [loc('ui/assetReplacer.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794710.2885871],
                          [loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.__init__',
         47)],
                            'first-line': 31,
                            'folded-linenos': [],
                            'sel-line': 48,
                            'sel-line-start': 1382,
                            'selection_end': 1428,
                            'selection_start': 1422},
                           1291794728.560308],
                          [loc('ui/projectManager.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.__init__',
         42)],
                            'first-line': 18,
                            'folded-linenos': [],
                            'sel-line': 42,
                            'sel-line-start': 1052,
                            'selection_end': 1081,
                            'selection_start': 1075},
                           1291794760.889441],
                          [loc('ui/shotEditor.py'),
                           {'attrib-starts': [('MainDialog',
        34),
        ('MainDialog.__init__',
         42)],
                            'first-line': 18,
                            'folded-linenos': [],
                            'sel-line': 42,
                            'sel-line-start': 1082,
                            'selection_end': 1133,
                            'selection_start': 1127},
                           1291794827.329248],
                          [loc('ui/singletonQApplication.py'),
                           {'attrib-starts': [('QApplication',
        5),
        ('QApplication.__new__',
         10)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 14,
                            'sel-line-start': 407,
                            'selection_end': 415,
                            'selection_start': 415},
                           1291794850.702116],
                          [loc('ui/uiCompiler.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 28,
                            'sel-line-start': 1587,
                            'selection_end': 1696,
                            'selection_start': 1696},
                           1291794872.044311],
                          [loc('utils/cache.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 3,
                            'sel-line-start': 14,
                            'selection_end': 14,
                            'selection_start': 14},
                           1291794901.9703031],
                          [loc('utils/rangeTools.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794967.0944149],
                          [loc('setup.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 15,
                            'sel-line-start': 542,
                            'selection_end': 596,
                            'selection_start': 596},
                           1291794978.733223],
                          [loc('__init__.py'),
                           {'attrib-starts': [],
                            'first-line': 124,
                            'folded-linenos': [],
                            'sel-line': 185,
                            'sel-line-start': 8691,
                            'selection_end': 8691,
                            'selection_start': 8691},
                           1291795074.672369]],
                         19),
           'current-loc': loc('__init__.py'),
           'editor-states': {loc('__init__.py'): {'attrib-starts': [],
        'first-line': 124,
        'folded-linenos': [],
        'sel-line': 185,
        'sel-line-start': 8691,
        'selection_end': 8691,
        'selection_start': 8691}},
           'has-focus': False},
          {'bookmarks': ([[loc('models/abstractClasses.py'),
                           {'attrib-starts': [('Environment',
        26),
        ('Environment.checkReferenceVersions',
         167)],
                            'first-line': 154,
                            'folded-linenos': [],
                            'sel-line': 175,
                            'sel-line-start': 4317,
                            'selection_end': 4321,
                            'selection_start': 4321},
                           1291794372.7373991],
                          [loc('models/asset.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794412.3493731],
                          [loc('models/project.py'),
                           {'attrib-starts': [('Sequence',
        190),
        ('Sequence.__init__',
         199)],
                            'first-line': 195,
                            'folded-linenos': [],
                            'sel-line': 223,
                            'sel-line-start': 6174,
                            'selection_end': 6203,
                            'selection_start': 6203},
                           1291794448.166348],
                          [loc('models/repository.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 20,
                            'sel-line-start': 360,
                            'selection_end': 360,
                            'selection_start': 360},
                           1291794479.522465],
                          [loc('models/user.py'),
                           {'attrib-starts': [('User',
        5)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 7,
                            'sel-line-start': 153,
                            'selection_end': 160,
                            'selection_start': 160},
                           1291794521.338146],
                          [loc('tests/models/test_repository.py'),
                           {'attrib-starts': [('RepositoryTesterWithEnv',
        105),
        ('RepositoryTesterWithEnv.test_create_project',
         189)],
                            'first-line': 158,
                            'folded-linenos': [],
                            'sel-line': 210,
                            'sel-line-start': 6297,
                            'selection_end': 6301,
                            'selection_start': 6301},
                           1291794544.257786],
                          [loc('models/environments/nukeEnv.py'),
                           {'attrib-starts': [('NukeEnvironment',
        15),
        ('NukeEnvironment.__init__',
         22)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 30,
                            'sel-line-start': 732,
                            'selection_end': 771,
                            'selection_start': 771},
                           1291794611.3396609],
                          [loc('ui/assetCreator_UI.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794635.8974831],
                          [loc('ui/assetManager2.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794641.627737],
                          [loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog._setupSignals',
         102)],
                            'first-line': 96,
                            'folded-linenos': [],
                            'sel-line': 109,
                            'sel-line-start': 3306,
                            'selection_end': 3315,
                            'selection_start': 3315},
                           1291794675.5046549],
                          [loc('ui/assetReplacer.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794710.22879],
                          [loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.__init__',
         47)],
                            'first-line': 31,
                            'folded-linenos': [],
                            'sel-line': 48,
                            'sel-line-start': 1382,
                            'selection_end': 1428,
                            'selection_start': 1422},
                           1291794728.5002971],
                          [loc('ui/projectManager.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.__init__',
         42)],
                            'first-line': 18,
                            'folded-linenos': [],
                            'sel-line': 42,
                            'sel-line-start': 1052,
                            'selection_end': 1081,
                            'selection_start': 1075},
                           1291794760.8351109],
                          [loc('ui/shotEditor.py'),
                           {'attrib-starts': [('MainDialog',
        34),
        ('MainDialog.__init__',
         42)],
                            'first-line': 18,
                            'folded-linenos': [],
                            'sel-line': 42,
                            'sel-line-start': 1082,
                            'selection_end': 1133,
                            'selection_start': 1127},
                           1291794827.269758],
                          [loc('ui/singletonQApplication.py'),
                           {'attrib-starts': [('QApplication',
        5),
        ('QApplication.__new__',
         10)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 14,
                            'sel-line-start': 407,
                            'selection_end': 415,
                            'selection_start': 415},
                           1291794850.6421759],
                          [loc('ui/uiCompiler.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 28,
                            'sel-line-start': 1587,
                            'selection_end': 1696,
                            'selection_start': 1696},
                           1291794871.9841421],
                          [loc('utils/cache.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 3,
                            'sel-line-start': 14,
                            'selection_end': 14,
                            'selection_start': 14},
                           1291794901.910012],
                          [loc('utils/rangeTools.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794967.0352371],
                          [loc('setup.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 15,
                            'sel-line-start': 542,
                            'selection_end': 596,
                            'selection_start': 596},
                           1291794978.6723289],
                          [loc('__init__.py'),
                           {'attrib-starts': [],
                            'first-line': 124,
                            'folded-linenos': [],
                            'sel-line': 185,
                            'sel-line-start': 8691,
                            'selection_end': 8691,
                            'selection_start': 8691},
                           1291795074.612499]],
                         19),
           'current-loc': loc('__init__.py'),
           'editor-states': {loc('__init__.py'): {'attrib-starts': [],
        'first-line': 124,
        'folded-linenos': [],
        'sel-line': 185,
        'sel-line-start': 8691,
        'selection_end': 8691,
        'selection_start': 8691}},
           'has-focus': False}),
         {'bookmarks': ([[loc('models/abstractClasses.py'),
                          {'attrib-starts': [('Environment',
        26),
        ('Environment.checkReferenceVersions',
         167)],
                           'first-line': 154,
                           'folded-linenos': [],
                           'sel-line': 175,
                           'sel-line-start': 4317,
                           'selection_end': 4321,
                           'selection_start': 4321},
                          1291794372.6740019],
                         [loc('models/asset.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0},
                          1291794412.2896941],
                         [loc('models/project.py'),
                          {'attrib-starts': [('Sequence',
        190),
        ('Sequence.__init__',
         199)],
                           'first-line': 195,
                           'folded-linenos': [],
                           'sel-line': 223,
                           'sel-line-start': 6174,
                           'selection_end': 6203,
                           'selection_start': 6203},
                          1291794448.107131],
                         [loc('models/repository.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 20,
                           'sel-line-start': 360,
                           'selection_end': 360,
                           'selection_start': 360},
                          1291794479.463367],
                         [loc('models/user.py'),
                          {'attrib-starts': [('User',
        5)],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 7,
                           'sel-line-start': 153,
                           'selection_end': 160,
                           'selection_start': 160},
                          1291794521.2782619],
                         [loc('tests/models/test_repository.py'),
                          {'attrib-starts': [('RepositoryTesterWithEnv',
        105),
        ('RepositoryTesterWithEnv.test_create_project',
         189)],
                           'first-line': 158,
                           'folded-linenos': [],
                           'sel-line': 210,
                           'sel-line-start': 6297,
                           'selection_end': 6301,
                           'selection_start': 6301},
                          1291794544.1719999],
                         [loc('models/environments/nukeEnv.py'),
                          {'attrib-starts': [('NukeEnvironment',
        15),
        ('NukeEnvironment.__init__',
         22)],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 30,
                           'sel-line-start': 732,
                           'selection_end': 771,
                           'selection_start': 771},
                          1291794611.2809019],
                         [loc('ui/assetCreator_UI.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0},
                          1291794635.8393819],
                         [loc('ui/assetManager2.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0},
                          1291794641.5677011],
                         [loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog._setupSignals',
         102)],
                           'first-line': 96,
                           'folded-linenos': [],
                           'sel-line': 109,
                           'sel-line-start': 3306,
                           'selection_end': 3315,
                           'selection_start': 3315},
                          1291794675.445724],
                         [loc('ui/assetReplacer.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0},
                          1291794710.168889],
                         [loc('ui/assetUpdater.py'),
                          {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.__init__',
         47)],
                           'first-line': 31,
                           'folded-linenos': [],
                           'sel-line': 48,
                           'sel-line-start': 1382,
                           'selection_end': 1428,
                           'selection_start': 1422},
                          1291794728.4406919],
                         [loc('ui/projectManager.py'),
                          {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.__init__',
         42)],
                           'first-line': 18,
                           'folded-linenos': [],
                           'sel-line': 42,
                           'sel-line-start': 1052,
                           'selection_end': 1081,
                           'selection_start': 1075},
                          1291794760.782021],
                         [loc('ui/shotEditor.py'),
                          {'attrib-starts': [('MainDialog',
        34),
        ('MainDialog.__init__',
         42)],
                           'first-line': 18,
                           'folded-linenos': [],
                           'sel-line': 42,
                           'sel-line-start': 1082,
                           'selection_end': 1133,
                           'selection_start': 1127},
                          1291794827.2099969],
                         [loc('ui/singletonQApplication.py'),
                          {'attrib-starts': [('QApplication',
        5),
        ('QApplication.__new__',
         10)],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 14,
                           'sel-line-start': 407,
                           'selection_end': 415,
                           'selection_start': 415},
                          1291794850.582613],
                         [loc('ui/uiCompiler.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 28,
                           'sel-line-start': 1587,
                           'selection_end': 1696,
                           'selection_start': 1696},
                          1291794871.790061],
                         [loc('utils/cache.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 3,
                           'sel-line-start': 14,
                           'selection_end': 14,
                           'selection_start': 14},
                          1291794901.849813],
                         [loc('utils/rangeTools.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0},
                          1291794966.974268],
                         [loc('setup.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 15,
                           'sel-line-start': 542,
                           'selection_end': 596,
                           'selection_start': 596},
                          1291794978.6117091],
                         [loc('__init__.py'),
                          {'attrib-starts': [],
                           'first-line': 124,
                           'folded-linenos': [],
                           'sel-line': 185,
                           'sel-line-start': 8691,
                           'selection_end': 8691,
                           'selection_start': 8691},
                          1291795074.552635]],
                        19),
          'current-loc': loc('__init__.py'),
          'editor-states': {loc('__init__.py'): {'attrib-starts': [],
        'first-line': 124,
        'folded-linenos': [],
        'sel-line': 185,
        'sel-line-start': 8691,
        'selection_end': 8691,
        'selection_start': 8691}},
          'has-focus': False}),
        ('vertical',
         1.0,
         ('vertical',
          0.0,
          {'bookmarks': ([[loc('models/abstractClasses.py'),
                           {'attrib-starts': [('Environment',
        26),
        ('Environment.checkReferenceVersions',
         167)],
                            'first-line': 154,
                            'folded-linenos': [],
                            'sel-line': 175,
                            'sel-line-start': 4317,
                            'selection_end': 4321,
                            'selection_start': 4321},
                           1291794372.9741681],
                          [loc('models/asset.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794412.5680201],
                          [loc('models/project.py'),
                           {'attrib-starts': [('Sequence',
        190),
        ('Sequence.__init__',
         199)],
                            'first-line': 195,
                            'folded-linenos': [],
                            'sel-line': 223,
                            'sel-line-start': 6174,
                            'selection_end': 6203,
                            'selection_start': 6203},
                           1291794448.426307],
                          [loc('models/repository.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 20,
                            'sel-line-start': 360,
                            'selection_end': 360,
                            'selection_start': 360},
                           1291794479.7421391],
                          [loc('models/user.py'),
                           {'attrib-starts': [('User',
        5)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 7,
                            'sel-line-start': 153,
                            'selection_end': 160,
                            'selection_start': 160},
                           1291794521.5595269],
                          [loc('tests/models/test_repository.py'),
                           {'attrib-starts': [('RepositoryTesterWithEnv',
        105),
        ('RepositoryTesterWithEnv.test_create_project',
         189)],
                            'first-line': 158,
                            'folded-linenos': [],
                            'sel-line': 210,
                            'sel-line-start': 6297,
                            'selection_end': 6301,
                            'selection_start': 6301},
                           1291794544.540266],
                          [loc('models/environments/nukeEnv.py'),
                           {'attrib-starts': [('NukeEnvironment',
        15),
        ('NukeEnvironment.__init__',
         22)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 30,
                            'sel-line-start': 732,
                            'selection_end': 771,
                            'selection_start': 771},
                           1291794611.5682199],
                          [loc('ui/assetCreator_UI.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794636.1116281],
                          [loc('ui/assetManager2.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794641.8689289],
                          [loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog._setupSignals',
         102)],
                            'first-line': 96,
                            'folded-linenos': [],
                            'sel-line': 109,
                            'sel-line-start': 3306,
                            'selection_end': 3315,
                            'selection_start': 3315},
                           1291794675.772861],
                          [loc('ui/assetReplacer.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794710.4512031],
                          [loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.__init__',
         47)],
                            'first-line': 31,
                            'folded-linenos': [],
                            'sel-line': 48,
                            'sel-line-start': 1382,
                            'selection_end': 1428,
                            'selection_start': 1422},
                           1291794728.732847],
                          [loc('ui/projectManager.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.__init__',
         42)],
                            'first-line': 18,
                            'folded-linenos': [],
                            'sel-line': 42,
                            'sel-line-start': 1052,
                            'selection_end': 1081,
                            'selection_start': 1075},
                           1291794760.946321],
                          [loc('ui/shotEditor.py'),
                           {'attrib-starts': [('MainDialog',
        34),
        ('MainDialog.__init__',
         42)],
                            'first-line': 18,
                            'folded-linenos': [],
                            'sel-line': 42,
                            'sel-line-start': 1082,
                            'selection_end': 1133,
                            'selection_start': 1127},
                           1291794827.5074351],
                          [loc('ui/singletonQApplication.py'),
                           {'attrib-starts': [('QApplication',
        5),
        ('QApplication.__new__',
         10)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 14,
                            'sel-line-start': 407,
                            'selection_end': 415,
                            'selection_start': 415},
                           1291794850.8678031],
                          [loc('ui/uiCompiler.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 28,
                            'sel-line-start': 1587,
                            'selection_end': 1696,
                            'selection_start': 1696},
                           1291794872.1980231],
                          [loc('utils/cache.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 3,
                            'sel-line-start': 14,
                            'selection_end': 14,
                            'selection_start': 14},
                           1291794902.126893],
                          [loc('utils/rangeTools.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291794967.2507939],
                          [loc('setup.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 15,
                            'sel-line-start': 542,
                            'selection_end': 596,
                            'selection_start': 596},
                           1291794978.889302],
                          [loc('__init__.py'),
                           {'attrib-starts': [],
                            'first-line': 124,
                            'folded-linenos': [],
                            'sel-line': 185,
                            'sel-line-start': 8691,
                            'selection_end': 8691,
                            'selection_start': 8691},
                           1291795074.8266001]],
                         19),
           'current-loc': loc('__init__.py'),
           'editor-states': {loc('__init__.py'): {'attrib-starts': [],
        'first-line': 124,
        'folded-linenos': [],
        'sel-line': 185,
        'sel-line-start': 8691,
        'selection_end': 8691,
        'selection_start': 8691}},
           'has-focus': False},
          {'bookmarks': ([(loc('ui/projectManager.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.addAlternativeShot',
         328)],
                            'first-line': 309,
                            'folded-linenos': [],
                            'sel-line': 359,
                            'sel-line-start': 13302,
                            'selection_end': 13302,
                            'selection_start': 13302},
                           1291794762.801388),
                          [loc('ui/projectSetter.py'),
                           {'attrib-starts': [('MainDialog',
        55),
        ('MainDialog.__init__',
         60)],
                            'first-line': 36,
                            'folded-linenos': [],
                            'sel-line': 61,
                            'sel-line-start': 1775,
                            'selection_end': 1823,
                            'selection_start': 1817},
                           1291794784.0665641],
                          [loc('ui/projectManager.py'),
                           {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.addAlternativeShot',
         328)],
                            'first-line': 309,
                            'folded-linenos': [],
                            'sel-line': 359,
                            'sel-line-start': 13302,
                            'selection_end': 13302,
                            'selection_start': 13302},
                           1291794823.7571061],
                          (loc('ui/shotEditor.py'),
                           {'attrib-starts': [('MainDialog',
        34),
        ('MainDialog.__init__',
         42)],
                            'first-line': 18,
                            'folded-linenos': [],
                            'sel-line': 46,
                            'sel-line-start': 1225,
                            'selection_end': 1268,
                            'selection_start': 1268},
                           1291794827.4418919),
                          (loc('ui/shotEditor.py'),
                           {'attrib-starts': [('MainDialog',
        34),
        ('MainDialog.isShotDataFilled',
         438)],
                            'first-line': 392,
                            'folded-linenos': [],
                            'sel-line': 442,
                            'sel-line-start': 15817,
                            'selection_end': 15873,
                            'selection_start': 15873},
                           1291794828.7042489),
                          (loc('ui/shotEditor.py'),
                           {'attrib-starts': [('MainDialog',
        34),
        ('MainDialog.isShotDataFilled',
         438)],
                            'first-line': 392,
                            'folded-linenos': [],
                            'sel-line': 442,
                            'sel-line-start': 15817,
                            'selection_end': 15873,
                            'selection_start': 15873},
                           1291794828.8521321),
                          [loc('ui/shotEditor.py'),
                           {'attrib-starts': [('MainDialog',
        34),
        ('MainDialog.isShotDataFilled',
         438)],
                            'first-line': 392,
                            'folded-linenos': [],
                            'sel-line': 442,
                            'sel-line-start': 15817,
                            'selection_end': 15873,
                            'selection_start': 15873},
                           1291794828.9853001],
                          [loc('ui/singletonQApplication.py'),
                           {'attrib-starts': [('QApplication',
        5),
        ('QApplication.__new__',
         10)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 14,
                            'sel-line-start': 407,
                            'selection_end': 415,
                            'selection_start': 415},
                           1291794850.8046069],
                          [loc('ui/uiCompiler.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 28,
                            'sel-line-start': 1587,
                            'selection_end': 1696,
                            'selection_start': 1696},
                           1291794872.1367121],
                          (loc('utils/cache.py'),
                           {'attrib-starts': [('CachedMethod',
        12),
        ('CachedMethod.__init__',
         19)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 25,
                            'sel-line-start': 528,
                            'selection_end': 568,
                            'selection_start': 568},
                           1291794902.0657239),
                          (loc('utils/cache.py'),
                           {'attrib-starts': [('InputBasedCachedMethod',
        101),
        ('InputBasedCachedMethod.__repr__',
         165)],
                            'first-line': 123,
                            'folded-linenos': [],
                            'sel-line': 172,
                            'sel-line-start': 5671,
                            'selection_end': 5703,
                            'selection_start': 5703},
                           1291794904.4699769),
                          [loc('ui/uiCompiler.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 28,
                            'sel-line-start': 1587,
                            'selection_end': 1696,
                            'selection_start': 1696},
                           1291794930.6403],
                          [loc('utils/cache.py'),
                           {'attrib-starts': [('InputBasedCachedMethod',
        101),
        ('InputBasedCachedMethod.__repr__',
         165)],
                            'first-line': 123,
                            'folded-linenos': [],
                            'sel-line': 172,
                            'sel-line-start': 5671,
                            'selection_end': 5703,
                            'selection_start': 5703},
                           1291794964.656708],
                          (loc('utils/rangeTools.py'),
                           {'attrib-starts': [('RangeConverter',
        9),
        ('RangeConverter.convertRangeToList',
         17)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 26,
                            'sel-line-start': 646,
                            'selection_end': 654,
                            'selection_start': 654},
                           1291794967.1900451),
                          (loc('utils/rangeTools.py'),
                           {'attrib-starts': [('RangeConverter',
        9),
        ('RangeConverter.matchRange',
         61)],
                            'first-line': 25,
                            'folded-linenos': [],
                            'sel-line': 75,
                            'sel-line-start': 2112,
                            'selection_end': 2133,
                            'selection_start': 2133},
                           1291794968.609201),
                          [loc('utils/rangeTools.py'),
                           {'attrib-starts': [('RangeConverter',
        9),
        ('RangeConverter.matchRange',
         61)],
                            'first-line': 25,
                            'folded-linenos': [],
                            'sel-line': 75,
                            'sel-line-start': 2112,
                            'selection_end': 2133,
                            'selection_start': 2133},
                           1291794968.713985],
                          (loc('setup.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 15,
                            'sel-line-start': 542,
                            'selection_end': 596,
                            'selection_start': 596},
                           1291794978.826745),
                          [loc('utils/__init__.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1291795000.4481239],
                          [loc('setup.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 15,
                            'sel-line-start': 542,
                            'selection_end': 596,
                            'selection_start': 596},
                           1291795001.9366181],
                          [loc('__init__.py'),
                           {'attrib-starts': [],
                            'first-line': 124,
                            'folded-linenos': [],
                            'sel-line': 185,
                            'sel-line-start': 8691,
                            'selection_end': 8691,
                            'selection_start': 8691},
                           1291795074.7647491]],
                         19),
           'current-loc': loc('__init__.py'),
           'editor-states': {loc('__init__.py'): {'attrib-starts': [],
        'first-line': 135,
        'folded-linenos': [],
        'sel-line': 155,
        'sel-line-start': 7737,
        'selection_end': 7756,
        'selection_start': 7756}},
           'has-focus': False}),
         {'bookmarks': ([[loc('models/abstractClasses.py'),
                          {'attrib-starts': [('Environment',
        26),
        ('Environment.checkReferenceVersions',
         167)],
                           'first-line': 154,
                           'folded-linenos': [],
                           'sel-line': 175,
                           'sel-line-start': 4317,
                           'selection_end': 4321,
                           'selection_start': 4321},
                          1291794372.5548689],
                         [loc('models/asset.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0},
                          1291794412.1851349],
                         [loc('models/project.py'),
                          {'attrib-starts': [('Sequence',
        176),
        ('Sequence.__init__',
         185)],
                           'first-line': 181,
                           'folded-linenos': [],
                           'sel-line': 209,
                           'sel-line-start': 5816,
                           'selection_end': 5845,
                           'selection_start': 5845},
                          1291794447.786366],
                         [loc('models/repository.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 20,
                           'sel-line-start': 360,
                           'selection_end': 360,
                           'selection_start': 360},
                          1291794479.365797],
                         [loc('models/user.py'),
                          {'attrib-starts': [('User',
        5)],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 7,
                           'sel-line-start': 153,
                           'selection_end': 160,
                           'selection_start': 160},
                          1291794521.1817579],
                         [loc('tests/models/test_repository.py'),
                          {'attrib-starts': [('RepositoryTesterWithEnv',
        105),
        ('RepositoryTesterWithEnv.test_create_project',
         189)],
                           'first-line': 166,
                           'folded-linenos': [],
                           'sel-line': 210,
                           'sel-line-start': 6297,
                           'selection_end': 6301,
                           'selection_start': 6301},
                          1291794543.892148],
                         [loc('models/environments/nukeEnv.py'),
                          {'attrib-starts': [('NukeEnvironment',
        15),
        ('NukeEnvironment.__init__',
         22)],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 30,
                           'sel-line-start': 732,
                           'selection_end': 771,
                           'selection_start': 771},
                          1291794611.1750391],
                         [loc('ui/assetCreator_UI.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0},
                          1291794635.745672],
                         [loc('ui/assetManager2.py'),
                          {},
                          1291794641.480701],
                         [loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog._setupSignals',
         102)],
                           'first-line': 96,
                           'folded-linenos': [],
                           'sel-line': 109,
                           'sel-line-start': 3306,
                           'selection_end': 3315,
                           'selection_start': 3315},
                          1291794675.2907619],
                         [loc('ui/assetReplacer.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0},
                          1291794710.070034],
                         [loc('ui/assetUpdater.py'),
                          {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.__init__',
         47)],
                           'first-line': 31,
                           'folded-linenos': [],
                           'sel-line': 48,
                           'sel-line-start': 1382,
                           'selection_end': 1428,
                           'selection_start': 1422},
                          1291794728.3276751],
                         [loc('ui/projectManager.py'),
                          {'attrib-starts': [('MainDialog',
        35),
        ('MainDialog.__init__',
         42)],
                           'first-line': 18,
                           'folded-linenos': [],
                           'sel-line': 42,
                           'sel-line-start': 1052,
                           'selection_end': 1081,
                           'selection_start': 1075},
                          1291794760.6868069],
                         [loc('ui/shotEditor.py'),
                          {'attrib-starts': [('MainDialog',
        34),
        ('MainDialog.__init__',
         42)],
                           'first-line': 18,
                           'folded-linenos': [],
                           'sel-line': 42,
                           'sel-line-start': 1082,
                           'selection_end': 1133,
                           'selection_start': 1127},
                          1291794827.0966589],
                         [loc('ui/singletonQApplication.py'),
                          {'attrib-starts': [('QApplication',
        5),
        ('QApplication.__new__',
         10)],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 14,
                           'sel-line-start': 407,
                           'selection_end': 415,
                           'selection_start': 415},
                          1291794850.482914],
                         [loc('ui/uiCompiler.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 30,
                           'sel-line-start': 1696,
                           'selection_end': 1696,
                           'selection_start': 1696},
                          1291794871.6964891],
                         [loc('utils/cache.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 3,
                           'sel-line-start': 14,
                           'selection_end': 14,
                           'selection_start': 14},
                          1291794901.7565789],
                         [loc('utils/rangeTools.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0},
                          1291794966.8819461],
                         [loc('setup.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 15,
                           'sel-line-start': 542,
                           'selection_end': 596,
                           'selection_start': 596},
                          1291794978.5204611],
                         [loc('__init__.py'),
                          {'attrib-starts': [],
                           'first-line': 157,
                           'folded-linenos': [],
                           'sel-line': 185,
                           'sel-line-start': 8691,
                           'selection_end': 8691,
                           'selection_start': 8691},
                          1291795074.4613781]],
                        19),
          'current-loc': loc('__init__.py'),
          'editor-states': {loc('__init__.py'): {'attrib-starts': [],
        'first-line': 157,
        'folded-linenos': [],
        'sel-line': 185,
        'sel-line-start': 8691,
        'selection_end': 8691,
        'selection_start': 8691}},
          'has-focus': False})),
                               'open_files': [u'__init__.py']},
        'split_percents': {0: 0.50640478223740393},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.61444444444444446},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (-1,
                         24,
                         1272,
                         987)}]}
guimgr.recent-documents = [loc('__init__.py')]
guimgr.visual-state = {loc('../../../../../.wingide3/pi-cache/2.5/usr/autodesk/maya/lib/python2.5/site-packages/PyQt4/QtGui.pi'): {''\
        'attrib-starts': [('QTableWidget',
                           96579),
                          ('QTableWidget.setHorizontalHeaderLabels',
                           97886)],
        'first-line': 97863,
        'folded-linenos': [],
        'sel-line': 97886,
        'sel-line-start': 1274550,
        'selection_end': 1274581,
        'selection_start': 1274556},
                       loc('../../../../../.wingide3/pi-cache/2.6/usr/autodesk/maya/lib/python2.6/site-packages/PyQt4/QtGui.pi'): {''\
        'attrib-starts': [('QDialog',
                           23193)],
        'first-line': 28830,
        'folded-linenos': [],
        'sel-line': 23193,
        'sel-line-start': 317249,
        'selection_end': 317262,
        'selection_start': 317255},
                       loc('../../../../../Documents/Works/PROJECT_CREATOR/defaultProjectSettings.xml'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../Documents/cherry/cherry_helloWorld.py'): {''\
        'attrib-starts': [('HelloWorld',
                           2),
                          ('HelloWorld.index',
                           3)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 154,
        'selection_end': 154,
        'selection_start': 154},
                       loc('../../../../../Documents/development/Django_Test_4/cheeserater/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../Documents/development/PyKDE/phonon_example1.py'): {''\
        'attrib-starts': [('MainWindow',
                           7),
                          ('MainWindow.play',
                           23)],
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 690,
        'selection_end': 758,
        'selection_start': 758},
                       loc('../../../../../Documents/development/PyQt4_Tests/boxLayout.py'): {''\
        'attrib-starts': [('BoxLayout',
                           11),
                          ('BoxLayout.__init__',
                           15)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 937,
        'selection_end': 958,
        'selection_start': 958},
                       loc('../../../../../Documents/development/PyQt4_Tests/gridLayout.py'): {''\
        'attrib-starts': [('GridLayout',
                           12),
                          ('GridLayout.__init__',
                           16)],
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 367,
        'selection_end': 392,
        'selection_start': 392},
                       loc('../../../../../Documents/development/PyQt4_Tests/mainWindow.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 65,
        'selection_end': 86,
        'selection_start': 86},
                       loc('../../../../../Documents/development/cacheTest_v001.py'): {''\
        'attrib-starts': [('testClass',
                           3),
                          ('testClass.test2',
                           12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 377,
        'selection_end': 410,
        'selection_start': 410},
                       loc('../../../../../Documents/development/python_decorators_v002.py'): {''\
        'attrib-starts': [('entryExit',
                           0),
                          ('entryExit.__init__',
                           2)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 57,
        'selection_end': 75,
        'selection_start': 75},
                       loc('../../../../../Documents/development/python_decorators_v003.py'): {''\
        'attrib-starts': [('func1',
                           9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 149,
        'selection_end': 161,
        'selection_start': 161},
                       loc('../../../../../Documents/development/stalker/database/models.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 355,
        'selection_end': 355,
        'selection_start': 355},
                       loc('../../../../../Documents/development/test_v001.py'): {''\
        'attrib-starts': [('select_sublist',
                           0)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 217,
        'selection_end': 217,
        'selection_start': 217},
                       loc('../../../../../Documents/maya_development/furMapCreator/furMapCreator/furMapCreator.h'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 350,
        'selection_end': 378,
        'selection_start': 378},
                       loc('../../../../../Documents/maya_development/furMapCreator/furMapCreator/furMapCreatorCmd.cpp'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 624,
        'selection_end': 624,
        'selection_start': 624},
                       loc('../../../../../Documents/structure_addFolder.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 405,
        'selection_end': 472,
        'selection_start': 472},
                       loc('../../../../../Downloads/Planning.py'): {'attrib'\
        '-starts': [('Planning',
                     18),
                    ('Planning.__init__',
                     51)],
        'first-line': 91,
        'folded-linenos': [],
        'sel-line': 51,
        'sel-line-start': 2123,
        'selection_end': 2139,
        'selection_start': 2131},
                       loc('../../../../../Downloads/PyTJ.py'): {'attrib-sta'\
        'rts': [('PyTJ',
                 30),
                ('PyTJ.ProcessType',
                 71)],
        'first-line': 62,
        'folded-linenos': [],
        'sel-line': 79,
        'sel-line-start': 2807,
        'selection_end': 2826,
        'selection_start': 2826},
                       loc('../../../../../dakikaToplayici.py'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 100,
        'selection_end': 100,
        'selection_start': 100},
                       loc('../../../../../geany_cflags_generator.py'): {'at'\
        'trib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 48,
        'selection_end': 78,
        'selection_start': 78},
                       loc('../../mayaHacks/userSetup.mel'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../mayaHacks/userSetup.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../AssetType.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../Cache.py'): {'attrib-starts': [('CachedMethod',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 100,
        'selection_end': 130,
        'selection_start': 130},
                       loc('../MainWindow.py'): {'attrib-starts': [('MainWin'\
        'dow',
        1),
        ('MainWindow._updateSequenceObject',
         891)],
        'first-line': 857,
        'folded-linenos': [],
        'sel-line': 903,
        'sel-line-start': 32180,
        'selection_end': 32219,
        'selection_start': 32219},
                       loc('../User.py'): {'attrib-starts': [('User',
        1),
        ('User.setInitials',
         41)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 44,
        'sel-line-start': 1114,
        'selection_end': 1147,
        'selection_start': 1147},
                       loc('../oyAddDAGMenuCommands.mel'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../oyAssetManager.py'): {'attrib-starts': [('Ass'\
        'et',
        783),
        ('Asset.set_info_variables',
         831)],
        'first-line': 926,
        'folded-linenos': [],
        'sel-line': 835,
        'sel-line-start': 25880,
        'selection_end': 25900,
        'selection_start': 25900},
                       loc('../oyAutoRig.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../oyAuxiliaryFunctions.mel'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 624,
        'selection_end': 671,
        'selection_start': 671},
                       loc('../oyAuxiliaryFunctions.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 307,
        'selection_end': 307,
        'selection_start': 307},
                       loc('../oyAxialCorrectionGroup.py'): {'attrib-starts': [(''\
        'createAxialCorrectionGroup',
        32)],
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 53,
        'sel-line-start': 1471,
        'selection_end': 1517,
        'selection_start': 1517},
                       loc('../oyBallisticRuler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 502,
        'selection_end': 504,
        'selection_start': 504},
                       loc('../oyBlootooth.py'): {'attrib-starts': [('sendTe'\
        'xt',
        18)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 490,
        'selection_end': 528,
        'selection_start': 528},
                       loc('../oyObjectPicker.py'): {'attrib-starts': [('Pic'\
        'kedObject',
        88),
        ('PickedObject.getWeightAlias',
         403)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 425,
        'sel-line-start': 14700,
        'selection_end': 14704,
        'selection_start': 14704},
                       loc('../oyPivotSwitcher.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 2,
        'selection_start': 2},
                       loc('../oyProjectManager.py'): {'attrib-starts': [('C'\
        'achedMethod',
        305),
        ('CachedMethod.__repr__',
         361)],
        'first-line': 368,
        'folded-linenos': [],
        'sel-line': 369,
        'sel-line-start': 15452,
        'selection_end': 15452,
        'selection_start': 15452},
                       loc('Asset.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 1,
        'selection_end': 1,
        'selection_start': 1},
                       loc('AssetType.py'): {'attrib-starts': [('AssetType',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 240,
        'selection_end': 244,
        'selection_start': 244},
                       loc('CHANGELOG'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 36,
        'selection_end': 44,
        'selection_start': 44},
                       loc('Cache.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Database.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 63,
        'selection_end': 63,
        'selection_start': 63},
                       loc('MainWindow.py'): {'attrib-starts': [('UI',
        1)],
        'first-line': 874,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 318,
        'selection_end': 403,
        'selection_start': 403},
                       loc('Project.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 189,
        'selection_end': 189,
        'selection_start': 189},
                       loc('README'): {'attrib-starts': [],
                                       'first-line': 0,
                                       'folded-linenos': [],
                                       'sel-line': 1,
                                       'sel-line-start': 1,
                                       'selection_end': 47,
                                       'selection_start': 47},
                       loc('Range.py'): {'attrib-starts': [('RangeConverter',
        1),
        ('RangeConverter.convertRangeToList',
         9)],
        'first-line': 1,
        'folded-linenos': [],
        'sel-line': 47,
        'sel-line-start': 1536,
        'selection_end': 1559,
        'selection_start': 1559},
                       loc('Sequence.py'): {'attrib-starts': [('Sequence',
        10),
        ('Sequence.__init__',
         19)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 836,
        'selection_end': 844,
        'selection_start': 844},
                       loc('Structure.py'): {'attrib-starts': [('Structure',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 98,
        'selection_end': 132,
        'selection_start': 132},
                       loc('UI.py'): {'attrib-starts': [('Ui_MainWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
                                      'first-line': 313,
                                      'folded-linenos': [],
                                      'sel-line': 13,
                                      'sel-line-start': 383,
                                      'selection_end': 406,
                                      'selection_start': 406},
                       loc('UI_compiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('User.py'): {'attrib-starts': [('User',
        1),
        ('User.getName',
         17)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 484,
        'selection_end': 516,
        'selection_start': 516},
                       loc('__init__.py'): {'attrib-starts': [],
        'first-line': 157,
        'folded-linenos': [],
        'sel-line': 185,
        'sel-line-start': 8691,
        'selection_end': 8691,
        'selection_start': 8691},
                       loc('__main__.py'): {'attrib-starts': [('main',
        5)],
        'first-line': 3,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 467,
        'selection_end': 484,
        'selection_start': 484},
                       loc('dataModels/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('dataModels/abstractClasses.py'): {'attrib-starts': [(''\
        'Environment',
        26),
        ('Environment.updateAssets',
         187)],
        'first-line': 186,
        'folded-linenos': [],
        'sel-line': 193,
        'sel-line-start': 4820,
        'selection_end': 4824,
        'selection_start': 4824},
                       loc('dataModels/assetModel.py'): {'attrib-starts': [(''\
        'SuperAsset',
        1099)],
        'first-line': 1111,
        'folded-linenos': [],
        'sel-line': 1118,
        'sel-line-start': 35772,
        'selection_end': 35843,
        'selection_start': 35843},
                       loc('dataModels/projectModel.py'): {'attrib-starts': [(''\
        'Sequence',
        182),
        ('Sequence.isValid',
         1542)],
        'first-line': 1535,
        'folded-linenos': [],
        'sel-line': 1558,
        'sel-line-start': 53999,
        'selection_end': 54032,
        'selection_start': 54008},
                       loc('dataModels/repositoryModel.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 124,
        'selection_end': 190,
        'selection_start': 190},
                       loc('dataModels/serverModel.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('dataModels/userModel.py'): {'attrib-starts': [(''\
        'User',
        5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 100,
        'selection_end': 119,
        'selection_start': 119},
                       loc('docs/Makefile'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('docs/_build/doctrees/index.doctree'): {'attrib-s'\
        'tarts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('docs/index.rst'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('docs/make.bat'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('environments/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('environments/environmentFactory.py'): {'attrib-s'\
        'tarts': [],
        'first-line': 60,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('environments/houdiniEnv.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 198,
        'selection_end': 201,
        'selection_start': 201},
                       loc('environments/maya.py'): {'attrib-starts': [('get'\
        'PathVariables',
        84)],
        'first-line': 79,
        'folded-linenos': [],
        'sel-line': 85,
        'sel-line-start': 2217,
        'selection_end': 2264,
        'selection_start': 2264},
                       loc('environments/mayaEnv.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 193,
        'selection_end': 204,
        'selection_start': 204},
                       loc('environments/nukeEnv.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 144,
        'selection_end': 166,
        'selection_start': 166},
                       loc('environments/photoshopEnv.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 324,
        'selection_end': 324,
        'selection_start': 324},
                       loc('models/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/abstractClasses.py'): {'attrib-starts': [(''\
        'Environment',
        26),
        ('Environment.checkReferenceVersions',
         167)],
        'first-line': 154,
        'folded-linenos': [],
        'sel-line': 175,
        'sel-line-start': 4317,
        'selection_end': 4321,
        'selection_start': 4321},
                       loc('models/asset.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/assetType.py'): {'attrib-starts': [('Asse'\
        'tType',
        1),
        ('AssetType.getPlayblastFolder',
         44)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 51,
        'sel-line-start': 1408,
        'selection_end': 1461,
        'selection_start': 1461},
                       loc('models/database.py'): {'attrib-starts': [('Datab'\
        'ase',
        8),
        ('Database.getHomePath',
         186)],
        'first-line': 184,
        'folded-linenos': [],
        'sel-line': 204,
        'sel-line-start': 6347,
        'selection_end': 6387,
        'selection_start': 6387},
                       loc('models/environments/__init__.py'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/environments/environmentFactory.py'): {'a'\
        'ttrib-starts': [('VirtualEnvironment',
                          100),
                         ('VirtualEnvironment.__str__',
                          114)],
        'first-line': 91,
        'folded-linenos': [],
        'sel-line': 115,
        'sel-line-start': 3627,
        'selection_end': 3648,
        'selection_start': 3648},
                       loc('models/environments/houdiniEnv.py'): {'attrib-st'\
        'arts': [('HoudiniEnvironment',
                  29),
                 ('HoudiniEnvironment.getRecentFileList',
                  178)],
        'first-line': 178,
        'folded-linenos': [],
        'sel-line': 183,
        'sel-line-start': 5470,
        'selection_end': 5484,
        'selection_start': 5484},
                       loc('models/environments/mayaEnv.py'): {'attrib-start'\
        's': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/environments/nukeEnv.py'): {'attrib-start'\
        's': [('NukeEnvironment',
               15),
              ('NukeEnvironment.__init__',
               22)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 30,
        'sel-line-start': 732,
        'selection_end': 771,
        'selection_start': 771},
                       loc('models/environments/photoshopEnv.py'): {'attrib-'\
        'starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/project.py'): {'attrib-starts': [('Sequen'\
        'ce',
        190),
        ('Sequence.__init__',
         199)],
        'first-line': 195,
        'folded-linenos': [],
        'sel-line': 223,
        'sel-line-start': 6174,
        'selection_end': 6203,
        'selection_start': 6203},
                       loc('models/repository.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 360,
        'selection_end': 360,
        'selection_start': 360},
                       loc('models/sequence.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 102,
        'selection_end': 102,
        'selection_start': 102},
                       loc('models/structure.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/user.py'): {'attrib-starts': [('User',
        5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 153,
        'selection_end': 160,
        'selection_start': 160},
                       loc('oyProjectManager.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('repositorySettings.xml'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 257,
        'selection_end': 272,
        'selection_start': 272},
                       loc('settings.xml'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('settings/_defaultFiles_/workspace.mel'): {'attri'\
        'b-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('settings/defaultProjectSettings.xml'): {'attrib-'\
        'starts': [],
        'first-line': 0,
        'folded-linenos': [3],
        'sel-line': 74,
        'sel-line-start': 2028,
        'selection_end': 2042,
        'selection_start': 2042},
                       loc('settings/environmentSettings.xml'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 290,
        'selection_end': 309,
        'selection_start': 309},
                       loc('settings/repositorySettings.xml'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 281,
        'selection_end': 288,
        'selection_start': 288},
                       loc('settings/users.xml'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 278,
        'selection_end': 288,
        'selection_start': 288},
                       loc('setup.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 542,
        'selection_end': 596,
        'selection_start': 596},
                       loc('tests/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('tests/models/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('tests/models/test_repository.py'): {'attrib-star'\
        'ts': [('RepositoryTesterWithEnv',
                105),
               ('RepositoryTesterWithEnv.test_create_project',
                189)],
        'first-line': 158,
        'folded-linenos': [],
        'sel-line': 210,
        'sel-line-start': 6297,
        'selection_end': 6301,
        'selection_start': 6301},
                       loc('todo.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 78,
        'sel-line-start': 2534,
        'selection_end': 2588,
        'selection_start': 2588},
                       loc('tools/abstractClasses.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('tools/cache.py'): {'attrib-starts': [],
        'first-line': 60,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 44,
        'selection_end': 2961,
        'selection_start': 44},
                       loc('tools/cacheTest.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 196,
        'selection_end': 241,
        'selection_start': 241},
                       loc('tools/myQapplication.py'): {'attrib-starts': [(''\
        'MyQApplication',
        4),
        ('MyQApplication.__new__',
         9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 310,
        'selection_end': 344,
        'selection_start': 344},
                       loc('tools/rangeTools.py'): {'attrib-starts': [('Rang'\
        'eConverter',
        9),
        ('RangeConverter.convertRangeToList',
         17)],
        'first-line': 18,
        'folded-linenos': [],
        'sel-line': 29,
        'sel-line-start': 700,
        'selection_end': 708,
        'selection_start': 708},
                       loc('ui/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/assetCreator_UI.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/assetIO_mainWindow.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 9,
        'selection_start': 8},
                       loc('ui/assetIO_mainWindowUI.py'): {'attrib-starts': [(''\
        'Ui_MainWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
        'first-line': 39,
        'folded-linenos': [],
        'sel-line': 41,
        'sel-line-start': 2196,
        'selection_end': 2202,
        'selection_start': 2202},
                       loc('ui/assetManager.py'): {'attrib-starts': [('MainD'\
        'ialog',
        35),
        ('MainDialog._setupSignals',
         102)],
        'first-line': 96,
        'folded-linenos': [],
        'sel-line': 109,
        'sel-line-start': 3306,
        'selection_end': 3315,
        'selection_start': 3315},
                       loc('ui/assetManager.ui'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 207,
        'selection_end': 209,
        'selection_start': 209},
                       loc('ui/assetManager2.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/assetManager_UI.py'): {'attrib-starts': [('Ui'\
        '_Dialog',
        11)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 335,
        'selection_end': 350,
        'selection_start': 350},
                       loc('ui/assetManager_mainWindow.py'): {'attrib-starts': [(''\
        'UI',
        11)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 389,
        'selection_end': 410,
        'selection_start': 410},
                       loc('ui/assetReplacer.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/assetUpdater.py'): {'attrib-starts': [('MainD'\
        'ialog',
        35),
        ('MainDialog.__init__',
         47)],
        'first-line': 31,
        'folded-linenos': [],
        'sel-line': 48,
        'sel-line-start': 1382,
        'selection_end': 1428,
        'selection_start': 1422},
                       loc('ui/assetUpdater_UI.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/mainWindow.py'): {'attrib-starts': [('MainWin'\
        'dow',
        28),
        ('MainWindow.fillFieldsFromFileInfo',
         145)],
        'first-line': 177,
        'folded-linenos': [],
        'sel-line': 202,
        'sel-line-start': 8615,
        'selection_end': 8623,
        'selection_start': 8623},
                       loc('ui/mainWindowUI.py'): {'attrib-starts': [('Ui_Ma'\
        'inWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 1010,
        'selection_end': 1099,
        'selection_start': 1099},
                       loc('ui/projectManagement_mainWindow.py'): {'attrib-s'\
        'tarts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 292,
        'selection_end': 292,
        'selection_start': 292},
                       loc('ui/projectManagement_mainWindowUI.py'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 45,
        'selection_start': 45},
                       loc('ui/projectManager.py'): {'attrib-starts': [('Mai'\
        'nDialog',
        35),
        ('MainDialog.__init__',
         42)],
        'first-line': 18,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 1052,
        'selection_end': 1081,
        'selection_start': 1075},
                       loc('ui/projectManager_UI.py'): {'attrib-starts': [(''\
        'Ui_MainWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 912,
        'selection_end': 993,
        'selection_start': 993},
                       loc('ui/projectManager_mainWindow.py'): {'attrib-star'\
        'ts': [('MainWindow',
                29)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 29,
        'sel-line-start': 723,
        'selection_end': 786,
        'selection_start': 786},
                       loc('ui/projectSetter.py'): {'attrib-starts': [('Main'\
        'Dialog',
        55),
        ('MainDialog.updateSequenceList',
         132)],
        'first-line': 111,
        'folded-linenos': [],
        'sel-line': 137,
        'sel-line-start': 4285,
        'selection_end': 4288,
        'selection_start': 4288},
                       loc('ui/saveFields.ui'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/saveFields_UI.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 18,
        'selection_start': 18},
                       loc('ui/shotEditor.py'): {'attrib-starts': [('MainDia'\
        'log',
        34),
        ('MainDialog.__init__',
         42)],
        'first-line': 18,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 1082,
        'selection_end': 1133,
        'selection_start': 1127},
                       loc('ui/shotEditor_UI.py'): {'attrib-starts': [('Ui_D'\
        'ialog',
        11),
        ('Ui_Dialog.setupUi',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 458,
        'selection_end': 513,
        'selection_start': 513},
                       loc('ui/singletonQApplication.py'): {'attrib-starts': [(''\
        'QApplication',
        5),
        ('QApplication.__new__',
         10)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 407,
        'selection_end': 415,
        'selection_start': 415},
                       loc('ui/singletonQapplication.py'): {'attrib-starts': [(''\
        'QApplication',
        4),
        ('QApplication.__new__',
         9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 379,
        'selection_end': 408,
        'selection_start': 408},
                       loc('ui/uiCompiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 28,
        'sel-line-start': 1587,
        'selection_end': 1696,
        'selection_start': 1696},
                       loc('uis/assetManager.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('utils/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('utils/cache.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 14,
        'selection_end': 14,
        'selection_start': 14},
                       loc('utils/rangeTools.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('versionHistory.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 125,
        'selection_end': 141,
        'selection_start': 141},
                       loc('../oyProjectManagerUI.py'): {'attrib-starts': [(''\
        'Ui_MainWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 348,
        'selection_end': 380,
        'selection_start': 370},
                       loc('../oyProjectManagerUI_compiler.py'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 344,
        'selection_end': 344,
        'selection_start': 344},
                       loc('../oyReferenceTools.py'): {'attrib-starts': [('R'\
        'eference',
        2),
        ('Reference.getReferenceNodes',
         13)],
        'first-line': 185,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 486,
        'selection_end': 511,
        'selection_start': 511},
                       loc('../oyRigTools.py'): {'attrib-starts': [('oyRigJo'\
        'int',
        589),
        ('oyRigJoint._createAttributes',
         639)],
        'first-line': 602,
        'folded-linenos': [],
        'sel-line': 659,
        'sel-line-start': 22228,
        'selection_end': 22232,
        'selection_start': 22232},
                       loc('../oyShaderAssigner.py'): {'attrib-starts': [('S'\
        'haderAssigner',
        28),
        ('ShaderAssigner.assignObjects',
         40)],
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 41,
        'sel-line-start': 864,
        'selection_end': 894,
        'selection_start': 894},
                       loc('../../plugins/closestPointOnCurve.py'): {'attrib'\
        '-starts': [('closestPointOnCurve',
                     11)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 312,
        'selection_end': 313,
        'selection_start': 313},
                       loc('../../plugins/oyTrajectoryDrawer.py'): {'attrib-'\
        'starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 129,
        'selection_end': 131,
        'selection_start': 131},
                       loc('../../../pumpThread.py'): {'attrib-starts': [('p'\
        'umpQt',
        14),
        ('pumpQt.processor',
         17)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 295,
        'selection_end': 307,
        'selection_start': 307},
                       loc('../../../pymel-1.0.2/pymel/core/nodetypes.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../pymel/core/animation.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../pymel/core/factories.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../pymel/core/general.py'): {'attrib-start'\
        's': [('listRelatives',
               584)],
        'first-line': 569,
        'folded-linenos': [],
        'sel-line': 584,
        'sel-line-start': 22075,
        'selection_end': 22092,
        'selection_start': 22079},
                       loc('../../../pymel/core/system.py'): {'attrib-starts': [(''\
        'loadReference',
        1271)],
        'first-line': 1248,
        'folded-linenos': [],
        'sel-line': 1272,
        'sel-line-start': 48564,
        'selection_end': 48598,
        'selection_start': 48598},
                       loc('../../../pymel/mayahook/mayautils.py'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../pythonArgsTest.py'): {'attrib-starts': [(''\
        'test',
        3)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 37,
        'selection_end': 51,
        'selection_start': 51},
                       loc('../../../qthread_test.py'): {'attrib-starts': [(''\
        'TerminalViewer',
        5),
        ('TerminalViewer.Activated',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 550,
        'selection_end': 576,
        'selection_start': 576},
                       loc('../../../../../test.cpp'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../media/PERSONAL/ozgur/My Documents/maya/scripts/oy-maya-scripts/mayaHacks/userSetup.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../media/PERSONAL/ozgur/My Documents/maya/scripts/oy-maya-scripts/oyTools/oyAssetManager.py'): {''\
        'attrib-starts': [('AssetBase',
                           4),
                          ('AssetBase.__init__',
                           9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 378,
        'selection_end': 384,
        'selection_start': 384},
                       loc('../../../../../../../usr/autodesk/maya/devkit/plug-ins/scripted/circleNode.py'): {''\
        'attrib-starts': [('initializePlugin',
                           173)],
        'first-line': 80,
        'folded-linenos': [],
        'sel-line': 175,
        'sel-line-start': 6389,
        'selection_end': 6394,
        'selection_start': 6394},
                       loc('../../../../../../../usr/autodesk/maya/devkit/plug-ins/scripted/footPrintNode.py'): {''\
        'attrib-starts': [],
        'first-line': 136,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 563,
        'selection_end': 630,
        'selection_start': 630},
                       loc('../../../../../../../usr/autodesk/maya/devkit/plug-ins/scripted/torusField.py'): {''\
        'attrib-starts': [],
        'first-line': 94,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../usr/lib/python2.6/xml/dom/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../usr/lib/python2.6/xml/dom/minidom.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 12,
        'selection_start': 5},
                       loc('../../../../../../../usr/lib/wingide3.2/resources/builtin-pi-files/2.5/__builtin__.pi'): {''\
        'attrib-starts': [('tuple',
                           1621)],
        'first-line': 1598,
        'folded-linenos': [],
        'sel-line': 1621,
        'sel-line-start': 50732,
        'selection_end': 50743,
        'selection_start': 50738},
                       loc('../../../../../../../usr/lib/wingide3.2/resources/builtin-pi-files/2.6/__builtin__.pi'): {''\
        'attrib-starts': [('list',
                           1419)],
        'first-line': 1396,
        'folded-linenos': [],
        'sel-line': 1422,
        'sel-line-start': 44285,
        'selection_end': 44285,
        'selection_start': 44285},
                       loc('../../../../../../../usr/local/lib/wingide3.1/resources/builtin-pi-files/2.5/__builtin__.pi'): {''\
        'attrib-starts': [],
        'first-line': 621,
        'folded-linenos': [],
        'sel-line': 645,
        'sel-line-start': 19284,
        'selection_end': 19294,
        'selection_start': 19290},
                       loc('../../../../../../../usr/share/applications/geany.desktop'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #24'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #25'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'import maya.cmds as mc\n',
                           'mc.NoneType\n',
                           'from oyProjectManager import Asset\n',
                           'from oyProjectManager.Asset import Asset\n',
                           'pm.workspace.getName()\n',
                           'pm.workspace.name()\n',
                           'pm.workspace.name\n',
                           'reload(oySetProject)\n',
                           'import oySetProject\n',
                           'oySetProject.UI()\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #26'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #27'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'import maya.cmds as mc\n',
                           'mc.NoneType\n',
                           'from oyProjectManager import Asset\n',
                           'from oyProjectManager.Asset import Asset\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #28'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #29'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #30'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': -1,
        'sel-line-start': -1,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #31'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': -1,
        'sel-line-start': -1,
        'selection_end': 22,
        'selection_start': 22},
                       loc('unknown:<untitled> #32'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #33'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #34'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #35'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #36'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['all(myRigger)\n',
                           'classmethod(myRigger)\n',
                           'locals\n',
                           'locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #37'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #38'): {'attrib-starts': [('o'\
        'zgur',
        2)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 2,
        'selection_end': 14,
        'selection_start': 14},
                       loc('unknown:<untitled> #39'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'help\n',
                           'help()\n',
                           'modules\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #40'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'import maya.cmds as mc\n',
                           'mc.NoneType\n',
                           'from oyProjectManager import Asset\n',
                           'from oyProjectManager.Asset import Asset\n',
                           'pm.workspace.getName()\n',
                           'pm.workspace.name()\n',
                           'pm.workspace.name\n',
                           'reload(oySetProject)\n',
                           'import oySetProject\n',
                           'oySetProject.UI()\n',
                           'import oySmedge\n',
                           'oySmedge.__doct__\n',
                           'oySmedge.__doc__\n',
                           'oySmedge.__doc__.splitlines\n',
                           'oySmedge.__doc__.splitlines()\n',
                           'print oySmedge.__doc__.splitlines()\n',
                           'for lines in oySmedge.__doc__.splitlines()\n',
                           'for lines in oySmedge.__doc__.splitlines():\n',
                           '\tprint lines\n',
                           'sign(-1)\n',
                           'import math\n',
                           'pm.sign\n',
                           'myList = list()\n',
                           'myList[1] = 1\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0)})\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0)])\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0),(2,0,0),(3'\
                           ',0,0)])\n',
                           'myCurve.firstParent2()\n',
                           'print myCurve.firstParent2()\n',
                           'print myCurve\n',
                           'print myCurve.getShape()\n',
                           'newTransform = pm.Transform()\n',
                           'pm.makeIdentity(t=1,r=1,s=1)\n',
                           'pm.loft\n',
                           'offCur1 = pm.nodetypes.OffsetCurve()\n',
                           'offCur1 = pm.nodetypes.OffsetCurve( pm.curve(p=['\
                           '(0,0,0),(1,1,1),(2,2,2),(3,3,3)])\n',
                           ')\n',
                           'curve1 = pm.curve(p=[(0,0,0),(1,1,1),(2,2,2),(3,'\
                           '3,3)])\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve( curve1 )\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve( curve1.get'\
                           'Shape() )\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve()\n',
                           "offCurve1.listConnections('outputCurve')\n",
                           "offCurve1.listConnections('outputCurve[0]')\n",
                           'offCurve1.listConnections()\n',
                           'import maya.cmds as cmds\n',
                           'import numpy\n',
                           '[0,0,0] - [1,2,3]\n',
                           'a = pm.surface()\n',
                           "follicle = pm.createNode('follicle')\n",
                           'follicle.getTransform()\n',
                           'print follicle.getTransform()\n',
                           'pm.ls()\n',
                           "pm.ls(type='transform')\n",
                           'print follicle.getParent()\n',
                           'range(0)\n',
                           'range(1)\n',
                           'import pymel as pm\n',
                           'a = 1\n',
                           'a = 2\n',
                           '\tdef init(self, val):\n',
                           'b = testObject(1)\n',
                           'class testObject(object):\n',
                           '\tdef __init__(self, val):\n',
                           '\t\tself._val = val\n',
                           'a = testObject(1)\n',
                           'myList = []\n',
                           'myList.append(a)\n',
                           'a._val=2\n',
                           'print a._val\n',
                           'myList[0]._val\n',
                           'myList[0]._val = 1\n',
                           'a._val\n',
                           'range(0,1)\n',
                           'range(0,0)\n',
                           'len(myList)\n',
                           'myList[0]\n',
                           'myList[0] == myList[-1]\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #41'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #42'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #43'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #44'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #45'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 56,
        'selection_end': 1064,
        'selection_start': 56},
                       loc('unknown:<untitled> #46'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': -1,
        'sel-line-start': -1,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #47'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'help\n',
                           'help()\n',
                           'modules\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #48'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #49'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #50'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #51'): {'attrib-starts': [('P'\
        'roperty',
        7)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 49,
        'selection_end': 80,
        'selection_start': 80},
                       loc('unknown:<untitled> #52'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #53'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['all(myRigger)\n',
                           'classmethod(myRigger)\n',
                           'locals\n',
                           'locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #54'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #55'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #10'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #11'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #12'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #13'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'import os\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n']},
        'sel-line': 1,
        'sel-line-start': 48,
        'selection_end': 48,
        'selection_start': 48},
                       loc('unknown:<untitled> #14'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #15'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ["myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'import maya.cmds as mc\n',
                           'mc.NoneType\n',
                           'from oyProjectManager import Asset\n',
                           'from oyProjectManager.Asset import Asset\n',
                           'pm.workspace.getName()\n',
                           'pm.workspace.name()\n',
                           'pm.workspace.name\n',
                           'reload(oySetProject)\n',
                           'import oySetProject\n',
                           'oySetProject.UI()\n',
                           'import oySmedge\n',
                           'oySmedge.__doct__\n',
                           'oySmedge.__doc__\n',
                           'oySmedge.__doc__.splitlines\n',
                           'oySmedge.__doc__.splitlines()\n',
                           'print oySmedge.__doc__.splitlines()\n',
                           'for lines in oySmedge.__doc__.splitlines()\n',
                           'for lines in oySmedge.__doc__.splitlines():\n',
                           '\tprint lines\n',
                           'sign(-1)\n',
                           'import math\n',
                           'pm.sign\n',
                           'myList = list()\n',
                           'myList[1] = 1\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0)})\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0)])\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0),(2,0,0),(3'\
                           ',0,0)])\n',
                           'myCurve.firstParent2()\n',
                           'print myCurve.firstParent2()\n',
                           'print myCurve\n',
                           'print myCurve.getShape()\n',
                           'newTransform = pm.Transform()\n',
                           'pm.makeIdentity(t=1,r=1,s=1)\n',
                           'pm.loft\n',
                           'offCur1 = pm.nodetypes.OffsetCurve()\n',
                           'offCur1 = pm.nodetypes.OffsetCurve( pm.curve(p=['\
                           '(0,0,0),(1,1,1),(2,2,2),(3,3,3)])\n',
                           ')\n',
                           'curve1 = pm.curve(p=[(0,0,0),(1,1,1),(2,2,2),(3,'\
                           '3,3)])\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve( curve1 )\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve( curve1.get'\
                           'Shape() )\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve()\n',
                           "offCurve1.listConnections('outputCurve')\n",
                           "offCurve1.listConnections('outputCurve[0]')\n",
                           'offCurve1.listConnections()\n',
                           'import maya.cmds as cmds\n',
                           'import numpy\n',
                           '[0,0,0] - [1,2,3]\n',
                           'import pymel as pm\n',
                           'a = pm.surface()\n',
                           "follicle = pm.createNode('follicle')\n",
                           'follicle.getTransform()\n',
                           'print follicle.getTransform()\n',
                           'pm.ls()\n',
                           "pm.ls(type='transform')\n",
                           'print follicle.getParent()\n',
                           'range(0)\n',
                           'range(1)\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #16'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'import os\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'print range(1,10)\n',
                           'print range(10,1)\n',
                           'print range(0,10)\n',
                           'print range(0,11)\n',
                           'print range(0,9)\n',
                           'print range(9,11)\n',
                           'import maya.OpenMaya as OpenMaay\n',
                           'myVector1 = OpenMaya.MVector( 1.0 ,0,0 )\n',
                           'myVector2 = OpenMaya.MVector( 0.0 ,1.0,0 )\n',
                           'print myVector1 ^ myVector2\n',
                           'print (myVector1 ^ myVector2).x\n',
                           'print (myVector1 ^ myVector2).y\n',
                           'print (myVector1 ^ myVector2).z\n',
                           'import maya.OpenMaya as OpenMaya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #17'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['a = "adene"\n',
                           'exit()\n',
                           'for keys os.environ.keys\n',
                           'prnit keys\n',
                           'prnit key\n',
                           'for keys os.environ.keys:\n',
                           'print keys\n',
                           'for keys in os.environ.keys:\n',
                           'for keys in os.environ.keys():\n',
                           '\tprint keys\n',
                           "print os.environ.key['PLATFORM']\n",
                           "print os.environ.keys['PLATFORM']\n",
                           "print os.environ.get('PLATFORM')\n",
                           "print os.environ.get('PROCESSOR_ARCHITECTURE')\n",
                           'import os\n',
                           'os.name\n',
                           'import sys\n',
                           "sys.path.append('E:\\ozgur\\My Documents\\maya\\"\
                           "scripts\\pymel')\n",
                           '__init__\n',
                           'exit\n',
                           'import pymel as pm\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #18'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #19'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #20'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['all(myRigger)\n',
                           'classmethod(myRigger)\n',
                           'locals\n',
                           'locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #21'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #22'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n',
                           'import hou\n',
                           'import oyProjectManager,\n',
                           'import oyProjectManager\n',
                           'import oyProjectManager as oyPM\n',
                           'oyPM.UI()\n']},
        'sel-line': 5,
        'sel-line-start': 223,
        'selection_end': 227,
        'selection_start': 227},
                       loc('unknown:<untitled> #23'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ["myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n',
                           'import oyProjectManager.models.asset as asset\n',
                           "myNew = asset.Asset('TEST_2','DENEME_SEQ')\n",
                           'sys.modules(\n',
                           ')\n',
                           'for moduleName in sys.modules.keys:\n',
                           '\tprint moduleName, sys.modules[moduleName]\n',
                           "if not 'oyProjectManager.models.project' in sys."\
                           "modules:\n",
                           '\tprint "not in module list"\n',
                           "if 'oyProjectManager.models.asset' in sys.module"\
                           "s:\n",
                           '\tprint "it is in modules"\n',
                           'import sys\n',
                           'sys.modules\n',
                           'for moduleName in sys.modules.keys():\n',
                           '\tprint moduleName\n',
                           "'oyProjectManager.models.asset' in sys.modules\n",
                           "'oyProjectManager.models.sequence' in sys.module"\
                           "s\n",
                           "'oyProjectManager.models.user' in sys.modules\n",
                           'from oyProjectManager.models import database\n',
                           'myDB = database.Database()\n',
                           'myDB.getProjects()\n',
                           'myDB.getUserInitials\n',
                           'myDB.getUserInitials()\n',
                           'myDB.getUserNames()\n',
                           'myDB.getUsers()\n',
                           'from oyProjectManager.models import asset\n',
                           'from oyProjectManager.models import project, seq'\
                           'uence\n',
                           'newProj.getSequenceNames()\n',
                           'from oyProjectManager.models import project, seq'\
                           'uence, asset\n',
                           "newProj = project.Project('TEST_2')\n",
                           'newSeq = newProj.getSequences()[0]\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #56'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['a = "adene"\n',
                           'exit()\n',
                           'for keys os.environ.keys\n',
                           'prnit keys\n',
                           'prnit key\n',
                           'for keys os.environ.keys:\n',
                           'print keys\n',
                           'for keys in os.environ.keys:\n',
                           'for keys in os.environ.keys():\n',
                           '\tprint keys\n',
                           "print os.environ.key['PLATFORM']\n",
                           "print os.environ.keys['PLATFORM']\n",
                           "print os.environ.get('PLATFORM')\n",
                           "print os.environ.get('PROCESSOR_ARCHITECTURE')\n",
                           'import os\n',
                           'os.name\n',
                           'import sys\n',
                           "sys.path.append('E:\\ozgur\\My Documents\\maya\\"\
                           "scripts\\pymel')\n",
                           '__init__\n',
                           'exit\n',
                           'import pymel as pm\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #57'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ["''.split('.')\n",
                           "''.split('.')[-1]\n",
                           "'.ma'.split('.')[-1]\n",
                           "'ma'.split('.')[-1]\n",
                           'os.path.extsep\n',
                           "project = oyPM.Project('TEST_2')\n",
                           "project.setProject('TEST_2')\n",
                           "project.setProject('TEST')\n",
                           'project.getSequenceNames()\n',
                           "extensionsToIgnore = ['smr','txt','swatch']\n",
                           "','.join(extensionsToIgnore)\n",
                           'bool(str(True))\n',
                           'bool(str(False))\n',
                           'bool(eval(False))\n',
                           'bool(eval(str(False)))\n',
                           'str(False)\n',
                           'str(True)\n',
                           'bool(eval(str(0)))\n',
                           'bool(eval(str(1)))\n',
                           "myAsset = Asset( 'TEST_2', 'DENEME_SEQ_NOSUBD' )"\
                           "\n",
                           'myAssetInfo = dict()\n',
                           "myAssetInfo['baseName'] = 'SH001'\n",
                           "myAssetInfo['subName'] = None\n",
                           "myAssetInfo['typeName'] = 'ANIMATION'\n",
                           "myAssetInfo['rev'] = 0\n",
                           "myAssetInfo['ver'] = 1\n",
                           "myAssetInfo['userInitials'] = 'ts'\n",
                           "myAssetInfo['notes'] = ''\n",
                           'myAsset.getAllVersions()\n',
                           'for asset in myAsset.getAllVersions():\n',
                           "os.path.splitext('deneme.ma')\n",
                           "os.path.splitext('deneme')\n",
                           'myAsset.getLatestRevision()\n',
                           'myAsset.getLatestRevision()[1]\n',
                           "myAsset = oyPM.Asset( 'TEST_2', 'DENEME_SEQ_NOSU"\
                           "BD' )\n",
                           'myAsset.setInfoVariables( **myAssetInfo )\n',
                           'myAsset.getLatestVersion()[1]\n',
                           'myAsset.isValidAsset()\n',
                           'myAssetInfo2 = dict()\n',
                           "myAssetInfo2['baseName'] = 'SH001'\n",
                           "myAssetInfo2['typeName'] = 'ANIMATION'\n",
                           "myAssetInfo2['rev'] = 0\n",
                           "myAssetInfo2['ver'] = 1\n",
                           "myAssetInfo2['userInitials'] = 'oy'\n",
                           'myAsset2.setInfoVariables( myAssetInfo2)\n',
                           ' print key, myAssetInfo2[key]\n',
                           'for key in myAssetInfo2.keys:\n',
                           'for key in myAssetInfo2.keys():\n',
                           '\tprint key, myAssetInfo2[key]\n',
                           'myAsset2._hasBaseInfo\n',
                           'myAsset2._hasFullInfo\n',
                           "os.path.join('adfa',None)\n",
                           'myAsset2._parentSequence._noSubNameField\n',
                           'myAsset2.getFileName()\n',
                           'print myAsset2.getFileName()\n',
                           'myAsset2.isValidAsset()\n',
                           'myAsset2._extension\n',
                           "myAsset2 = oyPM.Asset( 'TEST_2', 'DENEME_SEQ_NOS"\
                           "UBD' )\n",
                           'myAsset2.setInfoVariables( **myAssetInfo2)\n',
                           'myAsset2.getAllVersions()\n',
                           'for asset in myAsset2.getAllVersions():\n',
                           '\tasset.getFileName()\n',
                           'myAsset2.getLatestRevision()\n',
                           'myAsset2.getLatestVersion()\n',
                           "myNewAsset = oyPM.Asset('TEST_2','DENEME_SEQ_NOS"\
                           "UBD')\n",
                           'myInfoVars = dict()\n',
                           "myInfoVars['baseName'] = 'SH001'\n",
                           "myInfoVars['subName'] = ''\n",
                           "myInfoVars['typeName'] = 'ANIMATION'\n",
                           "myInfoVars['rev'] = 1\n",
                           "myInfoVars['rev'] = 0\n",
                           "myInfoVars['ver'] = 1\n",
                           "myInfoVars['userInitials'] = 'oy'\n",
                           "myInfoVars['notes'] = ''\n",
                           'myNewAsset.setInfoVariables( **myInfoVars)\n',
                           'myNewAsset.getLatestRevision()\n',
                           'myNewAsset._baseExists\n',
                           'myNewAsset.getAllVersions()\n',
                           'aSeq1 = oyPM.Sequence()\n',
                           'aSeq1.getAllAssets()\n',
                           "aSeq1 = oyPM.Sequence('TEST','SEQ1')\n",
                           "aSeq1 = oyPM.Sequence('TEST_2','DENEME_SEQ')\n",
                           'for asset in aSeq1.getAllAssets():\n',
                           '\tprint asset.getFileName()\n',
                           'reload(oyPM)\n',
                           'oyPM.UI()\n',
                           'import oyProjectManager as oyPM\n',
                           'oyPM.__file__\n',
                           'oyPM.__name__\n',
                           'oyPM.__version__\n',
                           'oyPM.__builtins__\n',
                           'oyPM.__doc__\n',
                           'import os\n',
                           "os.path.exists('test.xml')\n",
                           "os.path.exists('./test.xml')\n",
                           "open('./test.xml',mode='w')\n",
                           "newFile = open('./test.xml',mode='w')\n",
                           "newFile.writelines('test\\ntest')\n",
                           'newFile.close()\n',
                           "os.path.exists('oyProjectManager_settings.xml')\n"]},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #58'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #59'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137}}
proj.env-vars = {None: ('default',
                        [''])}
proj.indent-style-policy = 'warn'
proj.pyexec = {None: ('custom',
                      '$(MAYA_LOCATION)/bin/mayapy')}
proj.pypath = {None: ('custom',
                      '/opt/hfs11.0.469/houdini/python2.6libs/:$(NUKE_DUMMY)'\
                      ':$(PYTHONDEV):$(PYTHONDEV)/pymel-1.0.2:$(PYTHONDEV)/o'\
                      'y-maya-scripts/oyTools:$(PYTHONDEV)/oy-maya-scripts:$'\
                      '(MAYA_LOCATION)/bin/:$(NUKE_PATH)')}
search.search-history = [u'environmentFactory',
                         u'self.path',
                         u'_projectsFolderFullPath',
                         u'_projectsFolderName',
                         u'self._packagePath',
                         u'env_key',
                         u"')",
                         u'strip',
                         u'temp_folder',
                         u'tempFolder',
                         u'childs',
                         u'fget',
                         u'self.gridWidget1',
                         u'saveAsset_groupBox',
                         u'self.saveAsset_groupBox',
                         u'gridWidget1',
                         u'user_comboBox1',
                         u'subName_lineEdit',
                         u'baseName_lineEdit',
                         u'sequence_comboBox']
