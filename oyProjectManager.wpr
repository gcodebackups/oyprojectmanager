#!wing
#!version=3.0
##################################################################
# Wing IDE project file                                          #
##################################################################
[project attributes]
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': (),
                        'filter': '*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
[user attributes]
cache.last-mime-type = {loc('unknown:<untitled> #1'): 'text/x-diff',
                        loc('unknown:<untitled> #2'): 'text/x-diff',
                        loc('unknown:<untitled> #3'): 'text/x-diff',
                        loc('unknown:<untitled> #4'): 'text/x-diff',
                        loc('unknown:<untitled> #5'): 'text/x-diff',
                        loc('unknown:<untitled> #6'): 'text/x-diff'}
debug.err-values = {None: {}}
debug.var-col-widths = [0.38677685950413221,
                        0.61322314049586779]
edit.file-encoding = {loc('../../../../../Documents/cherry/cherry_helloWorld.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/cacheTest_v001.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/python_decorators_v001.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/python_decorators_v003.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/development/test_v001.py'): ''\
        'UTF-8',
                      loc('../../../../../Documents/structure_addFolder.py'): ''\
        'UTF-8',
                      loc('../../../../../geany_cflags_generator.py'): 'UTF-'\
        '8',
                      loc('../AssetType.py'): 'UTF-8',
                      loc('../Cache.py'): 'UTF-8',
                      loc('../MainWindow.py'): 'UTF-8',
                      loc('../User.py'): 'UTF-8',
                      loc('../oyBallisticRuler.py'): 'UTF-8',
                      loc('../oyPivotSwithcer.py'): 'UTF-8',
                      loc('Range.py'): 'UTF-8',
                      loc('Structure.py'): 'UTF-8',
                      loc('tools/cacheTest.py'): 'UTF-8',
                      loc('../oyProjectManagerUI_compiler.py'): 'UTF-8',
                      loc('../oyShaderAssigner.py'): 'UTF-8',
                      loc('../projManTester_v001.py'): 'UTF-8',
                      loc('../../../pythonArgsTest.py'): 'UTF-8',
                      loc('../../../../../test.cpp'): 'UTF-8'}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'lWw5QFQu6T4HxJADBazUBhNfwK'\
        'HIdNJ5',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [1,
                                   2],
                 'notebook_display': 'tabs only',
                 'notebook_percent': 0.24451410658307215,
                 'override_title': None,
                 'pagelist': [('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {}),
                              ('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'column-widths': [1.0],
                                 'expanded-nodes': [(0,),
        (1,),
        (2,),
        (3,)],
                                 'selected-nodes': [(1,
        0)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('python-shell',
                               'tall',
                               0,
                               {'attrib-starts': [],
                                'first-line': 0,
                                'folded-linenos': [],
                                'history': {None: ['def all_files(pattern, s'\
        'earch_path, pathsep=os.pathsep):\n',
        '\tfor path in search_path.split(pathsep):\n',
        '\t\tfor match in glob.glob(os.path.join(path, pattern)):\n',
        '\t\t\tyield match\n',
        "print all_files( '*.jpg', '~')\n",
        "print all_files( '*.jpg', '~').next()\n",
        "print all_files('*.jpg', '~').next()\n",
        "print all_files('*.jpg', '/home/ozgur').next()\n",
        "print all_files('*.jpg', '/home/ozgur')\n",
        "for matchedFile in all_files('*.jpg', '/home/ozgur'): print matched"\
        "File\n",
        "for matchedFile in all_files('ozgur*', '/home/ozgur'): print matche"\
        "dFile\n",
        "for matchedFile in all_files('ozgure*', '/home/ozgur'): print match"\
        "edFile\n",
        "matchedFiles = all_files('ozgure*', '/home/ozgur')\n",
        "matchedFiles = oyAux.findFiles( 'ozgure*', '/home/ozgur' )\n",
        'print matchedFiles\n',
        "glob.glob('/home/ozgur/ozgure*')\n",
        "glob.glob('/home/ozgur/Ozgure*')\n",
        "glob.glob('/home/ozgur/[oO]Ozgure*')\n",
        "glob.glob('/home/ozgur/[oO]zgure*')\n",
        "glob.glob0('/home/ozgur','ozgure')\n",
        "glob.glob0('/home/ozgur','Ozgure')\n",
        "glob.glob0('/home/ozgur','ozgure*')\n",
        "glob.glob0('/home/ozgur/','ozgure*')\n",
        "glob.glob0('/home/ozgur/','ozgure')\n",
        "glob.glob1('/home/ozgur','ozgure*')\n",
        "glob.glob1('/home/ozgur','Ozgure*')\n",
        "glob.glob1('/home/ozgur','[o]Ozgure*')\n",
        "glob.glob1('/home/ozgur','[oO]zgure*')\n",
        "os.list('/home/ozgur')\n",
        "os.listdir('/home/ozgur')\n",
        "os.listdir('/home/ozgur/')\n",
        "os.listdir('/home/ozgur/*')\n",
        "path = '/home/ozgur'\n",
        'filter( os.isdir, os.listdir(path) )\n',
        'filter( os.path.isdir, os.listdir(path) )\n',
        'os.listdir(path)\n',
        'for entry in os.listdir(path):\n',
        'filter( os.path.isdir, map(os.path.join, path, os.listdir(path) )\n',
        'filter( os.path.isdir, map(os.path.join, path, os.listdir(path) ) )'\
        '\n',
        'dirList =  os.listdir(path)\n',
        'entryCount = len(dirList)\n',
        'filter( os.path.isdir, map( os.path.join, [path] * entryCount, dirL'\
        'ist ) )\n',
        'import glob\n',
        "glob.glob( '/home/ozgur/', '*' )\n",
        "glob.glob( '/home/ozgur/*' )\n",
        'reload(oyAux)\n',
        "oyAux.getChildFolders( '/home/ozgur' )\n",
        "oyAux.getChildFiles( '/home/ozgur' )\n",
        'import fnmatch\n',
        "fnmatch.fnmatch( '/home/ozgur/ozgure_v001.jpg', 'ozgur*' )\n",
        "fnmatch.fnmatch( 'ozgure_v001.jpg', 'ozgur*' )\n",
        "fnmatch.fnmatch( 'ozgure_v001.jpg', 'Ozgur*' )\n",
        "glob.glob( '/home/ozgur/ozgur*')\n",
        'from oyProjectManager.dataModels import projectModel\n',
        'from oyProjectManager.dataModels import assetModel\n',
        '\tassert(isinstance(asset,assetModel.Asset))\n',
        '\tasset.getFileName()\n',
        'import os\n',
        "os.path.basename( '/home/ozgur/Documents/Works/JOBs2/ETI_TOPKEK/_CH"\
        "ARACTER_SETUP_/_RIGS_/Muslum' )\n",
        'for asset in seq.getAllAssets():\n',
        'len(seq.getAllAssets())\n',
        'from oyProjectManager.dataModels import assetModel, projectModel\n',
        "for asset in seq.getAllAssetsForType('RIG'):\n",
        "for asset in seq.getAllAssetFileNamesForType('RIG'):\n",
        '\tprint asset\n',
        "for asset in seq.getAllAssetsForTypeAndBaseName('RIG','Muslum'):\n",
        'reload(projectModel)\n',
        "proj = projectModel.Project( 'ETI_TOPKEK' )\n",
        "seq = projectModel.Sequence( proj, '_CHARACTER_SETUP_' )\n",
        "for asset in seq.getAllAssetsForTypeAndBaseName('RIG','Kopil'):\n",
        '\tprint asset.getFileName()\n',
        'myDict = dict()\n',
        "myDict.get('a')\n",
        "print myDict.get('a')\n",
        "print myDict['a']\n",
        "myDict['a']\n",
        'myDict.get(a,1)\n',
        "myDict.get('a',1)\n",
        'import time\n',
        'time.clock\n',
        'time.clock()\n',
        'time.ctime()\n',
        'time.time()\n',
        "int('')\n",
        'import oyAux\n',
        'import oyAuxiliaryFunctions\n',
        'import oyAuxiliaryFunctions as oyAux\n',
        'del( oyAuxiliaryFunctions )\n',
        'reload( oyAux )\n',
        "oyAux.backUpFile('/home/ozgur/ozgure_v003.jpg')\n",
        "oyAux.backUpFile('/home/ozgur/screen-configurations.xml')\n",
        'reload( assetUpdater )\n',
        'from oyProjectManager.ui import assetManager\n',
        'reload(assetManager)\n',
        'assetManager.UI()\n',
        'assetUpdater.UI()\n',
        "assetUpdater.UI('MAYA'))\n",
        'from oyProjectManager.ui import assetUpdater\n',
        "assetUpdater.UI('MAYA')\n",
        'reload(assetUpdater)\n']},
                                'sel-line': 3,
                                'sel-line-start': 133,
                                'selection_end': 137,
                                'selection_start': 137}),
                              ('source-assistant',
                               'tall',
                               2,
                               {'docstring-during-complete': False,
                                'wrap-lines': True}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {u'By Module': {'column-w'\
        'idths': [1.0],
        'expanded-nodes': [[('generic attribute',
                             loc('environments/__init__.py'),
                             '')],
                           [('generic attribute',
                             loc('environments/__init__.py'),
                             ''),
                            ('generic attribute',
                             loc('environments/houdiniEnv.py'),
                             '')],
                           [('generic attribute',
                             loc('environments/__init__.py'),
                             ''),
                            ('generic attribute',
                             loc('environments/houdiniEnv.py'),
                             ''),
                            ('class def',
                             loc('environments/houdiniEnv.py'),
                             'FileHistory')]],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('dataModels/__init__.py'),
                      '')]}},
                                'browse_mode': u'By Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('templates',
                               'tall',
                               0,
                               {'tree-states': {u'c': [],
        u'html': [],
        u'py': []}})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          4],
        'notebook_display': 'tabs only',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('bookmarks',
                      'wide',
                      1,
                      {'tree-state': []}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 0,
                       'selection_start': 0}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['dupJoint\n',
        'import oyProjectManager as oyPM\n']},
                       'sel-line': 0,
                       'sel-line-start': 0,
                       'selection_end': 4,
                       'selection_start': 4}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.hg',
                      'wide',
                      0,
                      {}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {None: ['pm.__version__\n',
        'myRotOrder = oyAutoRig.rotationOrder()\n',
        "myRotOrder = oyAutoRig.rotationOrder('1')\n",
        'import oyAutoRig\n',
        "myRotOrder = oyAutoRig.rotationOrder('0')\n",
        'testObj = pm.PyNode\n',
        'import java\n',
        'import javax\n',
        'import twisted\n',
        'help.modules\n',
        'help>modules\n',
        'help\n',
        'help()\n',
        'modules\n',
        'command = "geany -v -g maya.c.tags "\n',
        'defaultPath = "/usr/autodesk/maya/include/maya"\n',
        'os.listdir(defaultPath)\n',
        'headerFiles = os.listdir(defaultPath)\n',
        'defaultPath.join(headerFiles)\n',
        'defaultPath.join(headerFiles+" ")\n',
        '(" "+defaultPath).join(headerFiles)\n',
        'print command,(" "+defaultPath).join(headerFiles)\n',
        'import pydoc\n',
        'import oyObjectPicker\n',
        'pydoc.doc( oyObjectPicker )\n',
        'pydoc.HTMLDoc( oyObjectPicker )\n',
        'import maya.OpenMaya as OpenMaya\n',
        'nAttr = OpenMaya.MFnNumericAttribute\n',
        'nAttr = OpenMaya.MFnNumericAttribute()\n',
        '1%2\n',
        '4%4\n',
        '4%2\n',
        '3%2\n',
        'import sys, os, re\n',
        'from DB_ride\n',
        'import pgdb\n',
        'oyProjectManager.__version__\n',
        'oyProjectManager.ProjectManager.__version__\n',
        'import oyProjectManager\n',
        'oyProjectManager.ProjectManager\n',
        'myPMan = oyProjectManager.ProjectManager\n',
        'myPMan.\n',
        'myPMan._jobsFolder\n',
        'myPMan._ser\n',
        'myPMan._serverPath\n',
        'myPMan._defaultProjectDefinitionFullPath()\n',
        'os.path.join("a","b")\n',
        'os.path.join("a","b","c")\n',
        'os.path.join("E","b","c")\n',
        'os.path.join("E:","b","c")\n',
        'os.path.sep\n',
        'reload( oyProjectManager )\n',
        'myPMan = oyProjectManager.ProjectManager()\n',
        'myPMan._defaultProjectDefinitionFullPath\n',
        'os.walk("M:/JOBs")\n',
        'for path, subdirs, files in os.walk("M:/JOBs"):\n',
        'for path, subdirs, files in os.walk("E:/ozgur"):\n',
        '\tprint subdirs\n',
        'import os\n',
        'for path, subdirs, files in os.walk("E:/ozgur/temp"):\n',
        '    print subdirs\n',
        'os.listdir("M:/JOBs")\n',
        'import oyProjectManager.models.asset as asset\n',
        "myNew = asset.Asset('TEST_2','DENEME_SEQ')\n",
        'sys.modules(\n',
        ')\n',
        'for moduleName in sys.modules.keys:\n',
        '\tprint moduleName, sys.modules[moduleName]\n',
        "if not 'oyProjectManager.models.project' in sys.modules:\n",
        '\tprint "not in module list"\n',
        "if 'oyProjectManager.models.asset' in sys.modules:\n",
        '\tprint "it is in modules"\n',
        'import sys\n',
        'sys.modules\n',
        'for moduleName in sys.modules.keys():\n',
        '\tprint moduleName\n',
        "'oyProjectManager.models.asset' in sys.modules\n",
        "'oyProjectManager.models.sequence' in sys.modules\n",
        "'oyProjectManager.models.user' in sys.modules\n",
        'from oyProjectManager.models import database\n',
        'myDB = database.Database()\n',
        'myDB.getProjects()\n',
        'myDB.getUserInitials\n',
        'myDB.getUserInitials()\n',
        'myDB.getUserNames()\n',
        'myDB.getUsers()\n',
        'from oyProjectManager.models import asset\n',
        'from oyProjectManager.models import project, sequence\n',
        'newProj.getSequenceNames()\n',
        'from oyProjectManager.models import project, sequence, asset\n',
        "newProj = project.Project('TEST_2')\n",
        'newSeq = newProj.getSequences()[0]\n',
        'a = 1\n',
        'a.__abs__\n',
        'a = -1\n',
        'a.__abs__()\n',
        '1\n',
        '123\n',
        '142132123\n',
        '212\n']},
                       'sel-line': 3,
                       'sel-line-start': 133,
                       'selection_end': 137,
                       'selection_start': 137}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'please update',
                                       'fStartPos': 0,
                                       'fStyle': 'wildcard',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'True',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'column-widths': [0.37828947368421051,
        0.62171052631578949],
                                      'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.62374138844727078,
        ('vertical',
         1.0,
         ('vertical',
          0.0,
          {'bookmarks': ([(loc('dataModels/assetModel.py'),
                           {'attrib-starts': [('Asset',
        10),
        ('Asset.getFileName',
         312)],
                            'first-line': 294,
                            'folded-linenos': [],
                            'sel-line': 315,
                            'sel-line-start': 11169,
                            'selection_end': 11177,
                            'selection_start': 11177},
                           1261814370.5278611),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.getSettingsFromEnvironment',
         1059)],
                            'first-line': 1049,
                            'folded-linenos': [],
                            'sel-line': 1072,
                            'sel-line-start': 40075,
                            'selection_end': 40083,
                            'selection_start': 40083},
                           1261814370.604104),
                          (loc('dataModels/abstractClasses.py'),
                           {'attrib-starts': [('Environment',
        20)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 20,
                            'sel-line-start': 556,
                            'selection_end': 582,
                            'selection_start': 582},
                           1261814370.70768),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.getSettingsFromEnvironment',
         1059)],
                            'first-line': 1049,
                            'folded-linenos': [],
                            'sel-line': 1080,
                            'sel-line-start': 40357,
                            'selection_end': 40361,
                            'selection_start': 40361},
                           1261815311.1119721),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.checkOutputFileVersion',
         1095)],
                            'first-line': 1095,
                            'folded-linenos': [],
                            'sel-line': 1110,
                            'sel-line-start': 41558,
                            'selection_end': 41579,
                            'selection_start': 41574},
                           1261815376.1438849),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.saveAsset',
         1165)],
                            'first-line': 1172,
                            'folded-linenos': [],
                            'sel-line': 1210,
                            'sel-line-start': 45221,
                            'selection_end': 45233,
                            'selection_start': 45233},
                           1261815377.081923),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.saveAsset',
         1165)],
                            'first-line': 1187,
                            'folded-linenos': [],
                            'sel-line': 1216,
                            'sel-line-start': 45467,
                            'selection_end': 45494,
                            'selection_start': 45486},
                           1261815462.9829531),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.exportAsset',
         1224)],
                            'first-line': 1229,
                            'folded-linenos': [],
                            'sel-line': 1265,
                            'sel-line-start': 47520,
                            'selection_end': 47536,
                            'selection_start': 47536},
                           1261815472.404985),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.openAsset',
         1270)],
                            'first-line': 1268,
                            'folded-linenos': [],
                            'sel-line': 1299,
                            'sel-line-start': 48947,
                            'selection_end': 48963,
                            'selection_start': 48963},
                           1261815570.587934),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.openAsset',
         1270)],
                            'first-line': 1286,
                            'folded-linenos': [],
                            'sel-line': 1323,
                            'sel-line-start': 50099,
                            'selection_end': 50111,
                            'selection_start': 50111},
                           1261815621.295989),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.openAsset',
         1270)],
                            'first-line': 1302,
                            'folded-linenos': [],
                            'sel-line': 1337,
                            'sel-line-start': 50781,
                            'selection_end': 50806,
                            'selection_start': 50806},
                           1261815675.8757451),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.importAsset',
         1347)],
                            'first-line': 1338,
                            'folded-linenos': [],
                            'sel-line': 1366,
                            'sel-line-start': 51867,
                            'selection_end': 51879,
                            'selection_start': 51879},
                           1261815727.8704989),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.importAsset',
         1347)],
                            'first-line': 1342,
                            'folded-linenos': [],
                            'sel-line': 1375,
                            'sel-line-start': 52249,
                            'selection_end': 52265,
                            'selection_start': 52265},
                           1261815751.8018899),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.referenceAsset',
         1388)],
                            'first-line': 1379,
                            'folded-linenos': [],
                            'sel-line': 1414,
                            'sel-line-start': 53864,
                            'selection_end': 53864,
                            'selection_start': 53864},
                           1261815831.0534401),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.__init__',
         40)],
                            'first-line': 67,
                            'folded-linenos': [],
                            'sel-line': 72,
                            'sel-line-start': 1959,
                            'selection_end': 1975,
                            'selection_start': 1967},
                           1261815888.1211131),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.updateAssetTypeList',
         370)],
                            'first-line': 355,
                            'folded-linenos': [],
                            'sel-line': 379,
                            'sel-line-start': 16051,
                            'selection_end': 16100,
                            'selection_start': 16100},
                           1261815889.685169),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.updateAssetTypeList',
         370)],
                            'first-line': 355,
                            'folded-linenos': [],
                            'sel-line': 379,
                            'sel-line-start': 16051,
                            'selection_end': 16111,
                            'selection_start': 16103},
                           1261815934.8120489),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.getSettingsFromEnvironment',
         1059)],
                            'first-line': 1045,
                            'folded-linenos': [],
                            'sel-line': 1064,
                            'sel-line-start': 39702,
                            'selection_end': 39763,
                            'selection_start': 39763},
                           1261815935.4731901),
                          (loc('dataModels/abstractClasses.py'),
                           {'attrib-starts': [('Environment',
        20),
        ('Environment.reference',
         64)],
                            'first-line': 51,
                            'folded-linenos': [],
                            'sel-line': 67,
                            'sel-line-start': 1718,
                            'selection_end': 1730,
                            'selection_start': 1730},
                           1261816018.027957),
                          [loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.getSettingsFromEnvironment',
         1059)],
                            'first-line': 1045,
                            'folded-linenos': [],
                            'sel-line': 1064,
                            'sel-line-start': 39738,
                            'selection_end': 39799,
                            'selection_start': 39799},
                           1261856518.9196451]],
                         19),
           'current-loc': loc('ui/assetManager.py'),
           'editor-states': {loc('../oyAuxiliaryFunctions.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 178,
        'selection_end': 178,
        'selection_start': 178},
                             loc('dataModels/abstractClasses.py'): {'attrib-'\
        'starts': [('Environment',
                    20),
                   ('Environment.reference',
                    64)],
        'first-line': 51,
        'folded-linenos': [],
        'sel-line': 67,
        'sel-line-start': 1718,
        'selection_end': 1730,
        'selection_start': 1730},
                             loc('dataModels/assetModel.py'): {'attrib-start'\
        's': [('Asset',
               10),
              ('Asset.getFileName',
               312)],
        'first-line': 294,
        'folded-linenos': [],
        'sel-line': 315,
        'sel-line-start': 11169,
        'selection_end': 11177,
        'selection_start': 11177},
                             loc('dataModels/projectModel.py'): {'attrib-sta'\
        'rts': [('Database',
                 13)],
        'first-line': 12,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 429,
        'selection_end': 433,
        'selection_start': 433},
                             loc('environments/houdiniEnv.py'): {'attrib-sta'\
        'rts': [('HoudiniEnvironment',
                 28)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 29,
        'sel-line-start': 501,
        'selection_end': 508,
        'selection_start': 508},
                             loc('environments/mayaEnv.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 195,
        'selection_end': 195,
        'selection_start': 195},
                             loc('environments/nukeEnv.py'): {'attrib-starts': [(''\
        'save',
        12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 296,
        'selection_end': 300,
        'selection_start': 300},
                             loc('todo.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 13,
        'selection_end': 24,
        'selection_start': 24},
                             loc('ui/assetManager.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 132,
        'selection_end': 196,
        'selection_start': 196},
                             loc('ui/assetUpdater.py'): {'attrib-starts': [(''\
        'MainWindow',
        33),
        ('MainWindow.__init__',
         45)],
        'first-line': 35,
        'folded-linenos': [],
        'sel-line': 83,
        'sel-line-start': 2667,
        'selection_end': 2667,
        'selection_start': 2667},
                             loc('ui/uiCompiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 19,
        'sel-line-start': 667,
        'selection_end': 667,
        'selection_start': 667},
                             loc('versionHistory.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 196,
        'selection_end': 258,
        'selection_start': 258},
                             loc('../../../qthread_test.py'): {'attrib-start'\
        's': [('TerminalX',
               18),
              ('TerminalX.run',
               22)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 25,
        'sel-line-start': 924,
        'selection_end': 994,
        'selection_start': 936}},
           'has-focus': False},
          {'bookmarks': ([(loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._centerWindow',
         93)],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 97,
                            'sel-line-start': 3016,
                            'selection_end': 3047,
                            'selection_start': 3047},
                           1261852195.4566031),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1261852198.6725709),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33)],
                            'first-line': 11,
                            'folded-linenos': [],
                            'sel-line': 33,
                            'sel-line-start': 708,
                            'selection_end': 724,
                            'selection_start': 714},
                           1261854342.8647151),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.__init__',
         45)],
                            'first-line': 38,
                            'folded-linenos': [],
                            'sel-line': 64,
                            'sel-line-start': 1940,
                            'selection_end': 1948,
                            'selection_start': 1948},
                           1261854344.9653349),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._fillUI',
         206)],
                            'first-line': 210,
                            'folded-linenos': [],
                            'sel-line': 249,
                            'sel-line-start': 8422,
                            'selection_end': 8442,
                            'selection_start': 8434},
                           1261854743.310874),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._fillUI',
         206)],
                            'first-line': 216,
                            'folded-linenos': [],
                            'sel-line': 254,
                            'sel-line-start': 8664,
                            'selection_end': 8676,
                            'selection_start': 8676},
                           1261854861.5114141),
                          (loc('environments/mayaEnv.py'),
                           {'attrib-starts': [('MayaEnvironment',
        15),
        ('MayaEnvironment.updateAssets',
         374)],
                            'first-line': 332,
                            'folded-linenos': [],
                            'sel-line': 375,
                            'sel-line-start': 12664,
                            'selection_end': 12675,
                            'selection_start': 12675},
                           1261855220.645473),
                          (loc('environments/houdiniEnv.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1261855279.5077541),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._setupSignals',
         91)],
                            'first-line': 87,
                            'folded-linenos': [],
                            'sel-line': 91,
                            'sel-line-start': 2563,
                            'selection_end': 2584,
                            'selection_start': 2571},
                           1261855280.08079),
                          (loc('dataModels/abstractClasses.py'),
                           {'attrib-starts': [('Environment',
        20),
        ('Environment.updateAssets',
         108)],
                            'first-line': 68,
                            'folded-linenos': [],
                            'sel-line': 112,
                            'sel-line-start': 2875,
                            'selection_end': 2879,
                            'selection_start': 2879},
                           1261855280.509779),
                          (loc('environments/mayaEnv.py'),
                           {'attrib-starts': [('MayaEnvironment',
        15),
        ('MayaEnvironment.updateAssets',
         374)],
                            'first-line': 334,
                            'folded-linenos': [],
                            'sel-line': 374,
                            'sel-line-start': 12635,
                            'selection_end': 12676,
                            'selection_start': 12662},
                           1261855310.308655),
                          (loc('dataModels/abstractClasses.py'),
                           {'attrib-starts': [('Environment',
        20),
        ('Environment.updateAssets',
         108)],
                            'first-line': 68,
                            'folded-linenos': [],
                            'sel-line': 108,
                            'sel-line-start': 2765,
                            'selection_end': 2792,
                            'selection_start': 2792},
                           1261855339.4076581),
                          (loc('environments/mayaEnv.py'),
                           {'attrib-starts': [('MayaEnvironment',
        15),
        ('MayaEnvironment.updateAssets',
         374)],
                            'first-line': 347,
                            'folded-linenos': [],
                            'sel-line': 388,
                            'sel-line-start': 13087,
                            'selection_end': 13141,
                            'selection_start': 13141},
                           1261855346.219708),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._setupSignals',
         91)],
                            'first-line': 87,
                            'folded-linenos': [],
                            'sel-line': 92,
                            'sel-line-start': 2592,
                            'selection_end': 2618,
                            'selection_start': 2618},
                           1261856285.29913),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.openAsset',
         1270)],
                            'first-line': 1281,
                            'folded-linenos': [],
                            'sel-line': 1298,
                            'sel-line-start': 48950,
                            'selection_end': 48983,
                            'selection_start': 48983},
                           1261856302.8432),
                          (loc('environments/mayaEnv.py'),
                           {'attrib-starts': [('MayaEnvironment',
        15),
        ('MayaEnvironment.open_',
         94)],
                            'first-line': 83,
                            'folded-linenos': [],
                            'sel-line': 116,
                            'sel-line-start': 3378,
                            'selection_end': 3411,
                            'selection_start': 3411},
                           1261856377.1327569),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        34),
        ('MainWindow.openAsset',
         1271)],
                            'first-line': 1282,
                            'folded-linenos': [],
                            'sel-line': 1295,
                            'sel-line-start': 48667,
                            'selection_end': 48692,
                            'selection_start': 48692},
                           1261856435.4784589),
                          (loc('environments/mayaEnv.py'),
                           {'attrib-starts': [('MayaEnvironment',
        15),
        ('MayaEnvironment.open_',
         94)],
                            'first-line': 77,
                            'folded-linenos': [],
                            'sel-line': 94,
                            'sel-line-start': 2663,
                            'selection_end': 2676,
                            'selection_start': 2671},
                           1261856891.9164701),
                          (loc('dataModels/abstractClasses.py'),
                           {'attrib-starts': [('Environment',
        20),
        ('Environment.updateAssets',
         108)],
                            'first-line': 68,
                            'folded-linenos': [],
                            'sel-line': 108,
                            'sel-line-start': 2765,
                            'selection_end': 2792,
                            'selection_start': 2792},
                           1261856897.3784621),
                          [loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        34),
        ('MainWindow.openAsset',
         1271)],
                            'first-line': 1282,
                            'folded-linenos': [],
                            'sel-line': 1295,
                            'sel-line-start': 48667,
                            'selection_end': 48692,
                            'selection_start': 48692},
                           1261856897.9066839]],
                         19),
           'current-loc': loc('ui/assetManager.py'),
           'editor-states': {loc('../oyAuxiliaryFunctions.py'): {'attrib-sta'\
        'rts': [('createAxialCorrectionGroup',
                 374)],
        'first-line': 371,
        'folded-linenos': [],
        'sel-line': 408,
        'sel-line-start': 9785,
        'selection_end': 9803,
        'selection_start': 9803},
                             loc('dataModels/abstractClasses.py'): {'attrib-'\
        'starts': [('Environment',
                    20),
                   ('Environment.updateAssets',
                    108)],
        'first-line': 68,
        'folded-linenos': [],
        'sel-line': 108,
        'sel-line-start': 2765,
        'selection_end': 2792,
        'selection_start': 2792},
                             loc('dataModels/assetModel.py'): {'attrib-start'\
        's': [('Asset',
               10),
              ('Asset.setPathVariables',
               224)],
        'first-line': 223,
        'folded-linenos': [],
        'sel-line': 233,
        'sel-line-start': 8202,
        'selection_end': 8247,
        'selection_start': 8247},
                             loc('dataModels/projectModel.py'): {'attrib-sta'\
        'rts': [('Sequence',
                 582),
                ('Sequence.__init__',
                 591)],
        'first-line': 595,
        'folded-linenos': [],
        'sel-line': 597,
        'sel-line-start': 18667,
        'selection_end': 18697,
        'selection_start': 18697},
                             loc('environments/houdiniEnv.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                             loc('environments/mayaEnv.py'): {'attrib-starts': [(''\
        'MayaEnvironment',
        15),
        ('MayaEnvironment.open_',
         94)],
        'first-line': 77,
        'folded-linenos': [],
        'sel-line': 94,
        'sel-line-start': 2663,
        'selection_end': 2676,
        'selection_start': 2671},
                             loc('environments/nukeEnv.py'): {'attrib-starts': [(''\
        'NukeEnvironment',
        15)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 299,
        'selection_end': 300,
        'selection_start': 300},
                             loc('todo.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 47,
        'sel-line-start': 1648,
        'selection_end': 1693,
        'selection_start': 1693},
                             loc('ui/assetManager.py'): {'attrib-starts': [(''\
        'MainWindow',
        34),
        ('MainWindow.openAsset',
         1271)],
        'first-line': 1276,
        'folded-linenos': [],
        'sel-line': 1298,
        'sel-line-start': 48939,
        'selection_end': 48993,
        'selection_start': 48993},
                             loc('ui/assetUpdater.py'): {'attrib-starts': [(''\
        'MainWindow',
        33),
        ('MainWindow._fillUI',
         206)],
        'first-line': 216,
        'folded-linenos': [],
        'sel-line': 254,
        'sel-line-start': 8693,
        'selection_end': 8705,
        'selection_start': 8705},
                             loc('ui/uiCompiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 20,
        'sel-line-start': 668,
        'selection_end': 668,
        'selection_start': 668},
                             loc('versionHistory.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                             loc('../../../qthread_test.py'): {'attrib-start'\
        's': [('TerminalViewer',
               5),
              ('TerminalViewer.Activated',
               12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 550,
        'selection_end': 576,
        'selection_start': 576}},
           'has-focus': True}),
         {'bookmarks': ([[loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        31),
        ('MainWindow.updateAssetsListWidget',
         504)],
                           'first-line': 515,
                           'folded-linenos': [],
                           'sel-line': 550,
                           'sel-line-start': 21820,
                           'selection_end': 21850,
                           'selection_start': 21835},
                          1258576644.4392741],
                         [loc('ui/uiCompiler.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 20,
                           'sel-line-start': 663,
                           'selection_end': 663,
                           'selection_start': 663},
                          1258576647.0143559],
                         [loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        31),
        ('MainWindow.updateAssetsListWidget',
         504)],
                           'first-line': 515,
                           'folded-linenos': [],
                           'sel-line': 550,
                           'sel-line-start': 21820,
                           'selection_end': 21850,
                           'selection_start': 21835},
                          1258576687.10078],
                         (loc('__init__.py'),
                          {'attrib-starts': [],
                           'first-line': 141,
                           'folded-linenos': [],
                           'sel-line': 143,
                           'sel-line-start': 6563,
                           'selection_end': 6563,
                           'selection_start': 6563},
                          1259100084.6909609),
                         (loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.updateVersionListBuffer',
         576)],
                           'first-line': 587,
                           'folded-linenos': [],
                           'sel-line': 590,
                           'sel-line-start': 23796,
                           'selection_end': 23804,
                           'selection_start': 23804},
                          1259620024.2567401),
                         (loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.addNewListItem',
         1000)],
                           'first-line': 1000,
                           'folded-linenos': [],
                           'sel-line': 1003,
                           'sel-line-start': 37930,
                           'selection_end': 37938,
                           'selection_start': 37938},
                          1259620026.8163941),
                         (loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._setupSignals',
         87)],
                           'first-line': 169,
                           'folded-linenos': [],
                           'sel-line': 171,
                           'sel-line-start': 8722,
                           'selection_end': 8852,
                           'selection_start': 8831},
                          1259620647.255482),
                         (loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._setupSignals',
         87)],
                           'first-line': 151,
                           'folded-linenos': [],
                           'sel-line': 160,
                           'sel-line-start': 7782,
                           'selection_end': 7879,
                           'selection_start': 7879},
                          1259620648.919203),
                         [loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._setupSignals',
         87)],
                           'first-line': 151,
                           'folded-linenos': [],
                           'sel-line': 160,
                           'sel-line-start': 7782,
                           'selection_end': 7879,
                           'selection_start': 7879},
                          1259620783.1624899],
                         (loc('dataModels/assetModel.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 6,
                           'sel-line-start': 78,
                           'selection_end': 78,
                           'selection_start': 78},
                          1261395538.3833549),
                         (loc('ui/assetUpdater.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 0,
                           'sel-line-start': 0,
                           'selection_end': 0,
                           'selection_start': 0},
                          1261854763.3251081),
                         (loc('ui/assetUpdater.py'),
                          {'attrib-starts': [('MainWindow',
        33)],
                           'first-line': 20,
                           'folded-linenos': [],
                           'sel-line': 33,
                           'sel-line-start': 708,
                           'selection_end': 724,
                           'selection_start': 714},
                          1261854764.7264919),
                         [loc('ui/assetUpdater.py'),
                          {'attrib-starts': [('MainWindow',
        33)],
                           'first-line': 20,
                           'folded-linenos': [],
                           'sel-line': 33,
                           'sel-line-start': 708,
                           'selection_end': 724,
                           'selection_start': 714},
                          1261854766.9168301]],
                        12),
          'current-loc': loc('ui/assetUpdater.py'),
          'editor-states': {loc('../oyAuxiliaryFunctions.py'): {'attrib-star'\
        'ts': [('createAxialCorrectionGroup',
                370)],
        'first-line': 367,
        'folded-linenos': [],
        'sel-line': 404,
        'sel-line-start': 9685,
        'selection_end': 9703,
        'selection_start': 9703},
                            loc('dataModels/abstractClasses.py'): {},
                            loc('dataModels/assetModel.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 78,
        'selection_end': 78,
        'selection_start': 78},
                            loc('dataModels/projectModel.py'): {'attrib-star'\
        'ts': [('Project',
                447),
               ('Project.getDatabase',
                549)],
        'first-line': 546,
        'folded-linenos': [],
        'sel-line': 554,
        'sel-line-start': 17486,
        'selection_end': 17490,
        'selection_start': 17490},
                            loc('environments/houdiniEnv.py'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                            loc('environments/mayaEnv.py'): {'attrib-starts': [(''\
        'getPathVariables',
        123)],
        'first-line': 130,
        'folded-linenos': [],
        'sel-line': 155,
        'sel-line-start': 4292,
        'selection_end': 4313,
        'selection_start': 4299},
                            loc('environments/nukeEnv.py'): {'attrib-starts': [(''\
        'save',
        12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 296,
        'selection_end': 300,
        'selection_start': 300},
                            loc('todo.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 32,
        'sel-line-start': 1649,
        'selection_end': 1693,
        'selection_start': 1693},
                            loc('ui/assetManager.py'): {'attrib-starts': [(''\
        'MainWindow',
        33),
        ('MainWindow.updateSubNameField',
         467)],
        'first-line': 636,
        'folded-linenos': [],
        'sel-line': 471,
        'sel-line-start': 19369,
        'selection_end': 19377,
        'selection_start': 19377},
                            loc('ui/assetUpdater.py'): {'attrib-starts': [(''\
        'MainWindow',
        33),
        ('MainWindow.__init__',
         45)],
        'first-line': 60,
        'folded-linenos': [],
        'sel-line': 76,
        'sel-line-start': 2417,
        'selection_end': 2441,
        'selection_start': 2430},
                            loc('ui/uiCompiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 68,
        'selection_end': 96,
        'selection_start': 82},
                            loc('versionHistory.txt'): {},
                            loc('../../../qthread_test.py'): {'attrib-starts': [(''\
        'TerminalViewer',
        5),
        ('TerminalViewer.Activated',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 547,
        'selection_end': 576,
        'selection_start': 576}},
          'has-focus': False}),
        ('vertical',
         1.0,
         ('vertical',
          1.0,
          {'bookmarks': ([(loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.getEnvironmentName',
         132)],
                            'first-line': 133,
                            'folded-linenos': [],
                            'sel-line': 137,
                            'sel-line-start': 4291,
                            'selection_end': 4295,
                            'selection_start': 4295},
                           1261850471.0644839),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.__init__',
         45)],
                            'first-line': 57,
                            'folded-linenos': [],
                            'sel-line': 45,
                            'sel-line-start': 1165,
                            'selection_end': 1181,
                            'selection_start': 1173},
                           1261850553.5194099),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._fillUI',
         201)],
                            'first-line': 179,
                            'folded-linenos': [],
                            'sel-line': 204,
                            'sel-line-start': 6542,
                            'selection_end': 6550,
                            'selection_start': 6550},
                           1261850562.744009),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._fillUI',
         201)],
                            'first-line': 191,
                            'folded-linenos': [],
                            'sel-line': 206,
                            'sel-line-start': 6579,
                            'selection_end': 6633,
                            'selection_start': 6627},
                           1261850576.344564),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._fillUI',
         201)],
                            'first-line': 191,
                            'folded-linenos': [],
                            'sel-line': 206,
                            'sel-line-start': 6579,
                            'selection_end': 6638,
                            'selection_start': 6627},
                           1261850578.428787),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._fillUI',
         201)],
                            'first-line': 191,
                            'folded-linenos': [],
                            'sel-line': 206,
                            'sel-line-start': 6579,
                            'selection_end': 6644,
                            'selection_start': 6644},
                           1261850579.7852161),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._doEnvRead',
         252)],
                            'first-line': 217,
                            'folded-linenos': [],
                            'sel-line': 256,
                            'sel-line-start': 8689,
                            'selection_end': 8713,
                            'selection_start': 8697},
                           1261850585.506984),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._selectAllAssets',
         261)],
                            'first-line': 229,
                            'folded-linenos': [],
                            'sel-line': 268,
                            'sel-line-start': 9021,
                            'selection_end': 9055,
                            'selection_start': 9055},
                           1261850586.477658),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.__init__',
         45)],
                            'first-line': 66,
                            'folded-linenos': [],
                            'sel-line': 71,
                            'sel-line-start': 2211,
                            'selection_end': 2236,
                            'selection_start': 2236},
                           1261850588.8869469),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.setAssetTupleList',
         121)],
                            'first-line': 86,
                            'folded-linenos': [],
                            'sel-line': 125,
                            'sel-line-start': 3943,
                            'selection_end': 3968,
                            'selection_start': 3968},
                           1261850590.7825339),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._fillUI',
         201)],
                            'first-line': 167,
                            'folded-linenos': [],
                            'sel-line': 206,
                            'sel-line-start': 6581,
                            'selection_end': 6645,
                            'selection_start': 6629},
                           1261850592.5344579),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._doEnvRead',
         252)],
                            'first-line': 217,
                            'folded-linenos': [],
                            'sel-line': 256,
                            'sel-line-start': 8691,
                            'selection_end': 8715,
                            'selection_start': 8699},
                           1261850593.5538449),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._selectAllAssets',
         261)],
                            'first-line': 229,
                            'folded-linenos': [],
                            'sel-line': 268,
                            'sel-line-start': 9023,
                            'selection_end': 9056,
                            'selection_start': 9040},
                           1261850594.3768761),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.__init__',
         45)],
                            'first-line': 66,
                            'folded-linenos': [],
                            'sel-line': 71,
                            'sel-line-start': 2211,
                            'selection_end': 2235,
                            'selection_start': 2219},
                           1261850595.581543),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.setAssetTupleList',
         121)],
                            'first-line': 86,
                            'folded-linenos': [],
                            'sel-line': 125,
                            'sel-line-start': 3943,
                            'selection_end': 3967,
                            'selection_start': 3951},
                           1261850601.983814),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._fillUI',
         201)],
                            'first-line': 167,
                            'folded-linenos': [],
                            'sel-line': 206,
                            'sel-line-start': 6581,
                            'selection_end': 6646,
                            'selection_start': 6646},
                           1261850603.319845),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._doEnvRead',
         252)],
                            'first-line': 217,
                            'folded-linenos': [],
                            'sel-line': 257,
                            'sel-line-start': 8747,
                            'selection_end': 8751,
                            'selection_start': 8751},
                           1261850605.1731701),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._selectAllAssets',
         261)],
                            'first-line': 229,
                            'folded-linenos': [],
                            'sel-line': 268,
                            'sel-line-start': 9023,
                            'selection_end': 9056,
                            'selection_start': 9040},
                           1261850606.4413459),
                          (loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.updateAssets',
         289)],
                            'first-line': 259,
                            'folded-linenos': [],
                            'sel-line': 289,
                            'sel-line-start': 9868,
                            'selection_end': 9888,
                            'selection_start': 9876},
                           1261850607.8158729),
                          [loc('ui/assetUpdater.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.updateAssets',
         289)],
                            'first-line': 259,
                            'folded-linenos': [],
                            'sel-line': 289,
                            'sel-line-start': 9868,
                            'selection_end': 9888,
                            'selection_start': 9876},
                           1261855937.5032351]],
                         19),
           'current-loc': loc('ui/assetUpdater.py'),
           'editor-states': {loc('../oyAuxiliaryFunctions.py'): {'attrib-sta'\
        'rts': [('createAxialCorrectionGroup',
                 374)],
        'first-line': 371,
        'folded-linenos': [],
        'sel-line': 408,
        'sel-line-start': 9785,
        'selection_end': 9803,
        'selection_start': 9803},
                             loc('dataModels/abstractClasses.py'): {'attrib-'\
        'starts': [('Singleton',
                    5),
                   ('Singleton.__new__',
                    9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 479,
        'selection_end': 479,
        'selection_start': 479},
                             loc('dataModels/assetModel.py'): {'attrib-start'\
        's': [('SuperAsset',
               991)],
        'first-line': 995,
        'folded-linenos': [],
        'sel-line': 991,
        'sel-line-start': 32223,
        'selection_end': 32239,
        'selection_start': 32229},
                             loc('dataModels/projectModel.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 228,
        'selection_end': 250,
        'selection_start': 250},
                             loc('environments/houdiniEnv.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 49,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 4,
        'selection_end': 15,
        'selection_start': 4},
                             loc('environments/mayaEnv.py'): {'attrib-starts': [(''\
        'MayaEnvironment',
        15),
        ('MayaEnvironment.appendToRecentFiles',
         291)],
        'first-line': 294,
        'folded-linenos': [],
        'sel-line': 300,
        'sel-line-start': 10079,
        'selection_end': 10092,
        'selection_start': 10092},
                             loc('environments/nukeEnv.py'): {'attrib-starts': [(''\
        'NukeEnvironment',
        15),
        ('NukeEnvironment.open_',
         51)],
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 51,
        'sel-line-start': 1169,
        'selection_end': 1200,
        'selection_start': 1200},
                             loc('todo.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 709,
        'selection_end': 733,
        'selection_start': 733},
                             loc('ui/assetManager.py'): {'attrib-starts': [(''\
        'MainWindow',
        34),
        ('MainWindow.openAsset',
         1271)],
        'first-line': 1277,
        'folded-linenos': [],
        'sel-line': 1301,
        'sel-line-start': 49079,
        'selection_end': 49079,
        'selection_start': 49079},
                             loc('ui/assetUpdater.py'): {'attrib-starts': [(''\
        'UI',
        15)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 438,
        'selection_end': 448,
        'selection_start': 448},
                             loc('ui/uiCompiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 68,
        'selection_end': 96,
        'selection_start': 82},
                             loc('versionHistory.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 273,
        'selection_end': 325,
        'selection_start': 325},
                             loc('../../../qthread_test.py'): {'attrib-start'\
        's': [('TerminalViewer',
               5),
              ('TerminalViewer.Activated',
               12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 550,
        'selection_end': 576,
        'selection_start': 576}},
           'has-focus': False},
          {'bookmarks': ([(loc('ui/uiCompiler.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 2,
                            'sel-line-start': 38,
                            'selection_end': 52,
                            'selection_start': 52},
                           1259619198.423629),
                          (loc('__init__.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1259619200.116194),
                          (loc('environments/mayaEnv.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 7,
                            'sel-line-start': 141,
                            'selection_end': 163,
                            'selection_start': 163},
                           1259619201.266212),
                          (loc('dataModels/assetModel.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 5,
                            'sel-line-start': 54,
                            'selection_end': 76,
                            'selection_start': 76},
                           1259619201.66011),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 8,
                            'sel-line-start': 198,
                            'selection_end': 198,
                            'selection_start': 198},
                           1259619202.0782249),
                          (loc('__init__.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 0,
                            'sel-line-start': 0,
                            'selection_end': 0,
                            'selection_start': 0},
                           1259619427.8613901),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 11,
                            'sel-line-start': 224,
                            'selection_end': 224,
                            'selection_start': 224},
                           1259619545.186698),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.getSettingsFromEnvironment',
         1011)],
                            'first-line': 1007,
                            'folded-linenos': [],
                            'sel-line': 1029,
                            'sel-line-start': 38598,
                            'selection_end': 38632,
                            'selection_start': 38632},
                           1259619548.8743401),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.fillFieldsFromFileInfo',
         230)],
                            'first-line': 257,
                            'folded-linenos': [],
                            'sel-line': 284,
                            'sel-line-start': 12872,
                            'selection_end': 12948,
                            'selection_start': 12948},
                           1259619577.5970509),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.fillFieldsFromFileInfo',
         230)],
                            'first-line': 264,
                            'folded-linenos': [],
                            'sel-line': 284,
                            'sel-line-start': 12872,
                            'selection_end': 12947,
                            'selection_start': 12934},
                           1259619637.4893451),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.fillFieldsFromFileInfo',
         230)],
                            'first-line': 264,
                            'folded-linenos': [],
                            'sel-line': 284,
                            'sel-line-start': 12872,
                            'selection_end': 12947,
                            'selection_start': 12934},
                           1259619638.5987899),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.fillFieldsFromFileInfo',
         230)],
                            'first-line': 264,
                            'folded-linenos': [],
                            'sel-line': 283,
                            'sel-line-start': 12825,
                            'selection_end': 12871,
                            'selection_start': 12871},
                           1259619641.826232),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.fillFieldsFromFileInfo',
         230)],
                            'first-line': 264,
                            'folded-linenos': [],
                            'sel-line': 283,
                            'sel-line-start': 12825,
                            'selection_end': 12871,
                            'selection_start': 12871},
                           1259619642.3126099),
                          (loc('ui/assetManager.py'),
                           {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.fillFieldsFromFileInfo',
         230)],
                            'first-line': 280,
                            'folded-linenos': [],
                            'sel-line': 315,
                            'sel-line-start': 14089,
                            'selection_end': 14142,
                            'selection_start': 14142},
                           1259619643.978287),
                          (loc('dataModels/assetModel.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 5,
                            'sel-line-start': 54,
                            'selection_end': 76,
                            'selection_start': 76},
                           1260479598.854593),
                          (loc('dataModels/assetModel.py'),
                           {'attrib-starts': [('Asset',
        10),
        ('Asset.__init__',
         21)],
                            'first-line': 8,
                            'folded-linenos': [],
                            'sel-line': 23,
                            'sel-line-start': 552,
                            'selection_end': 589,
                            'selection_start': 589},
                           1260479600.641583),
                          (loc('dataModels/assetModel.py'),
                           {'attrib-starts': [('AssetType',
        915),
        ('AssetType.__init__',
         926)],
                            'first-line': 910,
                            'folded-linenos': [],
                            'sel-line': 926,
                            'sel-line-start': 30507,
                            'selection_end': 30511,
                            'selection_start': 30511},
                           1260481309.810178),
                          [loc('environments/mayaEnv.py'),
                           {'attrib-starts': [],
                            'first-line': 0,
                            'folded-linenos': [],
                            'sel-line': 7,
                            'sel-line-start': 141,
                            'selection_end': 163,
                            'selection_start': 163},
                           1260481355.6448519],
                          (loc('dataModels/projectModel.py'),
                           {'attrib-starts': [('Project',
        431),
        ('Project.getDatabase',
         533)],
                            'first-line': 530,
                            'folded-linenos': [],
                            'sel-line': 538,
                            'sel-line-start': 17131,
                            'selection_end': 17135,
                            'selection_start': 17135},
                           1261602912.7135611),
                          [loc('dataModels/projectModel.py'),
                           {'attrib-starts': [('Project',
        431),
        ('Project.getDatabase',
         533)],
                            'first-line': 530,
                            'folded-linenos': [],
                            'sel-line': 538,
                            'sel-line-start': 17131,
                            'selection_end': 17135,
                            'selection_start': 17135},
                           1261688473.361445]],
                         19),
           'current-loc': loc('dataModels/projectModel.py'),
           'editor-states': {loc('../oyAuxiliaryFunctions.py'): {'attrib-sta'\
        'rts': [('createAxialCorrectionGroup',
                 370)],
        'first-line': 367,
        'folded-linenos': [],
        'sel-line': 404,
        'sel-line-start': 9685,
        'selection_end': 9703,
        'selection_start': 9703},
                             loc('dataModels/abstractClasses.py'): {},
                             loc('dataModels/assetModel.py'): {'attrib-start'\
        's': [('AssetType',
               915),
              ('AssetType.__init__',
               926)],
        'first-line': 910,
        'folded-linenos': [],
        'sel-line': 926,
        'sel-line-start': 30507,
        'selection_end': 30511,
        'selection_start': 30511},
                             loc('dataModels/projectModel.py'): {'attrib-sta'\
        'rts': [('Shot',
                 2192),
                ('Shot.__init__',
                 2197)],
        'first-line': 2189,
        'folded-linenos': [],
        'sel-line': 2200,
        'sel-line-start': 75700,
        'selection_end': 75700,
        'selection_start': 75700},
                             loc('environments/houdiniEnv.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                             loc('environments/mayaEnv.py'): {'attrib-starts': [(''\
        'getPathVariables',
        123)],
        'first-line': 130,
        'folded-linenos': [],
        'sel-line': 155,
        'sel-line-start': 4292,
        'selection_end': 4313,
        'selection_start': 4299},
                             loc('environments/nukeEnv.py'): {'attrib-starts': [(''\
        'save',
        12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 296,
        'selection_end': 300,
        'selection_start': 300},
                             loc('todo.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 32,
        'sel-line-start': 1649,
        'selection_end': 1693,
        'selection_start': 1693},
                             loc('ui/assetManager.py'): {'attrib-starts': [(''\
        'MainWindow',
        33),
        ('MainWindow.updateSubNameField',
         467)],
        'first-line': 636,
        'folded-linenos': [],
        'sel-line': 471,
        'sel-line-start': 19369,
        'selection_end': 19377,
        'selection_start': 19377},
                             loc('ui/assetUpdater.py'): {},
                             loc('ui/uiCompiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 68,
        'selection_end': 96,
        'selection_start': 82},
                             loc('versionHistory.txt'): {},
                             loc('../../../qthread_test.py'): {'attrib-start'\
        's': [('TerminalViewer',
               5),
              ('TerminalViewer.Activated',
               12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 547,
        'selection_end': 576,
        'selection_start': 576}},
           'has-focus': False}),
         {'bookmarks': ([(loc('../oyAuxiliaryFunctions.py'),
                          {'attrib-starts': [('fixWindowsPath',
        347)],
                           'first-line': 323,
                           'folded-linenos': [],
                           'sel-line': 347,
                           'sel-line-start': 8160,
                           'selection_end': 8178,
                           'selection_start': 8164},
                          1259100045.2293141),
                         (loc('__init__.py'),
                          {'attrib-starts': [],
                           'first-line': 141,
                           'folded-linenos': [],
                           'sel-line': 158,
                           'sel-line-start': 6941,
                           'selection_end': 7020,
                           'selection_start': 7020},
                          1259100045.8014989),
                         (loc('ui/projectManager.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 10,
                           'sel-line-start': 239,
                           'selection_end': 248,
                           'selection_start': 248},
                          1259100046.539274),
                         (loc('dataModels/projectModel.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 8,
                           'sel-line-start': 172,
                           'selection_end': 194,
                           'selection_start': 194},
                          1259100050.728929),
                         [loc('ui/uiCompiler.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 5,
                           'sel-line-start': 68,
                           'selection_end': 96,
                           'selection_start': 82},
                          1259100053.866751],
                         (loc('dataModels/projectModel.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 8,
                           'sel-line-start': 172,
                           'selection_end': 194,
                           'selection_start': 194},
                          1259100059.216223),
                         [loc('ui/projectManager.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 10,
                           'sel-line-start': 239,
                           'selection_end': 248,
                           'selection_start': 248},
                          1259100065.1646941],
                         (loc('dataModels/projectModel.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 8,
                           'sel-line-start': 172,
                           'selection_end': 194,
                           'selection_start': 194},
                          1259100066.5222721),
                         (loc('__init__.py'),
                          {'attrib-starts': [],
                           'first-line': 141,
                           'folded-linenos': [],
                           'sel-line': 158,
                           'sel-line-start': 6941,
                           'selection_end': 7020,
                           'selection_start': 7020},
                          1259100068.0913279),
                         [loc('../oyAuxiliaryFunctions.py'),
                          {'attrib-starts': [('fixWindowsPath',
        347)],
                           'first-line': 323,
                           'folded-linenos': [],
                           'sel-line': 347,
                           'sel-line-start': 8160,
                           'selection_end': 8178,
                           'selection_start': 8164},
                          1259100071.689378],
                         (loc('__init__.py'),
                          {'attrib-starts': [],
                           'first-line': 141,
                           'folded-linenos': [],
                           'sel-line': 158,
                           'sel-line-start': 6941,
                           'selection_end': 7020,
                           'selection_start': 7020},
                          1259100073.295645),
                         [loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        32),
        ('MainWindow.updateVersionListBuffer',
         510)],
                           'first-line': 520,
                           'folded-linenos': [],
                           'sel-line': 539,
                           'sel-line-start': 21601,
                           'selection_end': 21627,
                           'selection_start': 21627},
                          1259100078.7408431],
                         (loc('__init__.py'),
                          {'attrib-starts': [],
                           'first-line': 141,
                           'folded-linenos': [],
                           'sel-line': 143,
                           'sel-line-start': 6563,
                           'selection_end': 6563,
                           'selection_start': 6563},
                          1259100084.6518941),
                         (loc('environments/houdiniEnv.py'),
                          {'attrib-starts': [('save',
        35)],
                           'first-line': 24,
                           'folded-linenos': [],
                           'sel-line': 39,
                           'sel-line-start': 721,
                           'selection_end': 724,
                           'selection_start': 724},
                          1259192521.9212911),
                         (loc('environments/mayaEnv.py'),
                          {'attrib-starts': [],
                           'first-line': 0,
                           'folded-linenos': [],
                           'sel-line': 7,
                           'sel-line-start': 141,
                           'selection_end': 155,
                           'selection_start': 155},
                          1259593107.8419559),
                         (loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        32),
        ('MainWindow.updateVersionListBuffer',
         555)],
                           'first-line': 566,
                           'folded-linenos': [],
                           'sel-line': 601,
                           'sel-line-start': 24327,
                           'selection_end': 24357,
                           'selection_start': 24342},
                          1259613438.000468),
                         (loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow.__init__',
         40)],
                           'first-line': 37,
                           'folded-linenos': [],
                           'sel-line': 54,
                           'sel-line-start': 1437,
                           'selection_end': 1466,
                           'selection_start': 1450},
                          1259613443.796809),
                         (loc('ui/assetManager.py'),
                          {'attrib-starts': [('MainWindow',
        33),
        ('MainWindow._setupValidators',
         176)],
                           'first-line': 184,
                           'folded-linenos': [],
                           'sel-line': 189,
                           'sel-line-start': 9166,
                           'selection_end': 9185,
                           'selection_start': 9185},
                          1259620006.0597351),
                         [loc('environments/houdiniEnv.py'),
                          {},
                          1260903317.61134],
                         [loc('dataModels/projectModel.py'),
                          {'attrib-starts': [('Project',
        447),
        ('Project.getDatabase',
         549)],
                           'first-line': 546,
                           'folded-linenos': [],
                           'sel-line': 554,
                           'sel-line-start': 17486,
                           'selection_end': 17490,
                           'selection_start': 17490},
                          1261602914.083679]],
                        19),
          'current-loc': loc('dataModels/projectModel.py'),
          'editor-states': {loc('../oyAuxiliaryFunctions.py'): {'attrib-star'\
        'ts': [('createAxialCorrectionGroup',
                370)],
        'first-line': 367,
        'folded-linenos': [],
        'sel-line': 404,
        'sel-line-start': 9685,
        'selection_end': 9703,
        'selection_start': 9703},
                            loc('dataModels/abstractClasses.py'): {},
                            loc('dataModels/assetModel.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                            loc('dataModels/projectModel.py'): {'attrib-star'\
        'ts': [('Project',
                431),
               ('Project.getDatabase',
                533)],
        'first-line': 530,
        'folded-linenos': [],
        'sel-line': 535,
        'sel-line-start': 17117,
        'selection_end': 17119,
        'selection_start': 17119},
                            loc('environments/houdiniEnv.py'): {'attrib-star'\
        'ts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                            loc('environments/mayaEnv.py'): {'attrib-starts': [(''\
        'getPathVariables',
        123)],
        'first-line': 130,
        'folded-linenos': [],
        'sel-line': 155,
        'sel-line-start': 4292,
        'selection_end': 4313,
        'selection_start': 4299},
                            loc('environments/nukeEnv.py'): {'attrib-starts': [(''\
        'save',
        12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 296,
        'selection_end': 300,
        'selection_start': 300},
                            loc('todo.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 32,
        'sel-line-start': 1649,
        'selection_end': 1693,
        'selection_start': 1693},
                            loc('ui/assetManager.py'): {'attrib-starts': [(''\
        'MainWindow',
        33),
        ('MainWindow.updateSubNameField',
         467)],
        'first-line': 636,
        'folded-linenos': [],
        'sel-line': 471,
        'sel-line-start': 19369,
        'selection_end': 19377,
        'selection_start': 19377},
                            loc('ui/assetUpdater.py'): {},
                            loc('ui/uiCompiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 68,
        'selection_end': 96,
        'selection_start': 82},
                            loc('versionHistory.txt'): {},
                            loc('../../../qthread_test.py'): {'attrib-starts': [(''\
        'TerminalViewer',
        5),
        ('TerminalViewer.Activated',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 547,
        'selection_end': 576,
        'selection_start': 576}},
          'has-focus': False})),
                               'open_files': [u'versionHistory.txt',
        u'ui/uiCompiler.py',
        u'todo.txt',
        u'../../../qthread_test.py',
        u'dataModels/projectModel.py',
        u'../oyAuxiliaryFunctions.py',
        u'environments/nukeEnv.py',
        u'dataModels/assetModel.py',
        u'environments/houdiniEnv.py',
        u'environments/mayaEnv.py',
        u'dataModels/abstractClasses.py',
        u'ui/assetUpdater.py',
        u'ui/assetManager.py']},
        'split_percents': {0: 0.4848993288590604},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'split_percents': {0: 0.64632768361581916},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (-4,
                         34,
                         1912,
                         983)}]}
guimgr.recent-documents = [loc('ui/assetManager.py'),
                           loc('dataModels/abstractClasses.py'),
                           loc('environments/mayaEnv.py'),
                           loc('environments/houdiniEnv.py'),
                           loc('ui/assetUpdater.py'),
                           loc('dataModels/assetModel.py'),
                           loc('environments/nukeEnv.py'),
                           loc('../oyAuxiliaryFunctions.py'),
                           loc('dataModels/projectModel.py'),
                           loc('../../../qthread_test.py'),
                           loc('todo.txt'),
                           loc('ui/uiCompiler.py')]
guimgr.visual-state = {loc('../../../../../.wingide3/pi-cache/2.5/usr/autodesk/maya/lib/python2.5/site-packages/PyQt4/QtGui.pi'): {''\
        'attrib-starts': [],
        'first-line': 13702,
        'folded-linenos': [],
        'sel-line': 13725,
        'sel-line-start': 143979,
        'selection_end': 143987,
        'selection_start': 143979},
                       loc('../../../../../Documents/cherry/cherry_helloWorld.py'): {''\
        'attrib-starts': [('HelloWorld',
                           2),
                          ('HelloWorld.index',
                           3)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 154,
        'selection_end': 154,
        'selection_start': 154},
                       loc('../../../../../Documents/development/PyQt4_Tests/boxLayout.py'): {''\
        'attrib-starts': [('BoxLayout',
                           11),
                          ('BoxLayout.__init__',
                           15)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 42,
        'sel-line-start': 937,
        'selection_end': 958,
        'selection_start': 958},
                       loc('../../../../../Documents/development/PyQt4_Tests/gridLayout.py'): {''\
        'attrib-starts': [('GridLayout',
                           12),
                          ('GridLayout.__init__',
                           16)],
        'first-line': 2,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 367,
        'selection_end': 392,
        'selection_start': 392},
                       loc('../../../../../Documents/development/PyQt4_Tests/mainWindow.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 65,
        'selection_end': 86,
        'selection_start': 86},
                       loc('../../../../../Documents/development/cacheTest_v001.py'): {''\
        'attrib-starts': [('testClass',
                           3),
                          ('testClass.test2',
                           12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 377,
        'selection_end': 410,
        'selection_start': 410},
                       loc('../../../../../Documents/development/python_decorators_v002.py'): {''\
        'attrib-starts': [('entryExit',
                           0),
                          ('entryExit.__init__',
                           2)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 57,
        'selection_end': 75,
        'selection_start': 75},
                       loc('../../../../../Documents/development/python_decorators_v003.py'): {''\
        'attrib-starts': [('func1',
                           9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 9,
        'sel-line-start': 149,
        'selection_end': 161,
        'selection_start': 161},
                       loc('../../../../../Documents/development/test_v001.py'): {''\
        'attrib-starts': [('select_sublist',
                           0)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 6,
        'sel-line-start': 217,
        'selection_end': 217,
        'selection_start': 217},
                       loc('../../../../../Documents/maya_development/furMapCreator/furMapCreator/furMapCreator.h'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 350,
        'selection_end': 378,
        'selection_start': 378},
                       loc('../../../../../Documents/maya_development/furMapCreator/furMapCreator/furMapCreatorCmd.cpp'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 624,
        'selection_end': 624,
        'selection_start': 624},
                       loc('../../../../../Documents/structure_addFolder.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 17,
        'sel-line-start': 405,
        'selection_end': 472,
        'selection_start': 472},
                       loc('../../../../../geany_cflags_generator.py'): {'at'\
        'trib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 48,
        'selection_end': 78,
        'selection_start': 78},
                       loc('../../mayaHacks/userSetup.mel'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../mayaHacks/userSetup.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../AssetType.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../Cache.py'): {'attrib-starts': [('CachedMethod',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 100,
        'selection_end': 130,
        'selection_start': 130},
                       loc('../MainWindow.py'): {'attrib-starts': [('MainWin'\
        'dow',
        1),
        ('MainWindow._updateSequenceObject',
         891)],
        'first-line': 857,
        'folded-linenos': [],
        'sel-line': 903,
        'sel-line-start': 32180,
        'selection_end': 32219,
        'selection_start': 32219},
                       loc('../User.py'): {'attrib-starts': [('User',
        1),
        ('User.setInitials',
         41)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 44,
        'sel-line-start': 1114,
        'selection_end': 1147,
        'selection_start': 1147},
                       loc('../oyAddDAGMenuCommands.mel'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../oyAssetManager.py'): {'attrib-starts': [('Ass'\
        'et',
        783),
        ('Asset.set_info_variables',
         831)],
        'first-line': 926,
        'folded-linenos': [],
        'sel-line': 835,
        'sel-line-start': 25880,
        'selection_end': 25900,
        'selection_start': 25900},
                       loc('../oyAutoRig.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../oyAuxiliaryFunctions.mel'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 26,
        'sel-line-start': 624,
        'selection_end': 671,
        'selection_start': 671},
                       loc('../oyAuxiliaryFunctions.py'): {'attrib-starts': [(''\
        'createAxialCorrectionGroup',
        370)],
        'first-line': 367,
        'folded-linenos': [],
        'sel-line': 404,
        'sel-line-start': 9685,
        'selection_end': 9703,
        'selection_start': 9703},
                       loc('../oyAxialCorrectionGroup.py'): {'attrib-starts': [(''\
        'createAxialCorrectionGroup',
        32)],
        'first-line': 14,
        'folded-linenos': [],
        'sel-line': 53,
        'sel-line-start': 1471,
        'selection_end': 1517,
        'selection_start': 1517},
                       loc('../oyBallisticRuler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 16,
        'sel-line-start': 502,
        'selection_end': 504,
        'selection_start': 504},
                       loc('../oyObjectPicker.py'): {'attrib-starts': [('Pic'\
        'kedObject',
        88),
        ('PickedObject.getWeightAlias',
         403)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 425,
        'sel-line-start': 14700,
        'selection_end': 14704,
        'selection_start': 14704},
                       loc('../oyPivotSwitcher.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 2,
        'selection_start': 2},
                       loc('../oyProjectManager.py'): {'attrib-starts': [('C'\
        'achedMethod',
        305),
        ('CachedMethod.__repr__',
         361)],
        'first-line': 368,
        'folded-linenos': [],
        'sel-line': 369,
        'sel-line-start': 15452,
        'selection_end': 15452,
        'selection_start': 15452},
                       loc('Asset.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 1,
        'selection_end': 1,
        'selection_start': 1},
                       loc('AssetType.py'): {'attrib-starts': [('AssetType',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 240,
        'selection_end': 244,
        'selection_start': 244},
                       loc('Cache.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('Database.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 63,
        'selection_end': 63,
        'selection_start': 63},
                       loc('MainWindow.py'): {'attrib-starts': [('UI',
        1)],
        'first-line': 874,
        'folded-linenos': [],
        'sel-line': 10,
        'sel-line-start': 318,
        'selection_end': 403,
        'selection_start': 403},
                       loc('Project.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 189,
        'selection_end': 189,
        'selection_start': 189},
                       loc('Range.py'): {'attrib-starts': [('RangeConverter',
        1),
        ('RangeConverter.convertRangeToList',
         9)],
        'first-line': 1,
        'folded-linenos': [],
        'sel-line': 47,
        'sel-line-start': 1536,
        'selection_end': 1559,
        'selection_start': 1559},
                       loc('Sequence.py'): {'attrib-starts': [('Sequence',
        10),
        ('Sequence.__init__',
         19)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 27,
        'sel-line-start': 836,
        'selection_end': 844,
        'selection_start': 844},
                       loc('Structure.py'): {'attrib-starts': [('Structure',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 98,
        'selection_end': 132,
        'selection_start': 132},
                       loc('UI.py'): {'attrib-starts': [('Ui_MainWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
                                      'first-line': 313,
                                      'folded-linenos': [],
                                      'sel-line': 13,
                                      'sel-line-start': 383,
                                      'selection_end': 406,
                                      'selection_start': 406},
                       loc('UI_compiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('User.py'): {'attrib-starts': [('User',
        1),
        ('User.getName',
         17)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 484,
        'selection_end': 516,
        'selection_start': 516},
                       loc('__init__.py'): {'attrib-starts': [],
        'first-line': 97,
        'folded-linenos': [],
        'sel-line': 154,
        'sel-line-start': 6871,
        'selection_end': 6894,
        'selection_start': 6894},
                       loc('__main__.py'): {'attrib-starts': [('main',
        5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 546,
        'selection_end': 568,
        'selection_start': 568},
                       loc('dataModels/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 2,
        'selection_end': 2,
        'selection_start': 2},
                       loc('dataModels/assetModel.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('dataModels/projectModel.py'): {'attrib-starts': [(''\
        'Project',
        447),
        ('Project.getDatabase',
         549)],
        'first-line': 546,
        'folded-linenos': [],
        'sel-line': 554,
        'sel-line-start': 17486,
        'selection_end': 17490,
        'selection_start': 17490},
                       loc('dataModels/serverModel.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('dataModels/userModel.py'): {'attrib-starts': [(''\
        'User',
        5)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 153,
        'selection_end': 160,
        'selection_start': 160},
                       loc('environments/houdiniEnv.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('environments/maya.py'): {'attrib-starts': [('get'\
        'PathVariables',
        84)],
        'first-line': 79,
        'folded-linenos': [],
        'sel-line': 85,
        'sel-line-start': 2217,
        'selection_end': 2264,
        'selection_start': 2264},
                       loc('environments/mayaEnv.py'): {'attrib-starts': [(''\
        'getPathVariables',
        123)],
        'first-line': 130,
        'folded-linenos': [],
        'sel-line': 155,
        'sel-line-start': 4292,
        'selection_end': 4313,
        'selection_start': 4299},
                       loc('environments/nukeEnv.py'): {'attrib-starts': [(''\
        'save',
        12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 296,
        'selection_end': 300,
        'selection_start': 300},
                       loc('environments/photoshopEnv.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/asset.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 15,
        'selection_end': 15,
        'selection_start': 15},
                       loc('models/assetType.py'): {'attrib-starts': [('Asse'\
        'tType',
        1),
        ('AssetType.getPlayblastFolder',
         44)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 51,
        'sel-line-start': 1408,
        'selection_end': 1461,
        'selection_start': 1461},
                       loc('models/database.py'): {'attrib-starts': [('Datab'\
        'ase',
        8),
        ('Database.getHomePath',
         186)],
        'first-line': 184,
        'folded-linenos': [],
        'sel-line': 204,
        'sel-line-start': 6347,
        'selection_end': 6387,
        'selection_start': 6387},
                       loc('models/project.py'): {'attrib-starts': [('Projec'\
        't',
        7),
        ('Project.create',
         41)],
        'first-line': 42,
        'folded-linenos': [],
        'sel-line': 49,
        'sel-line-start': 1333,
        'selection_end': 1337,
        'selection_start': 1337},
                       loc('models/sequence.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 102,
        'selection_end': 102,
        'selection_start': 102},
                       loc('models/structure.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('models/user.py'): {'attrib-starts': [('User',
        1)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 135,
        'selection_end': 139,
        'selection_start': 139},
                       loc('oyProjectManager.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('settings.xml'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('todo.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 32,
        'sel-line-start': 1649,
        'selection_end': 1693,
        'selection_start': 1693},
                       loc('tools/abstractClasses.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('tools/cache.py'): {'attrib-starts': [('CachedMet'\
        'hod',
        9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 218,
        'selection_end': 222,
        'selection_start': 222},
                       loc('tools/cacheTest.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 4,
        'sel-line-start': 196,
        'selection_end': 241,
        'selection_start': 241},
                       loc('tools/rangeTools.py'): {'attrib-starts': [('Rang'\
        'eConverter',
        9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 239,
        'selection_end': 243,
        'selection_start': 243},
                       loc('ui/__init__.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/assetIO_mainWindow.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 9,
        'selection_start': 8},
                       loc('ui/assetIO_mainWindowUI.py'): {'attrib-starts': [(''\
        'Ui_MainWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
        'first-line': 39,
        'folded-linenos': [],
        'sel-line': 41,
        'sel-line-start': 2196,
        'selection_end': 2202,
        'selection_start': 2202},
                       loc('ui/assetManager.py'): {'attrib-starts': [('MainW'\
        'indow',
        33),
        ('MainWindow.updateSubNameField',
         467)],
        'first-line': 636,
        'folded-linenos': [],
        'sel-line': 471,
        'sel-line-start': 19369,
        'selection_end': 19377,
        'selection_start': 19377},
                       loc('ui/assetManager.ui'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/assetManager_UI.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/assetManager_mainWindow.py'): {'attrib-starts': [(''\
        'UI',
        11)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 389,
        'selection_end': 410,
        'selection_start': 410},
                       loc('ui/assetUpdater_UI.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('ui/mainWindow.py'): {'attrib-starts': [('MainWin'\
        'dow',
        28),
        ('MainWindow.fillFieldsFromFileInfo',
         145)],
        'first-line': 177,
        'folded-linenos': [],
        'sel-line': 202,
        'sel-line-start': 8615,
        'selection_end': 8623,
        'selection_start': 8623},
                       loc('ui/mainWindowUI.py'): {'attrib-starts': [('Ui_Ma'\
        'inWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 24,
        'sel-line-start': 1010,
        'selection_end': 1099,
        'selection_start': 1099},
                       loc('ui/projectManagement_mainWindow.py'): {'attrib-s'\
        'tarts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 8,
        'sel-line-start': 292,
        'selection_end': 292,
        'selection_start': 292},
                       loc('ui/projectManagement_mainWindowUI.py'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 25,
        'selection_end': 45,
        'selection_start': 45},
                       loc('ui/projectManager.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 3,
        'sel-line-start': 88,
        'selection_end': 112,
        'selection_start': 112},
                       loc('ui/projectManager_UI.py'): {'attrib-starts': [(''\
        'Ui_MainWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 22,
        'sel-line-start': 912,
        'selection_end': 993,
        'selection_start': 993},
                       loc('ui/projectManager_mainWindow.py'): {'attrib-star'\
        'ts': [('MainWindow',
                29)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 29,
        'sel-line-start': 723,
        'selection_end': 786,
        'selection_start': 786},
                       loc('ui/uiCompiler.py'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 68,
        'selection_end': 96,
        'selection_start': 82},
                       loc('versionHistory.txt'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 11,
        'sel-line-start': 470,
        'selection_end': 495,
        'selection_start': 495},
                       loc('../oyProjectManagerUI.py'): {'attrib-starts': [(''\
        'Ui_MainWindow',
        11),
        ('Ui_MainWindow.setupUi',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 348,
        'selection_end': 380,
        'selection_start': 370},
                       loc('../oyProjectManagerUI_compiler.py'): {'attrib-st'\
        'arts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 344,
        'selection_end': 344,
        'selection_start': 344},
                       loc('../oyReferenceTools.py'): {'attrib-starts': [('R'\
        'eference',
        2),
        ('Reference.getReferenceNodes',
         13)],
        'first-line': 185,
        'folded-linenos': [],
        'sel-line': 18,
        'sel-line-start': 486,
        'selection_end': 511,
        'selection_start': 511},
                       loc('../oyRigTools.py'): {'attrib-starts': [('oyRigJo'\
        'int',
        589),
        ('oyRigJoint._createAttributes',
         639)],
        'first-line': 602,
        'folded-linenos': [],
        'sel-line': 659,
        'sel-line-start': 22228,
        'selection_end': 22232,
        'selection_start': 22232},
                       loc('../oyShaderAssigner.py'): {'attrib-starts': [('S'\
        'haderAssigner',
        28),
        ('ShaderAssigner.assignObjects',
         40)],
        'first-line': 22,
        'folded-linenos': [],
        'sel-line': 41,
        'sel-line-start': 864,
        'selection_end': 894,
        'selection_start': 894},
                       loc('../../plugins/closestPointOnCurve.py'): {'attrib'\
        '-starts': [('closestPointOnCurve',
                     11)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 15,
        'sel-line-start': 312,
        'selection_end': 313,
        'selection_start': 313},
                       loc('../../plugins/oyTrajectoryDrawer.py'): {'attrib-'\
        'starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 7,
        'sel-line-start': 129,
        'selection_end': 131,
        'selection_start': 131},
                       loc('../../../pumpThread.py'): {'attrib-starts': [('p'\
        'umpQt',
        14),
        ('pumpQt.processor',
         17)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 21,
        'sel-line-start': 295,
        'selection_end': 307,
        'selection_start': 307},
                       loc('../../../pymel/core/animation.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../pymel/core/factories.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../pymel/core/general.py'): {'attrib-start'\
        's': [('listRelatives',
               584)],
        'first-line': 569,
        'folded-linenos': [],
        'sel-line': 584,
        'sel-line-start': 22075,
        'selection_end': 22092,
        'selection_start': 22079},
                       loc('../../../pymel/core/system.py'): {'attrib-starts': [(''\
        'loadReference',
        1271)],
        'first-line': 1248,
        'folded-linenos': [],
        'sel-line': 1272,
        'sel-line-start': 48564,
        'selection_end': 48598,
        'selection_start': 48598},
                       loc('../../../pymel/mayahook/mayautils.py'): {'attrib'\
        '-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../pythonArgsTest.py'): {'attrib-starts': [(''\
        'test',
        3)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 5,
        'sel-line-start': 37,
        'selection_end': 51,
        'selection_start': 51},
                       loc('../../../qthread_test.py'): {'attrib-starts': [(''\
        'TerminalViewer',
        5),
        ('TerminalViewer.Activated',
         12)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 13,
        'sel-line-start': 547,
        'selection_end': 576,
        'selection_start': 576},
                       loc('../../../../../test.cpp'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../media/PERSONAL/ozgur/My Documents/maya/scripts/oy-maya-scripts/mayaHacks/userSetup.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../media/PERSONAL/ozgur/My Documents/maya/scripts/oy-maya-scripts/oyTools/oyAssetManager.py'): {''\
        'attrib-starts': [('AssetBase',
                           4),
                          ('AssetBase.__init__',
                           9)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 14,
        'sel-line-start': 378,
        'selection_end': 384,
        'selection_start': 384},
                       loc('../../../../../../../usr/autodesk/maya/devkit/plug-ins/scripted/circleNode.py'): {''\
        'attrib-starts': [('initializePlugin',
                           173)],
        'first-line': 80,
        'folded-linenos': [],
        'sel-line': 175,
        'sel-line-start': 6389,
        'selection_end': 6394,
        'selection_start': 6394},
                       loc('../../../../../../../usr/autodesk/maya/devkit/plug-ins/scripted/footPrintNode.py'): {''\
        'attrib-starts': [],
        'first-line': 136,
        'folded-linenos': [],
        'sel-line': 12,
        'sel-line-start': 563,
        'selection_end': 630,
        'selection_start': 630},
                       loc('../../../../../../../usr/autodesk/maya/devkit/plug-ins/scripted/torusField.py'): {''\
        'attrib-starts': [],
        'first-line': 94,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../usr/lib/python2.6/xml/dom/__init__.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('../../../../../../../usr/lib/python2.6/xml/dom/minidom.py'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 1,
        'sel-line-start': 5,
        'selection_end': 12,
        'selection_start': 5},
                       loc('../../../../../../../usr/local/lib/wingide3.1/resources/builtin-pi-files/2.5/__builtin__.pi'): {''\
        'attrib-starts': [],
        'first-line': 621,
        'folded-linenos': [],
        'sel-line': 645,
        'sel-line-start': 19284,
        'selection_end': 19294,
        'selection_start': 19290},
                       loc('../../../../../../../usr/share/applications/geany.desktop'): {''\
        'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #7'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #8'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ["''.split('.')\n",
                           "''.split('.')[-1]\n",
                           "'.ma'.split('.')[-1]\n",
                           "'ma'.split('.')[-1]\n",
                           'os.path.extsep\n',
                           "project = oyPM.Project('TEST_2')\n",
                           "project.setProject('TEST_2')\n",
                           "project.setProject('TEST')\n",
                           'project.getSequenceNames()\n',
                           "extensionsToIgnore = ['smr','txt','swatch']\n",
                           "','.join(extensionsToIgnore)\n",
                           'bool(str(True))\n',
                           'bool(str(False))\n',
                           'bool(eval(False))\n',
                           'bool(eval(str(False)))\n',
                           'str(False)\n',
                           'str(True)\n',
                           'bool(eval(str(0)))\n',
                           'bool(eval(str(1)))\n',
                           "myAsset = Asset( 'TEST_2', 'DENEME_SEQ_NOSUBD' )"\
                           "\n",
                           'myAssetInfo = dict()\n',
                           "myAssetInfo['baseName'] = 'SH001'\n",
                           "myAssetInfo['subName'] = None\n",
                           "myAssetInfo['typeName'] = 'ANIMATION'\n",
                           "myAssetInfo['rev'] = 0\n",
                           "myAssetInfo['ver'] = 1\n",
                           "myAssetInfo['userInitials'] = 'ts'\n",
                           "myAssetInfo['notes'] = ''\n",
                           'myAsset.getAllVersions()\n',
                           'for asset in myAsset.getAllVersions():\n',
                           "os.path.splitext('deneme.ma')\n",
                           "os.path.splitext('deneme')\n",
                           'myAsset.getLatestRevision()\n',
                           'myAsset.getLatestRevision()[1]\n',
                           "myAsset = oyPM.Asset( 'TEST_2', 'DENEME_SEQ_NOSU"\
                           "BD' )\n",
                           'myAsset.setInfoVariables( **myAssetInfo )\n',
                           'myAsset.getLatestVersion()[1]\n',
                           'myAsset.isValidAsset()\n',
                           'myAssetInfo2 = dict()\n',
                           "myAssetInfo2['baseName'] = 'SH001'\n",
                           "myAssetInfo2['typeName'] = 'ANIMATION'\n",
                           "myAssetInfo2['rev'] = 0\n",
                           "myAssetInfo2['ver'] = 1\n",
                           "myAssetInfo2['userInitials'] = 'oy'\n",
                           'myAsset2.setInfoVariables( myAssetInfo2)\n',
                           ' print key, myAssetInfo2[key]\n',
                           'for key in myAssetInfo2.keys:\n',
                           'for key in myAssetInfo2.keys():\n',
                           '\tprint key, myAssetInfo2[key]\n',
                           'myAsset2._hasBaseInfo\n',
                           'myAsset2._hasFullInfo\n',
                           "os.path.join('adfa',None)\n",
                           'myAsset2._parentSequence._noSubNameField\n',
                           'myAsset2.getFileName()\n',
                           'print myAsset2.getFileName()\n',
                           'myAsset2.isValidAsset()\n',
                           'myAsset2._extension\n',
                           "myAsset2 = oyPM.Asset( 'TEST_2', 'DENEME_SEQ_NOS"\
                           "UBD' )\n",
                           'myAsset2.setInfoVariables( **myAssetInfo2)\n',
                           'myAsset2.getAllVersions()\n',
                           'for asset in myAsset2.getAllVersions():\n',
                           '\tasset.getFileName()\n',
                           'myAsset2.getLatestRevision()\n',
                           'myAsset2.getLatestVersion()\n',
                           "myNewAsset = oyPM.Asset('TEST_2','DENEME_SEQ_NOS"\
                           "UBD')\n",
                           'myInfoVars = dict()\n',
                           "myInfoVars['baseName'] = 'SH001'\n",
                           "myInfoVars['subName'] = ''\n",
                           "myInfoVars['typeName'] = 'ANIMATION'\n",
                           "myInfoVars['rev'] = 1\n",
                           "myInfoVars['rev'] = 0\n",
                           "myInfoVars['ver'] = 1\n",
                           "myInfoVars['userInitials'] = 'oy'\n",
                           "myInfoVars['notes'] = ''\n",
                           'myNewAsset.setInfoVariables( **myInfoVars)\n',
                           'myNewAsset.getLatestRevision()\n',
                           'myNewAsset._baseExists\n',
                           'myNewAsset.getAllVersions()\n',
                           'aSeq1 = oyPM.Sequence()\n',
                           'aSeq1.getAllAssets()\n',
                           "aSeq1 = oyPM.Sequence('TEST','SEQ1')\n",
                           "aSeq1 = oyPM.Sequence('TEST_2','DENEME_SEQ')\n",
                           'for asset in aSeq1.getAllAssets():\n',
                           '\tprint asset.getFileName()\n',
                           'reload(oyPM)\n',
                           'oyPM.UI()\n',
                           'import oyProjectManager as oyPM\n',
                           'oyPM.__file__\n',
                           'oyPM.__name__\n',
                           'oyPM.__version__\n',
                           'oyPM.__builtins__\n',
                           'oyPM.__doc__\n',
                           'import os\n',
                           "os.path.exists('test.xml')\n",
                           "os.path.exists('./test.xml')\n",
                           "open('./test.xml',mode='w')\n",
                           "newFile = open('./test.xml',mode='w')\n",
                           "newFile.writelines('test\\ntest')\n",
                           'newFile.close()\n',
                           "os.path.exists('oyProjectManager_settings.xml')\n"]},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #9'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #10'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': -1,
        'sel-line-start': -1,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #11'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #12'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n',
                           'import hou\n',
                           'import oyProjectManager,\n',
                           'import oyProjectManager\n',
                           'import oyProjectManager as oyPM\n',
                           'oyPM.UI()\n']},
        'sel-line': 5,
        'sel-line-start': 223,
        'selection_end': 227,
        'selection_start': 227},
                       loc('unknown:<untitled> #13'): {'attrib-starts': [('o'\
        'zgur',
        2)],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 2,
        'sel-line-start': 2,
        'selection_end': 14,
        'selection_start': 14},
                       loc('unknown:<untitled> #14'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #15'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #16'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ["myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n',
                           'import oyProjectManager.models.asset as asset\n',
                           "myNew = asset.Asset('TEST_2','DENEME_SEQ')\n",
                           'sys.modules(\n',
                           ')\n',
                           'for moduleName in sys.modules.keys:\n',
                           '\tprint moduleName, sys.modules[moduleName]\n',
                           "if not 'oyProjectManager.models.project' in sys."\
                           "modules:\n",
                           '\tprint "not in module list"\n',
                           "if 'oyProjectManager.models.asset' in sys.module"\
                           "s:\n",
                           '\tprint "it is in modules"\n',
                           'import sys\n',
                           'sys.modules\n',
                           'for moduleName in sys.modules.keys():\n',
                           '\tprint moduleName\n',
                           "'oyProjectManager.models.asset' in sys.modules\n",
                           "'oyProjectManager.models.sequence' in sys.module"\
                           "s\n",
                           "'oyProjectManager.models.user' in sys.modules\n",
                           'from oyProjectManager.models import database\n',
                           'myDB = database.Database()\n',
                           'myDB.getProjects()\n',
                           'myDB.getUserInitials\n',
                           'myDB.getUserInitials()\n',
                           'myDB.getUserNames()\n',
                           'myDB.getUsers()\n',
                           'from oyProjectManager.models import asset\n',
                           'from oyProjectManager.models import project, seq'\
                           'uence\n',
                           'newProj.getSequenceNames()\n',
                           'from oyProjectManager.models import project, seq'\
                           'uence, asset\n',
                           "newProj = project.Project('TEST_2')\n",
                           'newSeq = newProj.getSequences()[0]\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #17'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #18'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ["myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'import maya.cmds as mc\n',
                           'mc.NoneType\n',
                           'from oyProjectManager import Asset\n',
                           'from oyProjectManager.Asset import Asset\n',
                           'pm.workspace.getName()\n',
                           'pm.workspace.name()\n',
                           'pm.workspace.name\n',
                           'reload(oySetProject)\n',
                           'import oySetProject\n',
                           'oySetProject.UI()\n',
                           'import oySmedge\n',
                           'oySmedge.__doct__\n',
                           'oySmedge.__doc__\n',
                           'oySmedge.__doc__.splitlines\n',
                           'oySmedge.__doc__.splitlines()\n',
                           'print oySmedge.__doc__.splitlines()\n',
                           'for lines in oySmedge.__doc__.splitlines()\n',
                           'for lines in oySmedge.__doc__.splitlines():\n',
                           '\tprint lines\n',
                           'sign(-1)\n',
                           'import math\n',
                           'pm.sign\n',
                           'myList = list()\n',
                           'myList[1] = 1\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0)})\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0)])\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0),(2,0,0),(3'\
                           ',0,0)])\n',
                           'myCurve.firstParent2()\n',
                           'print myCurve.firstParent2()\n',
                           'print myCurve\n',
                           'print myCurve.getShape()\n',
                           'newTransform = pm.Transform()\n',
                           'pm.makeIdentity(t=1,r=1,s=1)\n',
                           'pm.loft\n',
                           'offCur1 = pm.nodetypes.OffsetCurve()\n',
                           'offCur1 = pm.nodetypes.OffsetCurve( pm.curve(p=['\
                           '(0,0,0),(1,1,1),(2,2,2),(3,3,3)])\n',
                           ')\n',
                           'curve1 = pm.curve(p=[(0,0,0),(1,1,1),(2,2,2),(3,'\
                           '3,3)])\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve( curve1 )\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve( curve1.get'\
                           'Shape() )\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve()\n',
                           "offCurve1.listConnections('outputCurve')\n",
                           "offCurve1.listConnections('outputCurve[0]')\n",
                           'offCurve1.listConnections()\n',
                           'import maya.cmds as cmds\n',
                           'import numpy\n',
                           '[0,0,0] - [1,2,3]\n',
                           'import pymel as pm\n',
                           'a = pm.surface()\n',
                           "follicle = pm.createNode('follicle')\n",
                           'follicle.getTransform()\n',
                           'print follicle.getTransform()\n',
                           'pm.ls()\n',
                           "pm.ls(type='transform')\n",
                           'print follicle.getParent()\n',
                           'range(0)\n',
                           'range(1)\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #19'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #20'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'help\n',
                           'help()\n',
                           'modules\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #21'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #22'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'import maya.cmds as mc\n',
                           'mc.NoneType\n',
                           'from oyProjectManager import Asset\n',
                           'from oyProjectManager.Asset import Asset\n',
                           'pm.workspace.getName()\n',
                           'pm.workspace.name()\n',
                           'pm.workspace.name\n',
                           'reload(oySetProject)\n',
                           'import oySetProject\n',
                           'oySetProject.UI()\n',
                           'import oySmedge\n',
                           'oySmedge.__doct__\n',
                           'oySmedge.__doc__\n',
                           'oySmedge.__doc__.splitlines\n',
                           'oySmedge.__doc__.splitlines()\n',
                           'print oySmedge.__doc__.splitlines()\n',
                           'for lines in oySmedge.__doc__.splitlines()\n',
                           'for lines in oySmedge.__doc__.splitlines():\n',
                           '\tprint lines\n',
                           'sign(-1)\n',
                           'import math\n',
                           'pm.sign\n',
                           'myList = list()\n',
                           'myList[1] = 1\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0)})\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0)])\n',
                           'myCurve = pm.curve(p=[(0,0,0),(1,0,0),(2,0,0),(3'\
                           ',0,0)])\n',
                           'myCurve.firstParent2()\n',
                           'print myCurve.firstParent2()\n',
                           'print myCurve\n',
                           'print myCurve.getShape()\n',
                           'newTransform = pm.Transform()\n',
                           'pm.makeIdentity(t=1,r=1,s=1)\n',
                           'pm.loft\n',
                           'offCur1 = pm.nodetypes.OffsetCurve()\n',
                           'offCur1 = pm.nodetypes.OffsetCurve( pm.curve(p=['\
                           '(0,0,0),(1,1,1),(2,2,2),(3,3,3)])\n',
                           ')\n',
                           'curve1 = pm.curve(p=[(0,0,0),(1,1,1),(2,2,2),(3,'\
                           '3,3)])\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve( curve1 )\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve( curve1.get'\
                           'Shape() )\n',
                           'offCurve1 = pm.nodetypes.OffsetCurve()\n',
                           "offCurve1.listConnections('outputCurve')\n",
                           "offCurve1.listConnections('outputCurve[0]')\n",
                           'offCurve1.listConnections()\n',
                           'import maya.cmds as cmds\n',
                           'import numpy\n',
                           '[0,0,0] - [1,2,3]\n',
                           'a = pm.surface()\n',
                           "follicle = pm.createNode('follicle')\n",
                           'follicle.getTransform()\n',
                           'print follicle.getTransform()\n',
                           'pm.ls()\n',
                           "pm.ls(type='transform')\n",
                           'print follicle.getParent()\n',
                           'range(0)\n',
                           'range(1)\n',
                           'import pymel as pm\n',
                           'a = 1\n',
                           'a = 2\n',
                           '\tdef init(self, val):\n',
                           'b = testObject(1)\n',
                           'class testObject(object):\n',
                           '\tdef __init__(self, val):\n',
                           '\t\tself._val = val\n',
                           'a = testObject(1)\n',
                           'myList = []\n',
                           'myList.append(a)\n',
                           'a._val=2\n',
                           'print a._val\n',
                           'myList[0]._val\n',
                           'myList[0]._val = 1\n',
                           'a._val\n',
                           'range(0,1)\n',
                           'range(0,0)\n',
                           'len(myList)\n',
                           'myList[0]\n',
                           'myList[0] == myList[-1]\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #23'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'import maya.cmds as mc\n',
                           'mc.NoneType\n',
                           'from oyProjectManager import Asset\n',
                           'from oyProjectManager.Asset import Asset\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #24'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #25'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #26'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'import os\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n']},
        'sel-line': 1,
        'sel-line-start': 48,
        'selection_end': 48,
        'selection_start': 48},
                       loc('unknown:<untitled> #27'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #28'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #29'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #30'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['all(myRigger)\n',
                           'classmethod(myRigger)\n',
                           'locals\n',
                           'locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #31'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #32'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': 0,
        'sel-line-start': 0,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #33'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['a = "adene"\n',
                           'exit()\n',
                           'for keys os.environ.keys\n',
                           'prnit keys\n',
                           'prnit key\n',
                           'for keys os.environ.keys:\n',
                           'print keys\n',
                           'for keys in os.environ.keys:\n',
                           'for keys in os.environ.keys():\n',
                           '\tprint keys\n',
                           "print os.environ.key['PLATFORM']\n",
                           "print os.environ.keys['PLATFORM']\n",
                           "print os.environ.get('PLATFORM')\n",
                           "print os.environ.get('PROCESSOR_ARCHITECTURE')\n",
                           'import os\n',
                           'os.name\n',
                           'import sys\n',
                           "sys.path.append('E:\\ozgur\\My Documents\\maya\\"\
                           "scripts\\pymel')\n",
                           '__init__\n',
                           'exit\n',
                           'import pymel as pm\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #34'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['all(myRigger)\n',
                           'classmethod(myRigger)\n',
                           'locals\n',
                           'locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #35'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #36'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['a = "adene"\n',
                           'exit()\n',
                           'for keys os.environ.keys\n',
                           'prnit keys\n',
                           'prnit key\n',
                           'for keys os.environ.keys:\n',
                           'print keys\n',
                           'for keys in os.environ.keys:\n',
                           'for keys in os.environ.keys():\n',
                           '\tprint keys\n',
                           "print os.environ.key['PLATFORM']\n",
                           "print os.environ.keys['PLATFORM']\n",
                           "print os.environ.get('PLATFORM')\n",
                           "print os.environ.get('PROCESSOR_ARCHITECTURE')\n",
                           'import os\n',
                           'os.name\n',
                           'import sys\n',
                           "sys.path.append('E:\\ozgur\\My Documents\\maya\\"\
                           "scripts\\pymel')\n",
                           '__init__\n',
                           'exit\n',
                           'import pymel as pm\n']},
        'sel-line': 2,
        'sel-line-start': 148,
        'selection_end': 152,
        'selection_start': 152},
                       loc('unknown:<untitled> #37'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': -1,
        'sel-line-start': -1,
        'selection_end': 22,
        'selection_start': 22},
                       loc('unknown:<untitled> #38'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #39'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #40'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'help\n',
                           'help()\n',
                           'modules\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142},
                       loc('unknown:<untitled> #41'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #42'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #43'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['all(myRigger)\n',
                           'classmethod(myRigger)\n',
                           'locals\n',
                           'locals()\n',
                           'repr(oyRT)\n',
                           'myRigger = oyRT.oyRigger()\n',
                           'repr(myRigger)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3)\n',
                           'reload(oyRigTools)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #44'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'import os\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'print range(1,10)\n',
                           'print range(10,1)\n',
                           'print range(0,10)\n',
                           'print range(0,11)\n',
                           'print range(0,9)\n',
                           'print range(9,11)\n',
                           'import maya.OpenMaya as OpenMaay\n',
                           'myVector1 = OpenMaya.MVector( 1.0 ,0,0 )\n',
                           'myVector2 = OpenMaya.MVector( 0.0 ,1.0,0 )\n',
                           'print myVector1 ^ myVector2\n',
                           'print (myVector1 ^ myVector2).x\n',
                           'print (myVector1 ^ myVector2).y\n',
                           'print (myVector1 ^ myVector2).z\n',
                           'import maya.OpenMaya as OpenMaya\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #45'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'sel-line': -1,
        'sel-line-start': -1,
        'selection_end': 0,
        'selection_start': 0},
                       loc('unknown:<untitled> #46'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, useSplit=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=False)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lowerSp'\
                           'litCnt=3, us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=15,'\
                           ' us=True)\n',
                           'myRigger = oyRT.oyRigger(upperSplitCnt=3,lsc=5, '\
                           'us=True)\n',
                           'myRigger\n',
                           'myList = [1]\n',
                           'print myList[1]\n',
                           'print myList[0]\n',
                           'pm.Joint()\n',
                           'myJoint = pm.Joint()\n',
                           'print myJoint\n',
                           'listRelatives( myJoint, c = True)\n',
                           'pm.listRelatives( myJoint, c = True)\n',
                           'if pm.listRelatives( myJoint, c = True) is None:'\
                           '\n',
                           'if len(pm.listRelatives( myJoint, c = True)) == '\
                           '0:\n',
                           "\tprint 'there is no child'\n",
                           'print myList[-1]\n',
                           'myList[-1]\n',
                           'type(myList[-1])\n',
                           "'sadf'.ljust(32)\n",
                           "'sadf'.center(32)\n",
                           "'*' * 10\n",
                           "'*' * 20\n",
                           'range(10,3,-1)\n',
                           'range(a,s)\n',
                           'myList.insert(2, range(11,15))\n',
                           'myList = origMyList\n',
                           'myList.insert(2, range(11,15)[:])\n',
                           'origMyList = myList\n',
                           'myList.append(range(11,15))\n',
                           'myList = []\n',
                           'myList.append(0)\n',
                           'myList.append(1)\n',
                           'myList.append(2)\n',
                           'myList.append(3)\n',
                           'myList.append(4)\n',
                           'myList.append(5)\n',
                           'for i in range(len(myList)-1,-1,-1):\n',
                           '\tprint i\n',
                           'myList.remove(5)\n',
                           'print myList\n',
                           "myList[0] = 'a'\n",
                           "myList[1] = 'b'\n",
                           "myList[2] = 'c'\n",
                           "myList[3] = 'd'\n",
                           "myList[4] = 'e'\n",
                           "myList[5] = 'f'\n",
                           "myList.append('f')\n",
                           'myList.remove(1)\n',
                           'myList.pop(0)\n',
                           'myList\n',
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb')\n",
                           "pm.openFile('~/maya/projects/default/scenes/oyRi"\
                           "gTools_testScene_v001.mb',f=True)\n",
                           'pm.ls\n',
                           "pm.ls(type='joint')\n",
                           'import oyRigTools as oyRT\n',
                           'pm.undo\n',
                           'reload(oyRT)\n',
                           'myRigger = oyRT.oyLimbRigger()\n',
                           "myRigger.set_baseJoint('joint1')\n",
                           'myRigger.setupLimb()\n',
                           'pm.undo()\n',
                           '[1,2,3] * 2\n',
                           '[1,2,3] * -1\n',
                           'import maya._OpenMaya\n',
                           'import pymel\n',
                           'pymel.loadPlugin("closestPointOnCurve")\n',
                           'pymel.loadPlugin("spClosestPointOnCurve")\n',
                           'pymel.loadPlugin("closestPointOnCurve.py")\n',
                           "cPOC = pymel.createNode('spClosestPointOnCurve')"\
                           "\n",
                           'cPos\n',
                           'cPOC\n',
                           'exit()\n',
                           'import pymel as pm\n',
                           'pm.ls()\n',
                           "open('/home/ozgur/maya/projects/default/scenes/c"\
                           "losestPointOnCurve_test_v001.ma')\n",
                           "pm.fileOpen('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.openFile('/home/ozgur/maya/projects/default/s"\
                           "cenes/closestPointOnCurve_test_v001.ma')\n",
                           "pm.ls(type='nurbsCurve')\n",
                           "pm.ls(type='transform')\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('pos') )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t') )\n",
                           'outParam = 0.0\n',
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), outParam, 0.001, 'wor"\
                           "ld' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), true, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 0.001"\
                           ", 'world' )\n",
                           "pm.PyNode('curveShape1').closestPoint( pm.PyNode"\
                           "('locator1').getAttr('t'), True, outParam, 'worl"\
                           "d' )\n",
                           ' import maya.OpenMaya as OpenMaya\n',
                           'import maya\n',
                           'import maya.cmds as mc\n',
                           'mc.NoneType\n',
                           'from oyProjectManager import Asset\n',
                           'from oyProjectManager.Asset import Asset\n',
                           'pm.workspace.getName()\n',
                           'pm.workspace.name()\n',
                           'pm.workspace.name\n',
                           'reload(oySetProject)\n',
                           'import oySetProject\n',
                           'oySetProject.UI()\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #47'): {'attrib-starts': [],
        'first-line': 4,
        'folded-linenos': [],
        'history': {None: ['os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           'import java\n',
                           'import javax\n',
                           'import twisted\n',
                           'help.modules\n',
                           'help>modules\n',
                           'help\n',
                           'help()\n',
                           'modules\n',
                           'command = "geany -v -g maya.c.tags "\n',
                           'defaultPath = "/usr/autodesk/maya/include/maya"\n',
                           'os.listdir(defaultPath)\n',
                           'headerFiles = os.listdir(defaultPath)\n',
                           'defaultPath.join(headerFiles)\n',
                           'defaultPath.join(headerFiles+" ")\n',
                           '(" "+defaultPath).join(headerFiles)\n',
                           'print command,(" "+defaultPath).join(headerFiles'\
                           ')\n',
                           'import pydoc\n',
                           'import oyObjectPicker\n',
                           'pydoc.doc( oyObjectPicker )\n',
                           'pydoc.HTMLDoc( oyObjectPicker )\n',
                           'import maya.OpenMaya as OpenMaya\n',
                           'nAttr = OpenMaya.MFnNumericAttribute\n',
                           'nAttr = OpenMaya.MFnNumericAttribute()\n',
                           '1%2\n',
                           '4%4\n',
                           '4%2\n',
                           '3%2\n',
                           'import sys, os, re\n',
                           'from DB_ride\n',
                           'import pgdb\n',
                           'oyProjectManager.__version__\n',
                           'oyProjectManager.ProjectManager.__version__\n',
                           'import oyProjectManager\n',
                           'oyProjectManager.ProjectManager\n',
                           'myPMan = oyProjectManager.ProjectManager\n',
                           'myPMan.\n',
                           'myPMan._jobsFolder\n',
                           'myPMan._ser\n',
                           'myPMan._serverPath\n',
                           'myPMan._defaultProjectDefinitionFullPath()\n',
                           'os.path.join("a","b")\n',
                           'os.path.join("a","b","c")\n',
                           'os.path.join("E","b","c")\n',
                           'os.path.join("E:","b","c")\n',
                           'os.path.sep\n',
                           'reload( oyProjectManager )\n',
                           'myPMan = oyProjectManager.ProjectManager()\n',
                           'myPMan._defaultProjectDefinitionFullPath\n',
                           'import sys\n',
                           'os.walk("M:/JOBs")\n',
                           'for path, subdirs, files in os.walk("M:/JOBs"):\n',
                           'for path, subdirs, files in os.walk("E:/ozgur"):'\
                           '\n',
                           '\tprint subdirs\n',
                           'import os\n',
                           'for path, subdirs, files in os.walk("E:/ozgur/te'\
                           'mp"):\n',
                           '    print subdirs\n',
                           'os.listdir("M:/JOBs")\n']},
        'sel-line': 3,
        'sel-line-start': 133,
        'selection_end': 137,
        'selection_start': 137},
                       loc('unknown:<untitled> #48'): {'attrib-starts': [],
        'first-line': 0,
        'folded-linenos': [],
        'history': {None: ['import os\n',
                           'os.name\n',
                           'os.uname\n',
                           'os.uname()\n',
                           'print os.name\n',
                           'import ply.lex\n',
                           'clear\n',
                           'cls\n',
                           'import cherry\n',
                           'import cherrypy\n',
                           "myRotOrder.getAxis('1')\n",
                           "myRotOrder = rotationOrder('0')\n",
                           'myRotOrder.getAxis(1)\n',
                           'import sys\n',
                           'print path for sys.path\n',
                           'sys.path\n',
                           'for path in sys.path: print path\n',
                           'import pymel\n',
                           'import pymel as pm\n',
                           'pm.__version__\n',
                           'myRotOrder = oyAutoRig.rotationOrder()\n',
                           "myRotOrder = oyAutoRig.rotationOrder('1')\n",
                           'import oyAutoRig\n',
                           "myRotOrder = oyAutoRig.rotationOrder('0')\n",
                           'testObj = pm.PyNode\n',
                           "myLogFile = open('/var/log/kern.log','r')\n",
                           'myLogFile.newlines\n',
                           'myLogFile.newlines()\n',
                           'myLogFile.readlines\n',
                           'myLogFile.readlines()\n']},
        'sel-line': 3,
        'sel-line-start': 138,
        'selection_end': 142,
        'selection_start': 142}}
proj.env-vars = {None: ('default',
                        [''])}
proj.indent-style-policy = 'warn'
proj.pyexec = {None: ('custom',
                      '$(MAYA_LOCATION)/bin/mayapy')}
proj.pypath = {None: ('custom',
                      '$(PYTHONDEV):$(PYTHONDEV)/pymel:$(PYTHONDEV)/oy-maya-'\
                      'scripts/oyTools:$(MAYA_LOCATION)/bin/:$(NUKE_LOCATION'\
                      ')/plugins:$HOUDINI_LOCATION/houdini/scripts/python')}
search.search-history = [u'please update',
                         u'setCheckState',
                         u'self._numOfAsset',
                         u'print',
                         u'started',
                         u'getAssetTupleListFromEnvironment',
                         u'checkReferenceVersions',
                         u'numOfAss',
                         u'selectAllAssets',
                         u'tupple',
                         u'assetTuppleList',
                         u'_assetList',
                         u'houdiniEnv.',
                         u'self.environment',
                         u'environment',
                         u'_assetObject',
                         u'self.env',
                         u'self._assetObject',
                         u'_self._assetObject',
                         u'abstractClasses']
