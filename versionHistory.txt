Version History :
-----------------
v9.12.24
- projectModel: the getAllAssetFileNamesForType method in sequence object was
  returning full paths instead of file names

v9.12.23
- projectModel: updated the sequence classes getAllAssets, getAllAssetsForType
  methods. The new versions uses glob and some optimizations to get all the
  assets in a sequence

v9.12.21
- houdiniEnv: fixed the HIH environment variable retrieval under windows
- mayaEnv: trying to reduce the dependency to oyAuxiliaryFunctions.py

v9.12.20
- the houdini environment now has the ability to read the recent files history
  to get a valid project and sequence names
- the Singleton class is now carried to the a new file called
  abstractClasses.py to let all the modules have access to it
- the baseName and subName fields in the assetManager UI now has the same
  vertical stretch weights so they will be in the same size from now on
- the version history and todo list are now saved to individual text files

v9.12.15
- the assetManager UI now displays the host environments name on the window
  title

v9.12.12
- the UI is not closed after referencing or importing an asset, to help the
  user easily reference multiple files
- started developing of the SuperAsset class
- the cancel button renamed to close

v9.12.2
- The alternate shot letter is turned to upper case
- The sequence object now can add alternative shots
- ProjectManager UI is updated to have the ability to add alternative shots

v9.12.1
- fixed a little update bug in the asset manager interface that causes the
  asset list widget to list wrong results, also fixed the subName_lineEdit
  update issue

v9.11.30
- for mayaEnv the assetManager now checks the referenced assets against newer
  versions of that asset and warns the user (for now) to update them
- the Asset class now checks the input project and sequence object against
  being None, if at least one of them is None the asset object becomes invalid
- Asset class now has a two new methods which called isNewVersion and
  isNewRevision, which does the same thing that the isLatestVersion and
  isLatestRevision methods were doing in previous versions. The
  isLatestVersion and isLatestRevision methods now return true if the version
  and the revision numbers are the last in their series and they return True if
  the base doesn't exists
- the assetManagers baseName and subName comboBoxes are replaced with
  listWidgets to let the user see all the alternatives of the current asset at
  the first sight

v9.11.25
- houdiniEnv now changes the $JOB environment variable according to the given
  assetObject while saving or opening the file

v9.11.24
- in houdiniEnv the path seperators were replaced with \\ even the os is linux,
  this is fixed now
- assetManager, the ui was not closing itself after a succesfull save operation
  if the environment is something other than maya, this is fixed now

v9.11.22
- mayaEnv now uses the recent file info only if the project is set to the same
  project with the recent files, if it doesn't match, the interface initialized
  with the current project

v9.11.20
- fixed path separator issues again, this time for houdini, and the reverse fix
  as the usual one, I mean, houdini uses / instead of the fucking windows' \\
  under windows

v9.11.19
- fixed an issue about mayaEnv
- in houdiniEnv, while saving an asset, the script now creates the asset folder
  if it doesn't exists

v9.11.18
- fixed the fucking windows path problem in mayaEnv again
- assetManager UI now has a check box that enables the user to list maximum n
  number of latest entry in the assets list

v9.11.17
- file referencing in maya now uses name spaces
- added getFileNameWithoutExtension to Asset class
- mayaEnv now tries to get an asset name more robustly

v9.11.11
- queries to assets with no previous versions was failing, this error has been
  fixed

v9.11.9
- fixed an error, occurred when a new type asset name is send to an old type
  project

v9.11.7
- when an asset object is initialized with a wrong file name, guessing the
  fields from file name will result index error, it is now fixed

v9.11.6
- mayaEnv now saves the asset file path to the recent files list in save and
  open actions, and retrieves the data from that list if there is currently
  no file opened

v9.11.3
- fixed, houdini was not opening files with asset manager

v9.11.2
- switched to a new versioning scheme, where the date is used as the version
  number like in ubuntu/kubuntu
- added houdini support

v0.7.8
- the asset manager ui now updates the revision and version to the latest if
  any of the sequence, assetType, shotNumber, baseName or subName field changes
- in asset manager ui, the subName field is reset if the assetType changed
- in asset manager ui, the subName field is cleared if there is no valid asset
  found from the input fields
- in asset manager ui, if there is no valid asset found in
  updateRevisionToLatest and updateVersionToLatest the fields are set to
  default values which are 0 and 1 respectly

v0.7.7
- the baseName and subName fields now are conditioned so that only the first
  letter is forced to be uppercase but the others can both be upper and lower
  case characters, and they are not validating any string if the length of the
  string is zero
- the Sequence classes getAllAssetFileNamesForType, getAllAssets and
  getAllAssetsForType methods now compares the lowercase fileName with the
  asset folders lowercase name to prevent case issues while retrieving assets
- Asset classes getAllVersions uses the fileName instead of the asset objects,
  to introduce some speed increases in long versioned asset objects
- Asset class now has a new method called getAllVersionNames, which returns all
  the version names as a list of string, it is much faster than getAllVersions
  because it doesn't create any asset object
- Asset class now has two new methods for getting the latest version and
  revision numbers and assets, which uses the getAllVersionNames to quickly get
  the version and revision numbers
- AssetManager interface class now uses the fast methods to retrieve asset
  names, versions and revisions quickly

v0.7.6
- Structure class now initializes the variables with list() not with None
- Structure class now has a method called fixPathIssues, to fix the path issues
- Structure class now has a method called removeDuplicate to remove duplicate
  entries
- Structure classes addShotDependentFolder, addShotIndependentFolder and 
  addOutputFolder now checks if the given folderName allready exists in the
  structure to prevent duplicate entries
- fixed a bug in Sequence class, where it adds outputFolders to the list
  without first clearing the list while saving the settings

v0.7.5
- added isValid method to Sequence class to check if the sequence is valid
- added getValidProjects method to Database class to get valid projects only
  (valid projects are the projects that has at least one valid sequence, and a
  valid sequence is the sequence that exists and has a .settings.xml file)
- the assetManager UI now only lists valid projects
- added the Singleton class
- the Database class is now derived from Singleton class
- to fix the update problem in the projectManager the cache in Database classes
  getProject method has been removed
- the assetManager now replaces the user initials with the first in the list if
  Database.getLastUser method returns None, thus no last user record has been
  found
- the baseName and subName fields are now have sorted data
- the Database.getUserInitials now returns a sorted user initials list

v0.7.2
- fixed nuke file path problem under windows, while querying the file name and
  recent file list, nuke was sending the path with wrong path seperator, it is
  now replaced with correct path seperator

v0.7.1
- InputBasedCachedMethod now supports methods with both arguments and keyword
  arguments
- fixed assetManager_UI and projectManager_UI was using __init__ from QDialog
  instead of QMainWindow
- added printing of the info of the operation while saving an asset

v0.7.0
- reorganized the interface of assetManager to have a more optimized look, and
  to reduce the code duplication
- Project and Sequence objects are now conditioned so they can not have numbers
  at the begining of their names
- Updated the projectManager ui so no numbers are allowed at the begining of
  the project and sequence names

v0.6.3
- now baseName and subName fields allow numbers to be used but not at the
  beggining of the string
- in assetManager ui, both the save and open asset tabs are now updated with
  the incomming asset infos from the environment

v0.6.2
- baseName is now capitalized after validation
- fixed _validateRevString and _validateVerString in Asset class
- added assetStatus to save and export methods of the assetManager interface to
  check if the current asset from the fields is a valid asset
- fixed path issues for '/' under windows, it was caused by the settings file
  separating the paths always with '/'

v0.6.1
- fixed __main__ function for the package, now the project manager user
  interface pops up by default
- fixed window title in projectManager ui
- added asset validation check in the assetManager ui before trying to get any
  variable from the asset, to prevent errors
- added removeOutputFolder to structure class
- removed some of the methods from the Sequence object, because they were just
  simple wraps of Structure objects corresponding methods. One can use directly
  the structure object by using Sequence.getStructure and then calling the same
  methods
- added these methods to Structure object
    removeOutputFolder
    removeShotDependentFolder
    removeShotIndependentFolder

v0.6.0
- connected the assetType_comboBox1 index change signal to assetList_widget1's
  update method, and re-enabled assetType_comboBox2's update signal being
  invoked from assetType_comboBox2
- added an input based cache system to the cache module
- added whatIsThis help to the interface elements
- renamed assetIO_mainWindow to assetManager (and the other two files are
  renamed too)
- renamed projectManament_mainWindow to projectManager (and the other two files
  renamed are too)

v0.5.6
- the assetList_widget1 is now listing all the versions of the currently
  selected asset

v0.5.5
- in nuke, if there is no file opened, thus no file name found, the script
  now tries to get the path variables from the recent file list
- to be able to mass process the sequences in the server, these new functions
  has been added:
    addExtensionToIgnoreList
    addNewAssetType
    addNewOutputFolder
    addNewShotDependentFolder
    addNewShotIndependentFolder
    exists
    removeExtensionFromIgnoreList
  because these functions edits the settings of the sequence, to make the
  changes permenant, the Sequence.saveSettings() should be invoked afterwards,
  and for the folder functions, Sequence.createStructure() and a following
  Sequence.saveSettings() should be invoked
- the functions saveSettings and readSettings in Sequence object are now
  public

v0.5.1
- fixed file paths for windows environment in NUKE environment
- fixed initialization of envStatus variables in some functions in the
  assetIO_mainWindow

v0.5.0
- to prevent name clashes all the environment scripts are renamed by adding Env
  to the name of the script ( ex: maya.py -> mayaEnv.py )
- added support to Nuke environment
- listing of non-asset objects or files with unwanted extensions are fixed now

v0.4.2
- fixed the revision check in the interface
- tried to remove Turkish characters from the interface fields but it is not
  working properly for now

v0.4.1
- fixed the wrong widget sizes assetIO UI

v0.4.0
- range tools now works properly with unicode inputs
- maya now always gets the path from the workspace
- fixed getting and setting the user initials in the interface
- fixed getting of the HOME path of the user for Windows
- added the ability to export the selected content as a new asset instead of
  just saving them

v0.3.4
- introduced a lot of speed optimizations, eliminated all the unnecessary asset
  object creations in the interface, but this introduced listing of non-asset
  objects (like smr files) in the interface, this will be fixed in next
  versions
- the interface tries to get all the asset information from the asset file
  names instead of asset objects
- fixed asset retrieval in open tab in the interface, caused by switching from
  a sequence that supports subNames to another which doesn't. The subName field
  was left in 'MAIN' and the code was trying to get asset file names with a
  subName of 'MAIN' in a sequence which doesn't support subName fields.
- getting the latest version or revision for an asset is now much faster
- cleaned the code a little bit

v0.3.3
- introduced some Pythonic optimizations to the code
- added getAllAssetsForType method to the Sequence object
- removed valid asset checks in the getAllAssetsForType method
- added getAllAssetFileNamesForType method to the Sequence object to quickly
  get the asset fils
- to retrieve asset file names very quickly, now all the filtering done over
  string variables, not in Asset objects

v0.3.2
- all str's are converted to unicode

v0.3.1
- added check for unsaved changes in current scene while oppening an asset
- the environment script maya, now tries to fix the path seperator for windows

v0.3.0
- added check for the asset path while saving, it was giving errors for
  non-existing asset paths
- added open functionalities
- fixed wrong fileName creation in Asset objects
- for sequences that doesn't support subName fields, int the Asset object,
  asset file name was not including the notes part of the file name, it is now
  fixed
- asset interface now ask the user permission to overwrite a file, instead of
  canceling the saving process ( it is not allowed though to save over a file )
- updated the render file name in MAYA environment to hold the subName field in
  case the sequence supports it
- added interface for project management (ie. creaeting projects, adding shots
  etc. )

v0.2.0
- now the Database object reads the settings from the databaseSettings.xml
  in the project root
- added half support for multiple servers (full support will be in near future)
- fixed the creation of a sequence from a project object
- removed the project management functionalities to another interface
- renamed the current mainWindow to assetIO_mainWindow
- added the environment variable to the AssetType object
- added the output attribute to the Structure node, and updated the
  defaultSettings.xml. The output attribute will hold the output folder
  poperties for types like render and comp.
- created environment module, that holds a environment specific scripts for
  actions like save, open, import

v0.1.5
- added the ability to save under MAYA environment

v0.1.4
- finished converting the single script to a python package
- converted the window style to Plastique

v0.1.3
- scripts are moved to their own directory to make the system clean
- started to convert the single script to a python package

v0.1.2
- switched to QMainWindow from QDialog
- added the version information to the window title

v0.1.1
- the MainDialog object now stores a local Project and a Sequence object to
  help its methods to use the cache system while querying the data
- increased the maxTimeDelta in CachedMethod attribute to 60 seconds

v0.1.0
- Added support for old style of Asset naming, which has no subName field, this
  support made the code a little bit unreadable and dirty so it needs to be
  removed as soon as this support is obsolute

v0.0.9
- in previous versions, even there was a parser for the database node in the
  sequence settings, it was not used, so the sequence was running with its
  default values for some variables, it is fixed now
- added functionalities to open tab in the UI, this update introduced a lot of
  code duplication, this will be fixed in next versions
- now the interface tries to keep the assetType fixed from one sequence to
  another sequence
- replaced the saveCancel_buttonBox with individual Save and Cancel buttons
- convertToShotString in Sequence object now accepts both integers and strings
  as shotNumber argument, and converts them properly to shotStrings
- Asset objects getAllVersions method was trying to dive in to the file system
  to get the other versions, now it uses the parentSequence to get all the
  versions, it has a little bit more overhead but later on if we switch to a
  real database it will be easy to implement this way
- added extensionsToIgnore settings to Sequence objects, to prevent listinings
  of files which are not actually an Asset but has valid file name structure
  (for example the .smr files have correct naming convention but they are not
  actual assets)
- the asset info variables are now initialized with None instead of ''
- in Asset object, it is now possible to query the versions of an Asset object
  without supplying all of the information (_fullInfo), the baseName, subName
  and typeName (_baseInfo) is now enough to get a list of Asset objects
- Asset objects extension is now queryable

v0.0.8
- Asset objects now accepts one of the rev/revString and ver/verString info
  variables when setting the infoVariables
- Asset objects now has exists and baseExists attributes. exists is True when
  the file exists, baseExists is True when there are files starting with same
  critiqueName
- Asset objects now has getPathVariables() method that returns the
  pathVariables
- Asset objects now has getCritiqueName() method that returns the critique part
  of the asset fileName, which is the string baseName_subName_typeName
- Asset objects now has several get methods for getting the whole info about
  that particular asset
- Database object now has a method that converts a path in to a project and
  sequence name if possible
- Sequence objects now can convert a shotString to shotNumber, which is also a
  string
- Fixed the alignment problems in the MainDialog interface elements
- changed the baseName and subName lineEdit fields to comboBox, to let the user
  choose from a list of available choises for the current asset. For example,
  if the user choose MODEL for assetType then all the model assets baseNames
  are listed in baseName comboBox, and if the user selects one of the MODELs
  then the subName comboBox is filled with subNames of that MODEL...
- added a main function for the script to be used from the command line
- the MainDialog now initializes with the environment, fileName and path
  variable, so it is now possible to fill the fields with the info that comes
  from those variables
- "get latest revision" and "get latest version" buttons are now working
- the MainDialog now can return an Asset object build with the data from the
  fields

v0.0.7
- added a main function
- added an environment option to setup the program for that environment
  like( MAYA, NUKE, HOUDINI, PHOTOSHOP etc. )
- changed the commented region at the start (this section) to a doc string

v0.0.6
- fixed CachedMethod, it was storing the data in class instead of the
  instance object, so two objects in the same type were sharing the same
  cache, resulting false information, it is fixed now by completely re-writing
  the CachedMethod class
- the assetTypes comboBox was complaining about the assetTypes variable
  to be None, this is fixed now by checking the assetTypes variable against
  None

v0.0.5
- added an PyQt4 interface
- added CachedMethod function decorator to cache functions return values
  over a period of time

v0.0.4
- added asset filtering routines to help getting data more quickly

v0.0.3
- Sequence can now query all assets, all asset in specific type and all asset
  of a specific user
- Sequence uses a simple cache for querying assets
- for all the classes added 'get/set' prefixes for the functions that gets or
  sets something

v0.0.2
- database, project and sequence classes are now working properly, but they
  definitely need more attention

v0.0.1
- intial development version