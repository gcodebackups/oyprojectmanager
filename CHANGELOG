Version History
===============

0.2.0
-----

* The system now uses SQLAlchemy Declarative in its data models. And a new
  settings file located in the Project root with the name ``.metadata.db`` is
  governed to hold the related data for that Project. The system doesn't scan
  the file system anymore but instead uses this ``.metadata.db`` SQLite3 file.
  There are a lot of interface changes in the classes:
  
  * The Project.sequenceNames and Project.updateSequenceList methods are no
    longer needed and they don't exist anymore.
  
  * There is no ``readSettings`` method in any of the classes anymore. All the
    settings are read from the database (by retrieving an instance from the db)
    as the instance is created.
  
  * All the XML parsing code is removed. So there is no backward compatibility.
  
  * It was very hard keep the compatibility with the previous versions. So,
    the version 0.2.0 is not backward compatible. The system will look with
    blinking eyes if you try to use it with an old Project.
  
  * The methods:
    
    * ``_parseSequenceDataNode``
    * ``_parseStructureNode``
    * ``_parseAssetTypesNode``
    * ``_parseShotListNode``
    * ``_parseShotDataNode``
    * ``create``
    * ``createShots``
    * ``_sortShots``
    * ``getShot``
    * ``shotList``
    * ``structure``
    * ``createStructure``
    * ``convertToShotString``
    * ``convertToRevString``
    * ``convertToVerString``
    * ``convertToShotNumber``
    * ``convertToRevNumber``
    * ``convertToVerNumber``
    * ``shotPadding``
    * ``shotPrefix``
    * ``getAssetTypes``
    * ``getAssetTypeWithName``
    * ``getAssetFolders``
    * ``projectName``
    * ``getAllAssets``
    * ``getAllAssetsForType``
    * ``getAllAssetFileNamesForType``
    * ``getAssetBaseNamesForType``
    * ``getAllAssetsForTypeAndBaseName``
    * ``filterAssets``
    * ``filterAssetNames``
    * ``generateFakeInfoVariables``
    * ``aFilter``
    * ``undoChange``
    * ``path``
    * ``fullpath``
    * ``projectName``
    * ``timeUnit``
    * ``isValid``
    * ``addNewAssetType``
    * ``exists``
    * ``noSubNameField``
    

    of the :class:`~oyProjectManager.core.models.Sequence` are removed. They
    were preliminarily used for fake database query like behaviour which is
    greatly handled by SQLAlchemy right now.

* All the models are now placed under one module called
  :mod:`oyProjectManager.core.models`. Thus deleted the old
  ``oyProjectManager.models.project``, ``oyProjectManager.models.asset``,
  ``oyProjectManager.models.user`` modules and the ``oyProjectManager.models``
  module itself.

* ``utils.convertRangeToList`` is renamed to
  :func:`~oyProjectManager.utils.uncompress_range`\ .

* Introduced the new :class:`~oyProjectManager.core.models.Version` class
  which from now on will hold the references to the individual files for every
  version created for an :class:`~oyProjectManager.core.models.Asset` or
  :class:`~oyProjectManager.core.models.Shot` in the repository. So contrary to
  the previous implementation an :class:`~oyProjectManager.core.models.Asset`
  is not the reference of the individual version files of itself any more.

* Introduced the :class:`~oyProjectManager.core.models.VersionableBase` class
  in which the :class:`~oyProjectManager.core.models.Shot` and
  :class:`~oyProjectManager.core.models.Asset` is derived from. Thus allow them
  to hold references to :class:`~oyProjectManager.core.models.Version`\ s.

* The :class:`~oyProjectManager.core.models.Repository` now uses the ``REPO``
  environment variable instead of ``STALKER_REPOSITORY_PATH``.

* All the project settings are now stored in the
  :class:`~oyProjectManager.core.models.Project` class.

* The ``timeUnit`` concept is replaced with ``fps``. To define the timeUnit
  (which is very much a specific naming for Maya) set the
  :attr:`~oyProjectManager.core.models.Project.fps` of the
  :class:`~oyProjectManager.core.models.Project` class.

* It is now possible to set a project image format by setting the
  :attr:`~oyProjectManager.core.models.width`,
  :attr:`~oyProjectManager.core.models.height`,
  :attr:`~oyProjectManager.core.models.pixel_aspect` attributes of the
  :class:`~oyProjectManager.core.models.Project` class.

* The :class:`~oyProjectManager.core.models.Shot` class now initializes with
  the :attr:`~oyProjectManager.core.models.Shot.number` attribute and the
  :attr:`~oyProjectManager.core.models.Shot.code` attribute of the
  :class:`~oyProjectManager.core.models.Shot` composed from the
  :attr:`~oyProjectManager.core.models.Shot.number` and the
  :attr:`~oyProjectManager.core.models.Project.shot_prefix` and
  :attr:`~oyProjectManager.core.models.Project.shot_padding` attribute of the
  :class:`~oyProjectManager.core.models.Project` class.

* There is no ``Structure`` class anymore. The function is accomplished by the
  :class:`~oyProjectManager.core.models.Project` class itself.

* The system now uses the ``OYPROJECTMANAGER_PATH`` to search a file called
  ``conf.py`` and uses this file to configure the system. See
  :mod:`~oyProjectManager.config` documentation for more details.

* Renamed the environment modules:
  
  * ``houdiniEnv.py`` --> ``houdini.py``
  * ``mayaEnv.py`` --> ``maya.py``
  * ``nukeEnv.py`` --> ``nuke.py``
  * ``photoshopEnv.py`` --> ``photoshop.py``
  
  To ease the move of separate environment class concept, which will be
  introduced in version 0.3.0

